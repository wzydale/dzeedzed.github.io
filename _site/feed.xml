<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dadi &quot;D.Z.&quot; Zhang</title>
    <description>Dadi &quot;D.Z.&quot; Zhang | Coder. Developer. Language enthusiast. Go fanatic. Jays fan. Worships 442.
</description>
    <link>http://dzed.me/</link>
    <atom:link href="http://dzed.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 04 Aug 2016 15:41:07 -0400</pubDate>
    <lastBuildDate>Thu, 04 Aug 2016 15:41:07 -0400</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>My Intramural Stats</title>
        <description>&lt;h2 id=&quot;casual-slopitch---team-individuals-1-king-louis-and-his-faithful-knights&quot;&gt;Casual Slopitch - Team: Individuals 1 (King Louis and His Faithful Knights)&lt;/h2&gt;

&lt;h1 id=&quot;may-19-2016---14-13-views&quot;&gt;May 19, 2016 - 14-13 Views&lt;/h1&gt;

&lt;p&gt;2B -&amp;gt; 1B (PO) -&amp;gt; C -&amp;gt; RF&lt;br /&gt;
Batted 9th: 3-3, 2B, 2 1B, 2 RBI, R&lt;/p&gt;

&lt;h1 id=&quot;may-25-2016---8-9-tsr&quot;&gt;May 25, 2016 - 8-9 TSR&lt;/h1&gt;

&lt;p&gt;1B (DP, unassisted) -&amp;gt; 3B (E5) -&amp;gt; LF&lt;br /&gt;
Batted 7th: 1-2, 1B, FC, RBI, 2R&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;casual-7-vs-7-soccer-football---team-individuals-2&quot;&gt;Casual 7 vs. 7 Soccer (Football) - Team: Individuals 2&lt;/h2&gt;

&lt;h1 id=&quot;may-17-2016---0-6-team-hunnies&quot;&gt;May 17, 2016 - 0-6 Team Hunnies&lt;/h1&gt;

&lt;p&gt;RB -&amp;gt; CB -&amp;gt; DM&lt;/p&gt;
</description>
        <pubDate>Fri, 27 May 2016 23:00:00 -0400</pubDate>
        <link>http://dzed.me/blog/2016/05/27/Intramurals.html</link>
        <guid isPermaLink="true">http://dzed.me/blog/2016/05/27/Intramurals.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>JobMine Updates - Spring 2016</title>
        <description>&lt;h1 id=&quot;may-7-2016&quot;&gt;May 7, 2016&lt;/h1&gt;

&lt;p&gt;Shortlisted 28 job postings on JobMine.&lt;/p&gt;

&lt;h1 id=&quot;may-8-2016&quot;&gt;May 8, 2016&lt;/h1&gt;

&lt;p&gt;Added 5 more. Now most jobs on my shortlist are dev jobs.&lt;/p&gt;
</description>
        <pubDate>Sun, 08 May 2016 02:20:00 -0400</pubDate>
        <link>http://dzed.me/blog/2016/05/08/Jobmine.html</link>
        <guid isPermaLink="true">http://dzed.me/blog/2016/05/08/Jobmine.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Courses I Plan to Take at UWaterloo (BCS &amp; Data Science)</title>
        <description>&lt;p&gt;3 Winter terms, 1 Spring term, 1 Fall term&lt;/p&gt;

&lt;h2 id=&quot;b---winter-2017&quot;&gt;2B - Winter 2017&lt;/h2&gt;
&lt;p&gt;CS 240 - Data Structures and Data Management&lt;br /&gt;
CS 241 - Foundations of Sequential Programs&lt;br /&gt;
CS 251 - Computer Organization and Design&lt;br /&gt;
MATH 239 - Introduction to Combinatorics&lt;br /&gt;
CO 250 - Introduction to Optimization&lt;/p&gt;

&lt;h2 id=&quot;a---fall-2017&quot;&gt;3A - Fall 2017&lt;/h2&gt;
&lt;p&gt;CS 341 - Algorithms&lt;br /&gt;
CS 350 - Operating Systems&lt;br /&gt;
STAT 341 - Computational Statistics and Data Analysis&lt;br /&gt;
SCI 206 - The Physics of How Things Work &lt;br /&gt;
ENGL 306A - Introduction to Linguistics&lt;/p&gt;

&lt;h2 id=&quot;b---spring-2018&quot;&gt;3B - Spring 2018&lt;/h2&gt;
&lt;p&gt;CS 486 - Introduction to Artificial Intelligence&lt;br /&gt;
STAT 440 - Computational Inference&lt;br /&gt;
CS 370 - Numerical Computation&lt;/p&gt;

&lt;h2 id=&quot;a---winter-2019&quot;&gt;4A - Winter 2019&lt;/h2&gt;
&lt;p&gt;CS 456 - Computer Networks&lt;br /&gt;
CS 343 - Concurrent and Parallel Programming&lt;br /&gt;
CS 485 - Machine Learning: Statistical and Computational Foundations&lt;/p&gt;

&lt;h2 id=&quot;b---winter-2020&quot;&gt;4B - Winter 2020&lt;/h2&gt;
&lt;p&gt;CS 452 - Real-time Programming&lt;/p&gt;
</description>
        <pubDate>Mon, 02 May 2016 18:56:00 -0400</pubDate>
        <link>http://dzed.me/notes/top/2016/05/02/course-planning.html</link>
        <guid isPermaLink="true">http://dzed.me/notes/top/2016/05/02/course-planning.html</guid>
        
        
        <category>notes</category>
        
        <category>top</category>
        
      </item>
    
      <item>
        <title>STAT 231 - Statistics</title>
        <description>&lt;pre&gt;&lt;code&gt;STAT 231 - Statistics
Instructor: Surya Banerjee
Location: DC 1350
Time: Mondays and Wednesdays 2:30am - 3:50pm
Tutorials: DC 1351 Mondays 5:30pm - 6:20pm
Term: Spring 2016
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;may-2-2016---lecture-1&quot;&gt;May 2, 2016 - Lecture 1&lt;/h2&gt;

&lt;p&gt;Email: s22baner@uwaterloo.ca or suryabanerjee@gmail.com&lt;/p&gt;

&lt;p&gt;Course Marking Scheme: 3 Tutorial Quizzes (TQ) and 2 Midterms&lt;/p&gt;

&lt;p&gt;STAT 231 is the reverse of STAT 230. E.g. We toss a coin 100 times, we get 60 heads. In STAT 230, we calculate the probability of that happening (binomial distribution, 100 and 0.5, P(X=60)) with all the parameters given (P = 0.5 to get a head for a fair coin). In STAT 231, we try to find the parameters by experiments, and try to infer what we can say about the “fairness” of the coin.&lt;/p&gt;

&lt;p&gt;MLB: Between 1901-1941, batters with BA .400+: 11. 1941 onwards: 0. Why? Use statistics to find out.&lt;/p&gt;

&lt;p&gt;Kansas Weathermen: They are correct about whether it will rain the next day about 85% of the time. Good record, right? However, it only rains about 10% of the time in Kansas. So if I go to the weather broadcasting station and say “no rain tomorrow” and then go home, I will be statistically more accuarate that these meteorologists.&lt;/p&gt;

&lt;p&gt;Baseball Pundits: Pundits are right about the outcome of baseball games about 48% of the time. Literally worse than a coin.&lt;/p&gt;

&lt;p&gt;In STAT 231, we learn how to test claims and check for correlation and causation. How can we make the leap from correlation to causation? (Recommended reading: Freakanomics)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;introduction-to-data-analysis&quot;&gt;Introduction to Data Analysis&lt;/h2&gt;

&lt;p&gt;Data can be classified into two categories: numerical and categorical (non-numerical).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Numerical Data&lt;/strong&gt; is either discrete or continuous. Discrete data (e.g. number of accidents) takes integer values, while continuous data (e.g. height, weight) measure non-integer values.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Categorical Data&lt;/strong&gt; is either ordinal (if there’s an underlying order, e.g. on a scale from 1 to 10, 1 being least satisfied and 10 being most satisfied) or non-ordinal (no order, e.g. nationality, favorite color).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Transformation&lt;/strong&gt; {x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;,…, x&lt;sub&gt;n&lt;/sub&gt;}&lt;br /&gt;
y&lt;sub&gt;i&lt;/sub&gt; = f(x&lt;sub&gt;i&lt;/sub&gt;) is a transformation.&lt;/p&gt;

&lt;p&gt;An affine transformation is a linear transformation: y&lt;sub&gt;i&lt;/sub&gt; = ax&lt;sub&gt;i&lt;/sub&gt; + b&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Coding&lt;/strong&gt; is the conversion of categorical data into numerical data.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;data-summaries&quot;&gt;Data Summaries&lt;/h2&gt;

&lt;p&gt;We want to extract important information about data.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Numerical: come up with numbers that represent different properties of the data set&lt;/li&gt;
  &lt;li&gt;Graphical: graph that tells us the shape of the data set&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are some properties of interest:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Centre of the data set -&amp;gt; &lt;strong&gt;Central Tendency&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How volatile is the data set -&amp;gt; &lt;strong&gt;Dispersion&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If the data set is symmetric -&amp;gt; &lt;strong&gt;Measures of Symmetry&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How “fat” the tails of the data set are (i.e. the size of extrema) -&amp;gt; &lt;strong&gt;Kurtosis&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;measures-of-central-tendency&quot;&gt;Measures of Central Tendency&lt;/h2&gt;

&lt;p&gt;Data set: {y&lt;sub&gt;1&lt;/sub&gt;, y&lt;sub&gt;2&lt;/sub&gt;,…, y&lt;sub&gt;n&lt;/sub&gt;}&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample Mean:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Property: The sum of the deviations of the observations from the sample mean is 0.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Geometric Mean&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Harmonic Mean&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-4-2016---lecture-2&quot;&gt;May 4, 2016 - Lecture 2&lt;/h2&gt;

&lt;p&gt;Lecture notes will be posted every weekend.&lt;br /&gt;
Practice questions (with solutions) will be posted this week. First tutuorial quiz on May 17 (T), 2016 (11:25am).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Outline&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;measures of central tendency: medias, quartiles, mode&lt;/li&gt;
  &lt;li&gt;measures of variability: range, IQR, variance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample -&amp;gt; Predictions about the population&lt;/p&gt;

&lt;h1 id=&quot;data-summaries-1&quot;&gt;Data Summaries&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Centre: CENTRAL TENDENCY&lt;/li&gt;
  &lt;li&gt;Variability: DISPERSION&lt;/li&gt;
  &lt;li&gt;Tails are similar: SYMMETRY&lt;/li&gt;
  &lt;li&gt;Frequency of Extreme Obersevations: KURTOSIS&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;numerical-and-graphical-summaries&quot;&gt;Numerical and Graphical Summaries&lt;/h1&gt;

&lt;p&gt;{y&lt;sub&gt;1&lt;/sub&gt;, y&lt;sub&gt;2&lt;/sub&gt;, … , y&lt;sub&gt;n&lt;/sub&gt;}&lt;/p&gt;

&lt;p&gt;Sample mean: 1/n sigma y&lt;sub&gt;i&lt;/sub&gt;&lt;br /&gt;
Properties: sigma (y&lt;sub&gt;i&lt;/sub&gt; - mean) = 0&lt;/p&gt;

&lt;p&gt;Also, affine transformation preserves linear combinations (i.e. the arithmetic mean changes accordingly by the affine transformation)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Median&lt;/strong&gt;: the middle most observations&lt;br /&gt;
arrange the data set in ascending order and pick the middle one. e.g. 1, 3, 7, 13, 25. Median is 7.&lt;/p&gt;

&lt;p&gt;Median is not too sensitive with extreme values.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quartiles&lt;/strong&gt;: Q1: lower quartile, Q3: upper quartile&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Percentiles&lt;/strong&gt;: Instead of dividing into 4 parts, the data is divided into 100 parts.&lt;/p&gt;

&lt;p&gt;Eg. p=0.25, m = (n+1) * p, n is the number of observations&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mode&lt;/strong&gt;: Observation that occurs with the maximum frequency&lt;/p&gt;

&lt;p&gt;St.Petersburg’s Paradox. We care about averages (expected values), but also risk. Variability is a very important property of a data set. E.g. Country A 0 0 0 1000 and Country B 250 250 250 250
Goalie A 0 6 0 6 0 6 0 6 Goalie B 3 3 3 3 3 3 3&lt;/p&gt;

&lt;h1 id=&quot;measures-of-volatility&quot;&gt;Measures of Volatility&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Range&lt;/strong&gt;: Max - Min&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Interquartile Range (IQR)&lt;/strong&gt;: IQR = Q3 - Q1&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample Variance and Sample Standard Deviation&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample Variance&lt;/strong&gt;: s&lt;sup&gt;2&lt;/sup&gt; = 1/(n-1) sigma (y&lt;sub&gt;i&lt;/sub&gt; - y average)&lt;sup&gt;2&lt;/sup&gt; is approximatey the average of the squared deviation from the mean&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Standard Deviation&lt;/strong&gt;: s = positive square root of s^2, the sample variance&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mean Absolute Deviation(MAD)&lt;/strong&gt;: 1/n sigma abs(y&lt;sub&gt;i&lt;/sub&gt; - y average)&lt;/p&gt;

&lt;p&gt;Say a data set of x&lt;sub&gt;i&lt;/sub&gt; is transformed by an affine transformation y&lt;sub&gt;i&lt;/sub&gt; = a + bx&lt;sub&gt;i&lt;/sub&gt;. Then s&lt;sup&gt;2&lt;/sup&gt; of y = b&lt;sup&gt;2&lt;/sup&gt;s&lt;sup&gt;2&lt;/sup&gt;. And the standard deviation is multiplied by the absolute value of b.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-9-2016---lecture-3&quot;&gt;May 9, 2016 - Lecture 3&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Practice problems with solutions on LEARN&lt;/li&gt;
  &lt;li&gt;&amp;lt;= Wednesday’s class for the TQ1 next week&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Today&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Measures of Symmetry&lt;/li&gt;
  &lt;li&gt;Measures of Kurtosis&lt;/li&gt;
  &lt;li&gt;Applications&lt;/li&gt;
  &lt;li&gt;Measures of Association&lt;/li&gt;
  &lt;li&gt;Graphical Measures&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Objective: To figure out the shape of our sample&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Centre: sample mean&lt;/li&gt;
  &lt;li&gt;Variability: This measures how much the data set is spread out across the centre; how volatile the data set is; Use s&lt;sup&gt;2&lt;/sup&gt;, variance; Standard deviation is the sqrt(variance)
    &lt;ul&gt;
      &lt;li&gt;If y=a+bx, s&lt;sup&gt;2&lt;/sup&gt;&lt;sub&gt;y&lt;/sub&gt; = b^2s^2_x s_y = abs(b)s_x&lt;/li&gt;
      &lt;li&gt;The variance treats data on either side of the mean symmetrically&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Symmetry:
    &lt;ul&gt;
      &lt;li&gt;3 shapes:
        &lt;ul&gt;
          &lt;li&gt;Symmetric&lt;/li&gt;
          &lt;li&gt;Right-skewed (mode is on the left side, mean is on the right side), long right tail&lt;/li&gt;
          &lt;li&gt;Left-skewed (mode is on the right side, mean is on the left side), long left tail&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Measure of Skewness:
        &lt;ul&gt;
          &lt;li&gt;Quick estimate of skewness:&lt;br /&gt;
  e.g. 1, 3, 5, 7, 9, 11, 13&lt;br /&gt;
  Symmetric Data -&amp;gt; Mean = Median&lt;br /&gt;
  e.g. 1, 3, 5, 7, 9, 11, 10&lt;sup&gt;7&lt;/sup&gt;
  Mean » Median&lt;br /&gt;
  Measure of Skewness = Mean - Median
            &lt;ul&gt;
              &lt;li&gt;if &amp;gt; 0, right-skewed, mean greater than median&lt;/li&gt;
              &lt;li&gt;if &amp;lt; 0, left-skewed, mean less than median&lt;/li&gt;
              &lt;li&gt;if = 0, symmetric&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Applications&lt;/strong&gt;&lt;br /&gt;
Gould: “The median is not the message”&lt;br /&gt;
“Abdominal mesothalamia”: median of life expectancy after diagnosis = 8 months&lt;/p&gt;

&lt;p&gt;If the distribution (of frequency of death against time since diagnosis) is symmetric, then he will die within 16 months at best.&lt;/p&gt;

&lt;p&gt;The actual distribution is right-skewed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kurtosis&lt;/strong&gt;&lt;br /&gt;
Kurtosis measure how frequent extreme observations are, with respect to the Normal Distribution.&lt;/p&gt;

&lt;p&gt;Kurtosis checks whether the data set has “fatter” tails compared to the Normal distribution.&lt;/p&gt;

&lt;p&gt;Kurtosis: how much “peakedness” the graph has&lt;/p&gt;

&lt;p&gt;For a normal distribution, kurtosis = 3. If k for your data &amp;gt; 3, then it has fatter tails compared to the normal. If it is &amp;lt; 3, then it has narrower tails.&lt;/p&gt;

&lt;p&gt;Kurtosis checks whether we can apply the Normal Distribution assumption to our data set by comparing our sample kurtosis to 3.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Measures of Association&lt;/strong&gt;&lt;br /&gt;
Objective: To find whether there is any evidence of association between two variables&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Categorical Variables
    &lt;tr&gt;&lt;td&gt;lmao&lt;/td&gt;
      &lt;td&gt;ayy&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;hey&lt;/td&gt;&lt;/tr&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Relative Risk&lt;/strong&gt;: measures the association between two catgorical variables; Measured by [R.R.]&lt;/li&gt;
      &lt;li&gt;A and B are indepedent iff P(A|B) = P(A)&lt;/li&gt;
      &lt;li&gt;If R.R. is approximately equal to 1, then there is little evidence of association&lt;/li&gt;
      &lt;li&gt;If R.R. &amp;gt; &amp;gt; 1 or &amp;lt; &amp;lt; 1, evidence of association&lt;/li&gt;
      &lt;li&gt;But how high is too high? UNANSWERED QUESTION&lt;/li&gt;
      &lt;li&gt;The table = Two Way Contingency Table&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Numerical Variables&lt;br /&gt;
How to find a measure of association between two numerical variables?
    &lt;ul&gt;
      &lt;li&gt;Sample Correlation Coefficient r&lt;sub&gt;xy&lt;/sub&gt;: the sign of r tells us the direction of the relationship, and the value of r tells us the strength of the association/relationship&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;E.g. &lt;br /&gt;
x&lt;sub&gt;i&lt;/sub&gt; = # of beers you drink&lt;br /&gt;
y&lt;sub&gt;i&lt;/sub&gt; = STAT 231 mark&lt;br /&gt;
Collect a data set:&lt;br /&gt;
{x1, y1},…{xn, yn}&lt;/p&gt;

&lt;p&gt;So it is most likely that if xn - x average &amp;gt; 0, yn - y average &amp;lt; 0&lt;/p&gt;

&lt;p&gt;Thus, the numerator tells us the direction of the relationship. The denominator ensures that -1 &amp;lt;= r&lt;sub&gt;xy&lt;/sub&gt; &amp;lt;= 1&lt;/p&gt;

&lt;p&gt;The closer abs(r_xy) is to 1, the strong is the evidence of association.&lt;/p&gt;

&lt;p&gt;r captures the &lt;strong&gt;linear relationship&lt;/strong&gt; between x and y. Not good in capture non-linear relationship&lt;/p&gt;

&lt;p&gt;E.g. y = x&lt;sup&gt;2&lt;/sup&gt;, x=-3, y=9, x=-1, y=1, x=1, y=1, x=3, y=9.  r_xy = 0 !!! It’s a function so the two variables are associated for sure, but the Coefficient gives 0. Does not work well with quadratic relationships, or non-linear in general.&lt;/p&gt;

&lt;p&gt;E.g. y = ax + b. r_xy = 1 if a &amp;gt; 0, = -1 if a &amp;lt; 0&lt;/p&gt;

&lt;p&gt;Since we are going from sample to population, we can only find evidence of association. Strong correlation != Causation&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Graphical Measures&lt;/strong&gt;&lt;br /&gt;
+ Density Histogram: Histogram -&amp;gt; grouped data; Density histogram -&amp;gt; area of every rectangle = relative frequency of the group
+ Empirical cdf&lt;br /&gt;
+ Box Plot&lt;br /&gt;
+ Scatter Plot&lt;br /&gt;
+ Q-Q Plot&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-11-2016---lecture-4&quot;&gt;May 11, 2016 - Lecture 4&lt;/h2&gt;

&lt;p&gt;A note about TQ1 will be posted on LEARN tonight -&amp;gt; Up to today’s material (Ignore the last question on the sample quiz)&lt;/p&gt;

&lt;h2 id=&quot;recap&quot;&gt;Recap&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Centre -&amp;gt; Sample Mean&lt;/li&gt;
  &lt;li&gt;Variability -&amp;gt; Variance, Standard Deviation&lt;/li&gt;
  &lt;li&gt;Symmetry -&amp;gt; Mean - Median&lt;/li&gt;
  &lt;li&gt;Kurtosis -&amp;gt; Compare to Normal Distribution&lt;/li&gt;
  &lt;li&gt;Correlation Coefficient: r&lt;sub&gt;xy&lt;/sub&gt; measures association&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reasons-why-we-care-about-graphical-summaries&quot;&gt;Reasons why we care about Graphical Summaries&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;To “identify” the distribution from which the data is drawn,&lt;/li&gt;
  &lt;li&gt;To find the shape of the data set&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-five-number-summary&quot;&gt;The Five Number Summary&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Minimum&lt;/li&gt;
  &lt;li&gt;Q1&lt;/li&gt;
  &lt;li&gt;Q2&lt;/li&gt;
  &lt;li&gt;Q3&lt;/li&gt;
  &lt;li&gt;Maximum&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These five numbers provide the rough shape of the graph&lt;/p&gt;

&lt;p&gt;Correlation Coefficient measures the linear association between two variables&lt;/p&gt;

&lt;h2 id=&quot;graphical-summary&quot;&gt;Graphical Summary&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Histogram&lt;/strong&gt;: Grouped Data
Example: Group Freq (The cohorts are called bins)&lt;br /&gt;
&lt;strong&gt;Frequency Histogram&lt;/strong&gt;: Frequency as y-axis, and bins as x-axis (Bar graph)&lt;br /&gt;
&lt;strong&gt;Density Histogram&lt;/strong&gt;: x-axis = bins, y-axis = densities&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The length(height) of each rectangle in a density histogram is chosen such that the area of the rectangle is equal to the relative frequency of the bin&lt;/li&gt;
  &lt;li&gt;To construct a density histogram:
Find the frequency and relative frequency for each bin; Relative Frequency = frequency for the bin / total frequency&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The reason why we draw density histogram is that &lt;strong&gt;we want to compare our data (shape of graph) with known density functions of distributions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Box Plot&lt;/strong&gt;: Box and Whiskers Plot&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Lower end of the box/rectangle -&amp;gt; Q1&lt;/li&gt;
  &lt;li&gt;Upper end of the box/rectangle -&amp;gt; Q3&lt;/li&gt;
  &lt;li&gt;The line inside the box -&amp;gt; Median = Q2&lt;/li&gt;
  &lt;li&gt;The upper whisker goes up to the maximum of the data set, that is &lt;strong&gt;NOT AN OUTLIER&lt;/strong&gt; (extreme observations; a data point y&lt;sub&gt;i&lt;/sub&gt; is an outlier if y&lt;sub&gt;i&lt;/sub&gt; &amp;gt; Q3 + 1.5IQR or y&lt;sub&gt;i&lt;/sub&gt; &amp;lt; Q1 - 1.5IQR; Remember IQR = Q3-Q1); The upper whisker ends at the highest value of your data set that is lower than the outliers; We mark the outliers each and every one of them separately&lt;/li&gt;
  &lt;li&gt;The lower whisker goes down to the minimum of the data set, that is not an outlier&lt;/li&gt;
  &lt;li&gt;The Box Plot gives us the &lt;strong&gt;Five Number Summary&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Reading the Box Plot sideways gives the rough shape and the skewness of the distribution&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Empirical cdf (Cumulative Distribution Function)&lt;/strong&gt;&lt;br /&gt;
Definition: F(y) = # of observations &amp;lt;= y / Total # of observations, and the plot (y, F(y)) is called the empirical cdf.&lt;/p&gt;

&lt;p&gt;{1, 3, 5, 5, 9}, F(0) = 0, F(1) = 0.2, F(3) = 0.4 … the plot of a step function&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We can find a lot of info from the empirical cdf&lt;/li&gt;
  &lt;li&gt;F(median) = 1/2, we can identify any percentile&lt;/li&gt;
  &lt;li&gt;The number with the biggest jump vertically on the graph is the mode of this data set&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Q-Q Plot&lt;/strong&gt;&lt;br /&gt;
We want to check whether our data set “resembles” a Normal Distribution. The Q-Q plot plots the alpha-th quantile of your sample to the alpha-th quantile of Z Distribution ~N(0, 1); Plots two quantiles: Sample quantiles against the theoretical quantiles&lt;/p&gt;

&lt;p&gt;{1, 2, 7, …, 155}&lt;/p&gt;

&lt;p&gt;Z(alpha) on the x-axis, y(alpha) on the y-axis. 0 = median and mean of Z&lt;/p&gt;

&lt;p&gt;If the Q-Q Plot is a straight line, then the data resembles the Normal Distribution Z&lt;/p&gt;

&lt;p&gt;Q: If we have a distribution that is normal, how do we prove that it will have a straight line Q-Q plot?&lt;br /&gt;
That is, y~N(mu, sigma^2), the Q-Q plot will be a straight line&lt;/p&gt;

&lt;p&gt;Proof:?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scatter Plot&lt;/strong&gt;&lt;br /&gt;
Scatter Plot checks for association. Just plot (xi, yi).&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-16-2016---lecture-5&quot;&gt;May 16, 2016 - Lecture 5&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;PPDAC&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;typical problem: we have a population of observations, the characteristics of the population is unknown&lt;/li&gt;
  &lt;li&gt;We draw a sample, and based on the sample observations infer properties about the population (statistical inference)&lt;/li&gt;
  &lt;li&gt;Examples: 1. we want to find the approval rating of Trump among likely US voters; 2. Average income of a starting math undergraduate career in Canada; 3. Does a regular intake of Vitamin C reduce the duration of a flu? 4. Are Canadian Jeopardy contestants better than Americans?&lt;/li&gt;
  &lt;li&gt;PPDAC approach gives you an algorithm to tackle statistical problems that are mentioned above; PPDAC = Problem, Plan, Data, Analysis, Conclusion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Problem: Descriptive, Causative, Predictive&lt;/strong&gt;&lt;br /&gt;
  + Descriptive: We are interested in some unknown characteristic of the population (e.g. Trump)
  + Causative: Whether a variable X causes a variable Y to change (e.g. Vitamin C)
  + Predictive: To estimate the future values of some variable (e.g. predicting Blackberry stock prices)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Target Population&lt;/strong&gt;: the population of interest (e.g. All likely US voters in the Trump example)&lt;br /&gt;
&lt;strong&gt;Unit&lt;/strong&gt;: each member of the population&lt;br /&gt;
&lt;strong&gt;Variate&lt;/strong&gt;: a characteristic of the unit (e.g. whether the voter approves or disapproves of Trump)&lt;br /&gt;
&lt;strong&gt;Attribute&lt;/strong&gt;: a function of the variate (e.g. Proportion of approvals = Attribute)&lt;/p&gt;

&lt;p&gt;For the income of math undergrad problem, each individual income is the variate.&lt;br /&gt;
Average income is the attribute.&lt;/p&gt;

&lt;p&gt;Typically, we want to find some attributes of the population.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Plan&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Study Population&lt;/strong&gt;: the set of observations from which your sample is drawn&lt;br /&gt;
Example: Suppose we are doing phone interviews -&amp;gt; study population would be all voters with a phone; In medical tests, study population might not be a subset of the target population&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Experimental Plan: Some of the variates can be controlled by the analyst with dependent and independent variables&lt;/li&gt;
  &lt;li&gt;Observational Plan: The variates are not under the analyst’s control&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Analysis&lt;/strong&gt;&lt;br /&gt;
Setting up a statistical model: we assume that the data is drawn from known distribution with unknown parameters.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bias: systematic error -&amp;gt; make sure the data is not biased&lt;/li&gt;
  &lt;li&gt;Measurement error: random error -&amp;gt; measured value - actual value&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Population parameters, usually Greek letters, are unknown. Sample parameters, usually Latin letters, are known (sample mean, sample variance).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Random Sampling&lt;/strong&gt;&lt;br /&gt;
Sampling protocol: we want the sample to represent the population&lt;br /&gt;
Sampling techniques: methods of drawing the “right” sample&lt;br /&gt;
Errors: The difference between the target and the study populations = &lt;strong&gt;Study Error&lt;/strong&gt;; Difference between the study population and the sample = &lt;strong&gt;Sampling Error&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Difference in the value of the attribute between the Total Population and the Study Population is the study error. Difference in the value of the attribute between the Study Population and the Sample is the sampling error. We want to quantify the sampling error.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br /&gt;
We want to make sure that the conclusion is understood by non-statisticians&lt;/p&gt;

&lt;p&gt;##The Theory of Estimation##
&lt;strong&gt;Method of Maximum Likelihood&lt;/strong&gt;&lt;br /&gt;
Based on our sample, what is the mostly likely value of the unknown parameter? This is a question every statistician asks. Example: We have a biased coin. The probability of getting a head is either 1/2 or 1/3. Toss the coin 100 times and we see 25 heads. We choose the value of the parameter that maximizes the probability of observing your sample.&lt;/p&gt;

&lt;p&gt;Suppose Y is a discrete distribution with a pf f and an unknown parameter theta. Data = {y1, …, yn}.&lt;br /&gt;
L(theta; y1, … , yn) = Likelihood Function = P(Y1 = y1, Y2 = y2, … , Yn = yn) as a function of theta; the chance of observing the sample&lt;/p&gt;

&lt;p&gt;E.g. Number of accidents ~ Poi(mu), with mu unknown. Sample is {1, 0, 2, 5, 7}. Based on the sample, what is the MLE (Maximum Likelihood Estimate) for mu? Use the pf for the Poisson distribution to calculate the probability of observing each unit in the sample. Multiply them together. The value of mu that maximizes L above is called the MLE. In the above example, L = e^-5mu* mu^15 / 1!0!…7!. In order to maximize it, take the log(base e) function and maximize the log function. Take derivatives and equate it to zero, solve for mu (MLE). log L = l = log-likelihood function. In the above example, mu = 3&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-18-2016---lecture-6&quot;&gt;May 18, 2016 - Lecture 6&lt;/h2&gt;

&lt;p&gt;##Estimation##&lt;/p&gt;

&lt;p&gt;We are interested in some unknown characteristics (attributes) of the population. We draw a random, independent sample from this population {y1,…,yn}. Based on these sample observations, we want to come up with the best estimate for the unknown characterstic g(y1,…,yn) will be my best guess for theta.&lt;/p&gt;

&lt;p&gt;Some starting points&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+ usually, all statistical inference problems start with some estimation of some parameter.
+ {y1,...,yn} -&amp;gt; sample
+ we think of the data points {y1,...,yn} as outcomes of some random variable Y (statistical model); We assume that the data is drawn from some distribution with unknown parameters
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example: toss a coin; objective: estimate pi = P(head). Each data point yi can be thought of as an outcome of Yi. The distribution of Yi is called the &lt;strong&gt;Statistical Model&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;##Steps Involving Estimation##&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Identify the distribution from which your data set is drawn&lt;/li&gt;
  &lt;li&gt;Construct the likelihood function L(theta; y1,…,yn) = P(Y1=y1,…Yn=yn) = Probability of observing your sample = P(Y1=y1)&lt;em&gt;…&lt;/em&gt;P(Yn=yn)&lt;/li&gt;
  &lt;li&gt;Find the MLE (best guess for the unknown parameter). Theta hat is that value of theta that maximizes the likelihood function&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example 1: To estimate the approval rating of Trump. Approved Rating = pi (Population proportion, unknown). Sample = {YYNNNNYNNN} Given this sample, what is pi hat, the MLE for pi? Y is either Yes with probability pi, or No with probability 1-pi&lt;/p&gt;

&lt;p&gt;L(pi; y1,…yn) = pi&lt;em&gt;pi&lt;/em&gt;(1-pi)&lt;em&gt;…&lt;/em&gt;(1-pi) = pi^3 * (1-pi)^7 is the Maximum Likelihood Function. The value of pi that maximizes the function is pi hat = MLE. The log likelihood function is l(pi) = 3ln(pi) + 7ln(1-pi), take derivative, find maximum value of pi = 0.3&lt;/p&gt;

&lt;p&gt;Example 2: Objective: To estimate mu, the average number of hits on your blog in an hour. A sample of n hours {y1,…,yn}. What is mu hat, the MLE for mu? We will assume that the data is drawn from a Poisson distribution. L(mu, y1,…yn) = P(Y=y1)*…P(Y=yn). Calculating mu hat, we get mu hat = 1/n(sigma yi) = y average&lt;/p&gt;

&lt;p&gt;Example 3: To estimate pi = prob that a Canadian contestant wins Jeopardy. Sample = {y1,…,yn} yi = number of shows contestant i appeared in. Sample = {1,2,1,3,5}. The data in this problem is drawn from a Geometric distribution. P(Y=2) = pi(1-pi). P(Y=4) = pi^3(1-pi). L(pi; y1,…yn) = pi^[(sigma yi)-n] * (1-pi)^n. Take log derivatives and equate it to zero. Get pi hat.&lt;/p&gt;

&lt;p&gt;Example 4: To estimate the proportion of southpaws at UW.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+ Strategy 1: Go interview people till we get 10 left handers, interviewed 100 people
+ Strategy 2: Go interview 100 people and 10 of them are left handers
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Strategy 1: pi = proportion of left handers. L(pi) = C^99_9&lt;em&gt;pi^9&lt;/em&gt;(1-pi)^90 * pi&lt;br /&gt;
Strategy 2: L(pi) = C^100_10&lt;em&gt;pi^10&lt;/em&gt;(1-pi)^90&lt;/p&gt;

&lt;p&gt;So pi hat in both cases are 1/10.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some Final Points&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;For complete analysis, we have to make sure theta hat is indeed the maximum (check the 2nd order condition)&lt;/li&gt;
  &lt;li&gt;L(theta; y1,…,yn) = P(Y1=y1)&lt;em&gt;…&lt;/em&gt;P(Yn=yn) = f(y1)*…*f(yn). f = distribution function = pi(f(yi))&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Since the likelihood function is a product of the probabilities, the value can be really small for large sample sizes.&lt;br /&gt;
R(theta) = Relative Likelihood Function = L(theta)/L(theta hat), where theta hat = MLE. The graph of R(theta) against theta is bell-shaped, maximized at theta hat. 0&amp;lt;=R(theta)&amp;lt;=1, R hits its maximum at theta = theta hat = MLE&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-25-2016---lecture-7-2016&quot;&gt;May 25, 2016 - Lecture 7, 2016&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Syllabus for the Midterm&lt;/strong&gt;: &amp;lt;= End of this week + STAT 230; Fall 2015 Midterm and practice problems posted (solutions will be posted this Friday)&lt;/p&gt;

&lt;h2 id=&quot;today&quot;&gt;Today&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Overview of statistical modelling, estimatation and the MLE calculation&lt;/li&gt;
  &lt;li&gt;Likelihood functions and the MLE for continuous r.v.s&lt;/li&gt;
  &lt;li&gt;Invariance property of the MLE&lt;/li&gt;
  &lt;li&gt;Special case -&amp;gt; Uniform distribution&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Paul the Octopus Problem&lt;/strong&gt;&lt;br /&gt;
+ Toss a coin 100 times. Your friend “guesses” right 70 times. Is there evidence that your friend has ESP?
+ What is the attribute of interest? (What do we care about the population we are looking at?)
+ We are trying to find pi, the probability(your friend will guess right); it is unknown
+ y = number of successes in 100 trials, y = 70 -&amp;gt; outcome of some r.v. Y. Data points are not just numbers, but outcomes of a random experiment
+ We need to construct a statistical model (assuption on the distribution Y)
+ In this case, Y~Bin(100, pi)&lt;/p&gt;

&lt;h2 id=&quot;statistical-model&quot;&gt;Statistical Model&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Construct the likelihood function&lt;/li&gt;
  &lt;li&gt;L(pi) = C^100_70 pi^70(1-pi)^30&lt;/li&gt;
  &lt;li&gt;Find the MLE(we choose pi hat which maximizes L(pi)), pi hat = 0.7&lt;/li&gt;
  &lt;li&gt;We choose that value of the parameter that maximizes the chance of what we observed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Formal Definition&lt;/strong&gt;: Yi = f(theta;yi), i=1,…,n, f=distribution function, Yi’s are independent, {y1,…,yn} -&amp;gt; data set&lt;/p&gt;

&lt;p&gt;L(theta;y1,y2,…,yn) = n Pi i=1 f(theta;yi) Product of the Distribution functions evaluated at the sample points&lt;/p&gt;

&lt;p&gt;Example: {y1,…,yn} is independently drawn from yi&lt;br /&gt;
f(y;theta) = (1-theta)^y * theta; y = 0,1,2,…&lt;/p&gt;

&lt;h2 id=&quot;continuous-distributions&quot;&gt;Continuous Distributions&lt;/h2&gt;

&lt;p&gt;Definition: Model: Yi~f(yi;theta) where Yi is a continuous random variable with unknown parameter theta&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;: Objective: To estimate mu = average lifetime of a lightbulb produced by a company. An independent sample {y1,…,yn} is drawn. Based on this sample, what is mu hat?&lt;/p&gt;

&lt;p&gt;Model: Yi~Exp(mu), i=1,..,n, Yi’s are independent; L(mu, yi,…,yn) = i/mu^n e^(-1/u sigma yi). Take ln, take derivative, equate to zero; get mu hat = y average&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;: Objective: To estimate mu = population average IQ of UW Math students; sigma^2 = variance of the IQ&lt;/p&gt;

&lt;p&gt;An independent sample {y1,y2…,yn} is drawn. Based on the sample, what are sigma^2 hat and mu hat?&lt;/p&gt;

&lt;p&gt;Solution: Model: Yi~N(mu, sigma^2), assuming normality, i=1,…,n, Yi’s independent&lt;/p&gt;

&lt;p&gt;Likelihood function: Take partial derivatives: first with respect to mu, get mu hat = y average (If the distribution is Normal, then y average is the MLE for mu); then take partial derivative with respect to sigma, get sigma^2 hat = 1/n sigma(yi - y average)^2. The MLE for population mean is the sample mean, but the population variance is NOT the sample variance (which is 1/n-1 instead of 1/n)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;: Suppose {y1,…,yn} is drawn from a random variable with density function f(theta;y) = 2y/theta e^(-(y^2)/theta), with y&amp;gt;0, theta&amp;gt;0. L(theta) = (2^n(y1y2…yn))/theta^n e^(-1/theta sigma yi^2), take ln, l(theta) - ln K - nln(theta) - 1/theta sigma yi^2. Take derivative, get theta hat = 1/n sigma yi^2&lt;/p&gt;

&lt;p&gt;##Invariance Property##&lt;/p&gt;

&lt;p&gt;Result: If theta hat is the MLE (best guess for theta) for theta, then g(theta hat) is the MLE for g(theta) for any continuous g&lt;/p&gt;

&lt;p&gt;Example: The scores of STAT231 are normally distributed with mean mu and variance sigma^2. Find the estimate for the 95-th percentile of the population. Looking at the Z table, 95-th percentile corresponds to 1.64. &lt;br /&gt;
P(Y&amp;lt;=x) = 0.95&lt;br /&gt;
P((Y-mu)/sigma &amp;lt;= (x-mu)/sigma) = 0.95&lt;br /&gt;
P(Z&amp;lt;=x-mu/sigma) = 0.95&lt;br /&gt;
x-mu/sigma = 1.64&lt;br /&gt;
x = mu + 1.64 sigma&lt;/p&gt;

&lt;p&gt;MLE for the 95th percentile = mu hat + 1.64 sigma hat. Find mu hat and sigma hat, plug in, done.&lt;/p&gt;

&lt;p&gt;Example: Suppose we toss a coin 60 times, and we observe 20 successes (heads). Find the MLE for the variance of this distribution. pi hat = 1/3&lt;br /&gt;
Var = n&lt;em&gt;pi(1-pi), Mean = n&lt;/em&gt;pi&lt;/p&gt;

&lt;p&gt;##Uniform Distribution##&lt;/p&gt;

&lt;p&gt;Yi~U[0,theta], theta is unknown. {yi,…,yn} What is theta hat? U[a,b], pf = 1/(b-a). f(y;theta) = 1/theta if 0&amp;lt;y&amp;lt;theta and 0 otherwise. Then L(theta) = 1/theta^n if 0&amp;lt;=yi&amp;lt;=theta for all i (or can be written as “if theta &amp;gt;= max{yi,…,yn}”), or 0 otherwise. But the graph is not continuous at max{y1,…,yn}. MLE theta hat = max{y1,…,yn}&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-30-2016---lecture-8&quot;&gt;May 30, 2016 - Lecture 8&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Interval Estimation&lt;/strong&gt;: Likelihood function -&amp;gt; likelihood intervals, sampling distribution -&amp;gt; confidence intervals&lt;/p&gt;

&lt;h2 id=&quot;the-theory-of-estimation&quot;&gt;The Theory of Estimation&lt;/h2&gt;

&lt;p&gt;Problem: theta = unknown population attribute of interest; {y1,…,yn} -&amp;gt; sample drawn from the population; based on the sample, theta hat(y1,…,yn) which is our ESTIMATE for theta&lt;/p&gt;

&lt;h3 id=&quot;method-of-maximum-likelihood&quot;&gt;Method of Maximum Likelihood&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Identify the distribution from which the data is drawn (&lt;strong&gt;Modelling&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;Construct the likelihood function, calculate the log likelihood function, take derivatives to find the maximum likelihood estimate&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example: Y1,…,Yn ~ N(mu, sigma^2). Data set: {y1,…,yn}. Objective: Estimate mu&lt;br /&gt;
Alternative Method - &lt;strong&gt;Method of Least Squares&lt;/strong&gt; (more practical, do not care about distribution. only care about how accurate the prediction is): Choose mu hat such that the sum of SQUARED errors is minimized. Min sigma[(yi-mu)^2]&lt;/p&gt;

&lt;p&gt;2 sigma(yi-mu)(-1) = 0&lt;br /&gt;
sigma(yi-mu) = 0&lt;br /&gt;
mu = y average&lt;/p&gt;

&lt;p&gt;For the Normal problem, MLE and LS estimate for mu are the same&lt;/p&gt;

&lt;h2 id=&quot;interval-estimation&quot;&gt;Interval Estimation&lt;/h2&gt;

&lt;p&gt;Obejective: We have an unknown parameter theta. We want to estimate the random interval [A, B] which would contain theta with a “high” probability (that is pre-specified/defined)&lt;/p&gt;

&lt;p&gt;Example: Margin of Error for opinion polls&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Method 1&lt;/strong&gt;: Through the likelihood function&lt;br /&gt;
Definition: A 100p % likelihood interval (p is in (0,1)) for an unknown parameter theta is given by&lt;/p&gt;

&lt;p&gt;{theta: R(theta) &amp;gt;= p}, where R(theta) = Relative Likelihood Function&lt;/p&gt;

&lt;p&gt;Example: p=0.5, you want a 50% likelihood interval; so {theta: R(theta) &amp;gt;= 0.5}; Draw a horizontal line at y=0.5, the line intersects the RLF graph at points a and b [a,b] = 50% likelihood interval&lt;/p&gt;

&lt;p&gt;Question: If theta_0 belongs to the 20% likelihood interval, does it belong to the 10% likelihood interval? Yes.&lt;/p&gt;

&lt;p&gt;Question: Does theta hat (MLE) belong to all likelihood intervals? Yes.&lt;/p&gt;

&lt;p&gt;Suppose theta_0 belongs to the 30% likelihood interval -&amp;gt; means that the likelihood function, evaluated at theta_0, is at least 30% of the likelihood function evaluated at the MLE. L(theta_0)/L(theta hat) &amp;gt;= 0.3 =&amp;gt; L(theta_0) &amp;gt;= 0.3 L(theta hat)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Method 2 - Method of Sampling Distributions&lt;/strong&gt;: Method 1 is not an ＩＮＴＵＩＴＩＶＥ interpretation&lt;/p&gt;

&lt;p&gt;Steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Identify the ＰＩＶＯＴＡＬ ＤＩＳＴＲＩＢＵＴＩＯＮ from your model&lt;/li&gt;
  &lt;li&gt;Find the endpoints of your pivotal distribution and rearrange to construct the &lt;strong&gt;coverage interval&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Estimate the coverage interval using your sample -&amp;gt; &lt;strong&gt;confidence interval&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Notations: Y bar (a random variable from which sample means , y bar, are drawn), y bar (sample mean, known), and mu (population mean, unknown)&lt;/p&gt;

&lt;p&gt;Example: A population of 1, 2, 3, 4, 5&lt;br /&gt;
A sample of size 2 is drawn with replacement from this population&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;mu = 3 (usually unknown)&lt;/li&gt;
  &lt;li&gt;y bar: {1, 3} -&amp;gt; 2; {1, 1} -&amp;gt; 1; depends on sampling&lt;/li&gt;
  &lt;li&gt;Y bar: random variable from drawing y bars by graphing the frequency of each&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Capital letters = random variables = &lt;strong&gt;Estimators&lt;/strong&gt;&lt;br /&gt;
Lowercase letters = &lt;strong&gt;Estimates&lt;/strong&gt; from the sample -&amp;gt; known numbers&lt;br /&gt;
Greek letters = Population parameters -&amp;gt; unknown parameters&lt;/p&gt;

&lt;p&gt;Example: Objective: To construct a 95% confidence interval for the average IQ of UW professors. {y1,…,yn}, n=25, sigma yi = 2200. We know that the IQs are normally distributed with a variance of sigma^2 = 49 (unrealistic, because sigma^2 is known but not mu). Construct a 95% confidence interval for mu&lt;/p&gt;

&lt;p&gt;Model: Yi ~ N(mu, 49). i = 1,…,25 are independent&lt;/p&gt;

&lt;p&gt;Y bar ~ N(mu, 49/25) since Y bar ~ N(mu, sigma^2 / n)&lt;/p&gt;

&lt;p&gt;(Y bar - mu) / 7/5 = z ~ N(0, 1) PIVOT&lt;/p&gt;

&lt;p&gt;Go to the Z-table and find the 95% interval. Find 0.975. a = 1.96&lt;/p&gt;

&lt;p&gt;P(-1.96 &amp;lt; z &amp;lt; 1.96) = 0.95&lt;br /&gt;
P(-1.96 &amp;lt; (Y bar - mu) / 7/5 &amp;lt; 1.96) = 0.95&lt;/p&gt;

&lt;p&gt;So mu &amp;gt; Y bar - 1.96&lt;em&gt;7/5, and mu &amp;lt; Y bar + 1.96&lt;/em&gt;7/5, and these two numbers make up the bounds of the coverage interval. [y bar - 1.96&lt;em&gt;7/5, y bar + 1.96&lt;/em&gt;7/5] since y bar is known is the confidence interval&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;General Rules to estimate mu when sigma is known&lt;/strong&gt;:
(Y bar - Z* sigma/sqrt(n), Y bar + Z* sigma/sqrt(n)) is the coverage interval. Sub y for Y, confidence interval&lt;/p&gt;

&lt;p&gt;Suppose we had a 99% coverage, then Z* will increase (to 2.58).&lt;/p&gt;

&lt;p&gt;Suppose we want the 95% confidence interval to be of fixed length y bar +- A.&lt;/p&gt;

&lt;p&gt;Two problems:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Sigma is usually not known&lt;/li&gt;
  &lt;li&gt;The population might not be normal&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Central Limit Theorem: Suppose n is large, and Y1,…,Yn, are drawn from a distribution with mean mu and variance signma^2, then Y bar is approximately Y bar ~N(mu, sigma^2 / n)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-1-2016---lecture-9&quot;&gt;June 1, 2016 - Lecture 9&lt;/h2&gt;

&lt;h2 id=&quot;today-1&quot;&gt;Today&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Confidence interval for mu from a normal population with known sigma (population SD)&lt;/li&gt;
  &lt;li&gt;Confidence interval for Binomial&lt;/li&gt;
  &lt;li&gt;Confidence interval for Exponential (when n is large)&lt;/li&gt;
  &lt;li&gt;The chi-squared distribution chi^2_k&lt;/li&gt;
  &lt;li&gt;The T distribution&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example: (pre-specified) 99% CI&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt; The incomes of UW grads are Normally distributed with mean mu, and SD sigma = $5000&lt;/p&gt;

&lt;p&gt;Object: To fund the 99% for mu, i.e. we want to construct a random interval [A, B], such that P(A &amp;lt; mu &amp;lt; B) = 0.99 (This is called the coverage interval, and 0.99 is called the coverage probability or level of confidence)&lt;/p&gt;

&lt;p&gt;A sample of 64 UW grads are drawn at random {y1,…,y64}, y bar = 60000, sigma = 7000. What is your CI?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt; November 16, an exit poll is conducted with a random sample of 1000 US voters and 530 of them voted for Trump. Pi = Proportion of total votes Trump will get. We want to construct a 95% CI for pi.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Confidence Interval Approach&lt;/strong&gt;: construct the pivotal distribution based on your estimator or a function of it; mu = population mean, y bar = sample mean = a number, Y bar = r.v. from which y bar is drawn. The distribution of Y bar is the pivot.&lt;/p&gt;

&lt;p&gt;Example 2: pi = population proportion, pi hat = 530/1000 = 0.53 (Estimate), pi tilda (pivot) = r.v. from which pi hat is drawn&lt;/p&gt;

&lt;p&gt;An estimate is a number, an estimator is a random variable.&lt;/p&gt;

&lt;p&gt;Construct a coverage interval from the pivot. This interval will contain the parameter with the given probability. Estimate this interval using your sample -&amp;gt; Confidence Interval&lt;/p&gt;

&lt;p&gt;Example 1: Model: Yi ~ N(mu, 5000^2), i=1,…,64; Yi’s independent&lt;/p&gt;

&lt;p&gt;Y1,…,Yn ~ N(mu, sigma^2), Y bar ~ N(mu, sigma^2/n). So in this case, Y bar ~ N(mu, 5000^2/64)&lt;/p&gt;

&lt;p&gt;(Y bar - mu) / (5000/8) = Z ~ N(0,1) is the pivotal distribution; Z-table -&amp;gt; 0.995, a=2.58. P(-2.58 &amp;lt;= Z &amp;lt;= 2.58) = 0.99. Plug (Y bar - mu) / (5000/8) = Z back in, we get mu &amp;gt;= Y bar - 2.58 * 5000 / 8 and mu &amp;lt;= Y bar + 2.58 * 5000 / 8. So P(Y bar - 2.58 * 5000 / 8 &amp;lt; mu &amp;lt; Y bar + 2.58 * 5000 / 8) = 0.99. This interval is the coverage interval.  [60000 +- 2.58 * 5000 / 8]&lt;/p&gt;

&lt;p&gt;NOTE: It is not true that the above interval contains mu with probability 0.99&lt;/p&gt;

&lt;h2 id=&quot;general-rule&quot;&gt;General Rule&lt;/h2&gt;
&lt;p&gt;If the population is normal, and the variance is known, then the CI for mu is given [y bar += z* sigma/sqrt(n)]. So z = from the z0table, y bar = sample mean, r = population standard deviation, n = sample size. The interval will be wider if the level of confidence increase&lt;/p&gt;

&lt;p&gt;Example 2: pi, pi hat = 0.53, pi tilda = estimator&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Theorem - Central Limit Theorem&lt;/strong&gt;&lt;br /&gt;
If n is “large”, then pi&lt;/p&gt;

&lt;p&gt;Y1,…,Yn ~ N(mu, sigma^2), Y bar ~ N(mu, sigma^2/n). Let n be large, Y1,…,Yn have mean mu and variance sigma^2. Then (Y bar - mu) / (sigma/sqrt(n)) approximately equals Z for large n&lt;/p&gt;

&lt;p&gt;Find the two points for the pivot, between [-a, a] the probability is 0.95, a = 1.96&lt;/p&gt;

&lt;p&gt;Example: Y1,…,Y100 ~ Exp(mu); {y1,…,y100} -&amp;gt; Data. Find the 95% CI for mu.&lt;/p&gt;

&lt;p&gt;By CLT, (Y bar - mu) / (mu/sqrt(n)) = Z ~ N(0,1)&lt;/p&gt;
</description>
        <pubDate>Mon, 02 May 2016 18:56:00 -0400</pubDate>
        <link>http://dzed.me/notes/2016/05/02/Stat-231.html</link>
        <guid isPermaLink="true">http://dzed.me/notes/2016/05/02/Stat-231.html</guid>
        
        
        <category>notes</category>
        
      </item>
    
      <item>
        <title>PSYCH 101 - Introductory Psychology</title>
        <description>&lt;pre&gt;&lt;code&gt;PSYCH 101 - Introductory Psychology
Instructor: Dr. John Campbell
Location: AL 116
Time: Mondays 6:30pm - 9:20pm
Term: Spring 2016
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;may-2-2016---lecture-1&quot;&gt;May 2, 2016 - Lecture 1&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Psychology = Study of the behaviour and the mind&lt;/strong&gt;&lt;br /&gt;
Behaviour = actions and responses
Mind = internal states and processes, such as thoughts and feelings&lt;/p&gt;

&lt;p&gt;Psychology is a science. It is a systematic gathering and evaluating of empirical evidence.&lt;/p&gt;

&lt;p&gt;Subfields: Biopsychology, developmental, experimental, industrial-organizational, personality, social etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4 Central Goals of Psychology&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Describe how people and animals behave&lt;/li&gt;
  &lt;li&gt;Explain and understand causes of these behaviours&lt;/li&gt;
  &lt;li&gt;Predict behaviours under certain conditions&lt;/li&gt;
  &lt;li&gt;Influence/Control behaviours through knowledge and control of its causes to enhance human welfare&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Psychology can be made up of different perspectives.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;the-structuralism-perspective&quot;&gt;The Structuralism Perspective&lt;/h1&gt;

&lt;p&gt;Wilhelm Wundt -&amp;gt; First psychology lab with Titchener -&amp;gt; Founded the &lt;strong&gt;Structuralism&lt;/strong&gt; approach&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mind -&amp;gt; studied by breaking it into basic components&lt;/li&gt;
  &lt;li&gt;Used “introspection” to study sensations&lt;/li&gt;
  &lt;li&gt;Gave way to &lt;strong&gt;functionalism&lt;/strong&gt; (functions of consciousness)&lt;/li&gt;
  &lt;li&gt;“Describe inner experiences”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;the-functionalism-perspective&quot;&gt;The Functionalism Perspective&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Our hands -&amp;gt; “Why do we have hands”&lt;/li&gt;
  &lt;li&gt;Ask similar questions about mental processes and behaviours&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;the-psychodynamic-perspective&quot;&gt;The Psychodynamic Perspective&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Searches for causes of behaviours within the inner workings of our personality&lt;/li&gt;
  &lt;li&gt;Emphasizes the role of consciousness&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Psychoanalysis&lt;/strong&gt; is the analysis of internal and primarily unconscious psychological forces&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;the-behavioural-perspective&quot;&gt;The Behavioural Perspective&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Focuses on the role of the external environment in governing our actions&lt;/li&gt;
  &lt;li&gt;John Locke -&amp;gt; Tabula Rasa -&amp;gt; Human nature is shaped by our environment&lt;/li&gt;
  &lt;li&gt;Notable figures: Pavlov, Thorndike, Watson (Little Albert experiment), Skinner&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;the-humanistic-perspective&quot;&gt;The Humanistic Perspective&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Emphasizes free will, personal growth, self-actualization, and the attempt to find meaning in one’s existence&lt;/li&gt;
  &lt;li&gt;Rejects psychodynamics&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;Postive Psychology Movement&lt;/strong&gt; -&amp;gt; focusing on strengths and fulfillments&lt;/li&gt;
  &lt;li&gt;Notable figures: Maslow (Hierarchy of Needs), Rogers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;the-cognitive-perspective&quot;&gt;The Cognitive Perspective&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Examines nature of mind&lt;/li&gt;
  &lt;li&gt;Perceptions are organized so that “the whole is greater than the sum of its parts”&lt;/li&gt;
  &lt;li&gt;How mental processes influence behaviours&lt;/li&gt;
  &lt;li&gt;Notable figures: Ebbinghaus -&amp;gt; Gestalt Psychology (1920s)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Gestalt&lt;/strong&gt; = perception and problem solving
    &lt;ul&gt;
      &lt;li&gt;figure-ground&lt;/li&gt;
      &lt;li&gt;closure&lt;/li&gt;
      &lt;li&gt;proximity&lt;/li&gt;
      &lt;li&gt;similarity&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;modern-cognitive-psychology&quot;&gt;Modern Cognitive Psychology&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Notable figure: Elizabeth Loftus&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;Misinformation Effect&lt;/strong&gt; -&amp;gt; Impacts eyewitness memory and testimony&lt;/li&gt;
  &lt;li&gt;Factors can distort memory&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-9-2016---lecture-2&quot;&gt;May 9, 2016 - Lecture 2&lt;/h2&gt;

&lt;h1 id=&quot;the-socialcultural-perspective&quot;&gt;The Socialcultural Perspective&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Examines how the social environment and culturla learning influence our behaviour, thoughts, and feelings&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Social Psychology Component&lt;/strong&gt; - how the presence of other people influence our behaviour, thoughts, and feelings&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cultural Component&lt;/strong&gt; - Enduring values, beliefs, behavious, and traditions that are shared by a large group of people and passed from one generation to the next Ex. Individualism vs. Collectivism&lt;/li&gt;
  &lt;li&gt;Asch Experiment - influence the presence of others will have on our decision-making (conformity)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;the-biological-perspective&quot;&gt;The Biological Perspective&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Examines how brain processes and other bodily functions regulate behaviour&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Behavioural Neuroscience&lt;/strong&gt; - examines brain processes and other physiological functions that underlie our behaviours, sensory experiences, emotions, and thoughts&lt;/li&gt;
  &lt;li&gt;Notable figures: Lashley, Scoville, Milner, Hebb&lt;/li&gt;
  &lt;li&gt;Most famous person: patient H.M. (memory loss)
    &lt;ul&gt;
      &lt;li&gt;to alleviate seizures related to epilepsy, had brain surgery&lt;/li&gt;
      &lt;li&gt;no more seizures, but caused him to have amnesia (wasn’t able to create new memories)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Another example: Capgras Syndrome&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;chapter-2---studying-behaviour-scientifically&quot;&gt;Chapter 2 - Studying Behaviour Scientifically&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Scientific attitudes&lt;/li&gt;
  &lt;li&gt;Scientific process&lt;/li&gt;
  &lt;li&gt;Types of variables&lt;/li&gt;
  &lt;li&gt;Correlational research&lt;/li&gt;
  &lt;li&gt;Experimental research&lt;/li&gt;
  &lt;li&gt;Statistics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Scientific Attitudes&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Kitty Genovese Murder (1964) - Bystander Apathy&lt;/li&gt;
  &lt;li&gt;Darley &amp;amp; Latane: Why would nobody call the police? Was there something more going on here?&lt;/li&gt;
  &lt;li&gt;Darley &amp;amp; Latane:
    &lt;ul&gt;
      &lt;li&gt;Rather than apaty, perhaps it was “diffusion of responsibility”&lt;/li&gt;
      &lt;li&gt;Created an if-then question&lt;/li&gt;
      &lt;li&gt;In an emergency, IF multiple bystanders are present, THEN the likelihood that any one bystander will intervene is reduced&lt;/li&gt;
      &lt;li&gt;They designed an experiment to test their hypothesis&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The Correlational Method&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Study relationships between variables&lt;/li&gt;
  &lt;li&gt;Variable: anything that can be measured&lt;/li&gt;
  &lt;li&gt;E.g. more smokes, more cancer; higher IQ, more money&lt;/li&gt;
  &lt;li&gt;Relationship between variables is shown by a statistic, the &lt;strong&gt;correlation coefficient (r)&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;r can be anything between -1.0 and +1.0 (STAT 231 amirite)&lt;/li&gt;
  &lt;li&gt;Examples: marijuana and GPA; marijuana and junk food consumption; GPA and height&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Methods of Research&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Correlational Research&lt;/li&gt;
  &lt;li&gt;Experimental&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Case Studies&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;An in-depth analysis of an individual a group, or an event&lt;/li&gt;
  &lt;li&gt;Data may be gathered through observation, interviews, psychological tests, task performances, physiological recordings, or archival records&lt;/li&gt;
  &lt;li&gt;Examples of key case studies: H.M., Phineas Gage&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Advantages:&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Allows for the study of rare phenomenon&lt;/li&gt;
      &lt;li&gt;A case study may challenge the validity of a theory or a widely held scientific belief&lt;/li&gt;
      &lt;li&gt;Can be a source of new ideas and hypotheses that can be further investigated through controlled experiments&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Not just people, events as well&lt;/li&gt;
  &lt;li&gt;Examples: Flashbulb memories (Assassination of JFK, the Challenger Explosion, Death of Diana, 9/11)&lt;/li&gt;
  &lt;li&gt;Monumental events that impact a large group of people&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Limitations&lt;/strong&gt;:
    &lt;ul&gt;
      &lt;li&gt;Poor method for determining “cause-effect”&lt;/li&gt;
      &lt;li&gt;Case studies may not generalize to other people’s situations&lt;/li&gt;
      &lt;li&gt;Observers may not be objective in gathering and interpreting the data&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;We should be skeptical about case studies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Hemispheric lateralization&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Our brains have left and right cerebral hemispheres&lt;/li&gt;
  &lt;li&gt;Left brain vs. Right brain&lt;/li&gt;
  &lt;li&gt;Lateralization - refers to the relatively greater location of a function in one hemisphere or the other&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-16-2016---lecture-3&quot;&gt;May 16, 2016 - Lecture 3&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Neural Bases of Behaviour&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Brain: 3 lbs, mass of tissue made of neurons&lt;/li&gt;
  &lt;li&gt;Neurons = building blocks of the nervous system&lt;/li&gt;
  &lt;li&gt;100 Billion neurons at birth&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Neuron Structures etc.&lt;/strong&gt; - Soma, Dendrites, axons, myelin sheath, node of Ranvier&lt;br /&gt;
&lt;strong&gt;Synaptic Transmission&lt;/strong&gt; - synaptic vesicles, axon terminal, postsynaptic membrane&lt;/p&gt;

&lt;h2 id=&quot;the-human-brain&quot;&gt;The Human Brain&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Cerebral Cortex: outermost layer
    &lt;ul&gt;
      &lt;li&gt;Many connections&lt;/li&gt;
      &lt;li&gt;frontal (motor cortex, complex cognition), temporal (auditory, language), occipital (visual), parietal (sensory)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Broca’s and Wernicke’s Area&lt;/li&gt;
  &lt;li&gt;Aphasia (Broca’s, Wernicke’s) - Partial/Total loss of the ability to communicate&lt;/li&gt;
  &lt;li&gt;Neural Plasticity - the ability for neurons to change in structure and function; brain alterations begin in the uterus and continues throughout life; impacted by genetic factors and environment&lt;/li&gt;
  &lt;li&gt;Synesthesia - one type of stimulation evokes the sensation of another&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-27-2016---term-test-1-review&quot;&gt;May 27, 2016 - Term Test 1 Review&lt;/h2&gt;

&lt;h2 id=&quot;chapter-1&quot;&gt;Chapter 1&lt;/h2&gt;

&lt;p&gt;Psychology = scientific study of behaviour (actions/responses that we can directly observe) and the mind (internal states and processes; must be inferred)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Structuralism&lt;/strong&gt;: 1879, Wundt &amp;amp; Titchener: the analysis of the mind in terms of its basic elements; introspection (looking within); sensations = basic elements of consciousness&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Functionalism&lt;/strong&gt;: psychology should study the functions of consciousness; influenced by evolutionary theory; William James; gave rise to cognitive and evolutionary psychology&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Psychodynamic&lt;/strong&gt;: searches for causes of behaviour within the inner workings of our personality (our unique pattern of traits, emotions and motives); emphasizes the role of unconscious processes; Sigmund Freud; Psychoanalysis: analysis of internal and primarily unconscious psychological forces; Defense mechanisms: techniques that help us cope with anxiety and pain of traumatic experiences, e.g. repression; dominated early 1900s, continue to exist&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Modern Psychodynamic&lt;/strong&gt;: object relations theories focus on how early experiences with caregivers shape the views that people form of themselves&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Behaviourism&lt;/strong&gt;: role of the external environment in governing our actions; emphasizes environmental control of behaviour through learning; rooted in British empiricism; Ivan Pavlov: dog salivation experiment; Edward Thorndike: organisms learn through the consequences of their actions; 1913, John B. Watson: observable behaviour, “human beings are products of their learning experiences”, “give me a dozen infants” quote; B.F. Skinner: “a person does not act upon the world, the world acts upon him”, how behaviour is shaped by rewarding and punishing&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cognitive Behaviourism&lt;/strong&gt;: learning experiences and the environment influence our expectations and other thoughts, and in turn our thoughts influence behaviour; influential&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Humanism&lt;/strong&gt;: free will, personal growth, attempt to find meaning in one’s existence; rejected psychodynamic concepts; rejects unconsciousness; denied behaviourism (humans = reactors molded by environment); Abraham Maslow: inborn force toward self-actualization, reaching of one’s individual potential; importance of personal choice and responsibility, self-worth; meaning of existence resides in our own hands; must take personal responsibility to turn things around; Carl Rogers: humanist, pioneer of psychotherapy; positive psychology movement: human strengths, fulfillment and optimal living&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cognitive Perspective&lt;/strong&gt;: nature of the mind and how mental processes influence behaviour; humans = information processors whose actions are governed by thought; structuralism + functionalism; Hermann Ebbinghaus: studied memory; Gestalt (whole/organization) psychology -&amp;gt; examines how elements of experience are organized into wholes (greater than the sum of its parts); Jean Piaget: children’s thinking processes become more sophisticated with age&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Modern Cognitive Perspective&lt;/strong&gt;: study of mental processes; processes by which people reason and make decisions, devise solutions to problems, form perceptions and mental images; Elizabeth Loftus: memory and how we distort it; Cognitive neuroscience: electrical recording and brain-imaging to examine brain activity during cognitive tasks; Social constructivism: reality is our own mental creation, the product of a shared way of thinking among members of social groups&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sociocultural Perspective&lt;/strong&gt;: exami nes how the social environment and cultural learning influence our behaviour, thoughts, and feelings; culture = enduring values, beliefs, behaviours, and traditions that are shared by a large group of people and passed down generationally; norms = rules that specify what behaviour is acceptable and expected for members; cultural psychology: how culture is transmitted to its members and examines psychological similarities and differences; individualism: emphasis on personal goals and self-identity based on one’s own attributes and achievements; collectivism: individual goals are subordinated to those of the group; Asch Experiement: conformity&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Biological Perspective&lt;/strong&gt;: how brain processes and other bodily functions regulate behaviour; Behavioural neuroscience: brain processes and other physiological functions that underlie our behaviour, sensory experiences, emotions, and thoughts; Karl Lashley, Donald Hebb: brain’s role in leraning, trained rats to run mazes, mapped brain regions involved in specific psychological functions&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;chapter-2&quot;&gt;Chapter 2&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Correlational Method&lt;/strong&gt;: Study relationships among variables; behaviours, events, characteristics; e.g. more smokes, more cancer; correlation coefficienct (r)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Case Studies&lt;/strong&gt;: in-depth analysis of an individual, group, or event; data may be gathered through observation, interviews, psychological tests, task performances, physiologicla recordings, or archival records; e.g. H.M., David from the Capgras Delusion video (Capgras = irrational belief that a familiar person or place has been replaced with an exact duplicate), Phineas Gage&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Experimental&lt;/strong&gt;: experimental group and control group&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Naturalistic Observation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Survey Research&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;chapter-3&quot;&gt;Chapter 3&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Phineas Gage&lt;/strong&gt;: Damaged ventromedial frontal lobe -&amp;gt; change in personality&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Brain&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cerebral Cortex: outermost layer of brain, many connections to other areas
    &lt;ul&gt;
      &lt;li&gt;Frontal: complex cognition, motor cortex&lt;/li&gt;
      &lt;li&gt;Temporal: auditory, language&lt;/li&gt;
      &lt;li&gt;Occipital: visual&lt;/li&gt;
      &lt;li&gt;Parietal: sensory&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Neurons:
    &lt;ul&gt;
      &lt;li&gt;Cell body (Soma): contains biochemical structure that keep the neuron alive&lt;/li&gt;
      &lt;li&gt;Dendrites: antennae that collect messages from other neurons&lt;/li&gt;
      &lt;li&gt;Axon: covered by myelin sheath, conducts electrical impulses away from the cell body to other neurons, muscles, or glands&lt;/li&gt;
      &lt;li&gt;Synaptic Transmission: synthesis of neurotransmitter -&amp;gt; storage in synaptic vesicles -&amp;gt; release into synaptic space -&amp;gt; binding to receptor sites -&amp;gt; deactivation through reuptake or breakdown&lt;/li&gt;
      &lt;li&gt;Broca’s and Wernicke’s Area: Broca’s (expressive) aphasia: trouble speaking fluently but comprehension is preserved; Wernicke’s (fluent) aphasia: unable to understand language in its written or spoken form&lt;/li&gt;
      &lt;li&gt;Neural plasticity: ability of neurons to change in structure and function; impacted by genetic factors and environment; greater number of synapses results in quicker and more complete recovery&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Synesthesia: one type of stimulation evokes the sensation of another; possible explanations: cross connections of the senses at the neural level, OR we are all born with it, as brain develops it fades and changes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Motivation&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Olds and Miller (1953) - mistakenly placed an electrode into a rat’s hypothalamus&lt;/li&gt;
  &lt;li&gt;Started repeating the previous activity in hopes of receiving the stimulation again&lt;/li&gt;
  &lt;li&gt;Found the pleasure centre of the brain = Nucleus Accumbens&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Human Aggression, Criminal Behaviour, and the Frontal Cortex&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Psychopathy: emotional dysfunction and antisocial behaviour; extreme form of antisocial personality disorder&lt;/li&gt;
  &lt;li&gt;PCL-R (Psychopathy checklist): shallow affect (superficial emotional responsiveness), callousness and lack of empathy, parasitic lifestyle, poor behavioural controls, and sexual promiscuity&lt;/li&gt;
  &lt;li&gt;Train Dilemma&lt;/li&gt;
  &lt;li&gt;Face recognition: some believe face recognition is based on dedicated brain mechanisms&lt;/li&gt;
  &lt;li&gt;Face-inversion effect: inversion harms the ability to recognize faces much more than it does other objects&lt;/li&gt;
  &lt;li&gt;Prosopagnasia = “face blindness” -&amp;gt; gives us first hand knowledge, demonstration that there is a specialized area of the brain that handles these types of processes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;chapter-4&quot;&gt;Chapter 4&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;The Jim Twins&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Chrmosomes and Genes&lt;/strong&gt;:
    &lt;ul&gt;
      &lt;li&gt;Hippocrates - suggested that semem contains some sort of design for the formation of offspring&lt;/li&gt;
      &lt;li&gt;Gregor Mendel - garden peas -&amp;gt; modern genetic theory&lt;/li&gt;
      &lt;li&gt;Dominant and recessive genes&lt;/li&gt;
      &lt;li&gt;Genetic Influences: genotype = the specific genetic makeup of an individual, phenotype = observable characteristics&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-6-2016---lecture-4&quot;&gt;June 6, 2016 - Lecture 4&lt;/h2&gt;

&lt;h2 id=&quot;chapter-5---sensation-and-perception&quot;&gt;Chapter 5 - Sensation and Perception&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Information comes in through our senses&lt;/li&gt;
  &lt;li&gt;Our brains interpret this information&lt;/li&gt;
  &lt;li&gt;E.g. You &lt;strong&gt;look&lt;/strong&gt; with your eyes, you &lt;strong&gt;see&lt;/strong&gt; with your brain&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sensation&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Stimulus-detection process&lt;/li&gt;
      &lt;li&gt;Sense organs respond to and translate stimuli into nerve impulses sent to brain&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Perception&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Organizing and giving meaning to input&lt;/li&gt;
      &lt;li&gt;Making “sense” of what our senses tell us&lt;/li&gt;
      &lt;li&gt;Active process of organizing stimuli input and giving it meaning&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;13 or B? Perception takes s a step beyond sensation (context and perception); also “name these colors” - the Stroop Effect (interference in the reaction time of a task; most cited paper in experimental psychology)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sensory-processes&quot;&gt;Sensory Processes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;6 stages in the sensory processing and perception of information: How sensation becomes perception:
    &lt;ol&gt;
      &lt;li&gt;Sensation: stimulus is received by sensory receptors&lt;/li&gt;
      &lt;li&gt;Receptors translate stimulus properties into nerve impulses (transduction)&lt;/li&gt;
      &lt;li&gt;Feature detectors analyze stimulus features&lt;/li&gt;
      &lt;li&gt;Stimulus features are reconstructed into neural representation&lt;/li&gt;
      &lt;li&gt;Neural representation is compared with previously stored information in brain&lt;/li&gt;
      &lt;li&gt;Matching process results in recognition and interpretation of stimulus; Perception&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Psychophysics&lt;/strong&gt; = studies relations between the physical characteristics of stimuli and sensory capabilities; Focuses on two kinds of sensitivity:
    &lt;ul&gt;
      &lt;li&gt;absolute limits of sensitivity (dimmest light perceivable etc.)&lt;/li&gt;
      &lt;li&gt;differences between stimuli (smallest difference between two tones that we can detect)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;absolute-threshold&quot;&gt;Absolute Threshold&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Intensity at which a stimulus can be detected 50% of the time
    &lt;ul&gt;
      &lt;li&gt;Lower the absolute threshold - higher the sensitivity&lt;/li&gt;
      &lt;li&gt;(Board definition: smallest level of energy required by an external stimulus to be detectable by human senses)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;A key distinction here is that absolute threshold measures the level that we can actually report sensing a stimuli&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Absolute thresholds for various senses&lt;/strong&gt;:
    &lt;ul&gt;
      &lt;li&gt;Vision: candle flame seen at 30 mi/50 km on a clear, dark night&lt;/li&gt;
      &lt;li&gt;Hearing: tick of a watch under quiet conditions at 20 ft/6 m&lt;/li&gt;
      &lt;li&gt;Taste: 1 teaspoon of sugar in 2 gal / 7.5 L of water&lt;/li&gt;
      &lt;li&gt;Smell: 1 drop of perfume diffused into the entire volume of a large apartment&lt;/li&gt;
      &lt;li&gt;Touch: wing of a fly or bee falling on a person’s cheek from a distance of 1 cm&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;We therefore have to consciously be aware of the stimuli to successfully report it&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Decision criterion&lt;/strong&gt;: a standard of how certain people must be that a stimulus is present before they will say they detect it; can change from time to time, also depends on fatigue, expectation and potential significance of the stimulus&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Signal Detection Theory&lt;/strong&gt;: concerned with factors that influence sensory judgments; perception is in part a decision
    &lt;ul&gt;
      &lt;li&gt;Ask participants to indicate if they perceived a stimulus
        &lt;ul&gt;
          &lt;li&gt;2 Conditions: Stimulus present/absent&lt;/li&gt;
          &lt;li&gt;4 Possible outcomes: hit (“Yes”/Present), miss (“No”/Present), false alarm (“Yes”/Absent), correct rejection (“No”/Absent)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;What about stimuli that is just below our conscious awareness or our absolute threshold?&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;subliminal-perception&quot;&gt;Subliminal Perception&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Definition: A stimulus that is so weak or brief that, although it is received by the senses, it cannot be perceived consciously&lt;/li&gt;
  &lt;li&gt;Subliminal stimuli can be registered in the nervous system, and can affect attitudes and behaviour without our knowing it (to a limited extent)&lt;/li&gt;
  &lt;li&gt;Late 1950’s: James Vicary (PR Exec) arranged to have subliminal messages flashed on a theatre screen during a movie
    &lt;ul&gt;
      &lt;li&gt;Messages said: “Drink Coca-Cola”, “Eat Popcorn”&lt;/li&gt;
      &lt;li&gt;Popcorn sales went up by 50%, Coke 18%&lt;/li&gt;
      &lt;li&gt;Public were outraged, fear of brainwashing&lt;/li&gt;
      &lt;li&gt;National Association of Broadcasters outlawed subliminal messages on American TV&lt;/li&gt;
      &lt;li&gt;PROBLEM: Results under controlled experiments could not be replicated; Hoax to revive his ad agency&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Studies were finding that subliminal messages didn’t really change consumer behaviour&lt;/li&gt;
  &lt;li&gt;Persuasive stimuli above the perceptual threshold are far more influential than subliminal attempts to sneak into our subconscious mind&lt;/li&gt;
  &lt;li&gt;But research started to focus on more subtle processes, like our attitudes: Can subliminal messages impact our attitudes?&lt;/li&gt;
  &lt;li&gt;Krosnick (1992):
    &lt;ul&gt;
      &lt;li&gt;Showed participants 9 slides showing pictures of people&lt;/li&gt;
      &lt;li&gt;Half of participants received negative subliminal messages just prior&lt;/li&gt;
      &lt;li&gt;Half received positive subliminal messages just prior&lt;/li&gt;
      &lt;li&gt;FINDING: Participants expressed somewhat negative attitudes towards negatively “primed” individuals, compared with their positively primed participants&lt;/li&gt;
      &lt;li&gt;Stimuli above absolute threshold is better than subliminal messages&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;subliminal-messages&quot;&gt;Subliminal Messages&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;What advertisers have discovered is that stimuli above absolute threshold is more powerful than subliminal messages&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;visual-attention&quot;&gt;Visual Attention&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Inattentional blindness
    &lt;ul&gt;
      &lt;li&gt;Failure to notice obvious changes in visual scene; or failure of unattended stimuli to register in consciousness&lt;/li&gt;
      &lt;li&gt;We can look right at something without “seeing” it if we are attending to something else&lt;/li&gt;
      &lt;li&gt;Sometimes termed change blindness&lt;/li&gt;
      &lt;li&gt;Simons and Chabris (1999): Moonwalking bear or gorilla suit
        &lt;ul&gt;
          &lt;li&gt;Subjects watched and attached to a video&lt;/li&gt;
          &lt;li&gt;Over 1/2 failed to notice bizarre event&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Environmental and Personal Factors
    &lt;ul&gt;
      &lt;li&gt;Attention is influenced by:
        &lt;ul&gt;
          &lt;li&gt;Nature of stimulus (intensity, novelty, movement, contrast, repetition)&lt;/li&gt;
          &lt;li&gt;Personal factors (motives and interests), e.g. when we are hungry, we are sensitive to food-related cues&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;People are attentive to stimuli that represent a threat -&amp;gt; biological survival value
        &lt;ul&gt;
          &lt;li&gt;E.g. recognizing angry faces: people are much faster at detecting a single angry face in a happy crowd -&amp;gt; attentional processes are based on innate biological factors and on past experiences that make certain stimuli important (Hansen, Hansen, 1988)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The Role of Attention
    &lt;ul&gt;
      &lt;li&gt;Involves 2 processes of selection:
        &lt;ol&gt;
          &lt;li&gt;Focusing on a certain stimulus&lt;/li&gt;
          &lt;li&gt;Filtering out other incoming information&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Shadowing&lt;/strong&gt;: participants wear earphones and listen simultaneously to 2 messages. Asked to repeat or “shadlow” one of the messages
        &lt;ul&gt;
          &lt;li&gt;They can repeat one message successfully, but have a hard time remembering the other one&lt;/li&gt;
          &lt;li&gt;We cannot attend completely to more than one thing at a time&lt;/li&gt;
          &lt;li&gt;We can shift our attention rapidly back and forth between messages&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Divided Attention
    &lt;ul&gt;
      &lt;li&gt;Automatic processing assists us in our ability to have divided attention&lt;/li&gt;
      &lt;li&gt;Defn: The ability to perform more than one activity at a time&lt;/li&gt;
      &lt;li&gt;We can do it, but not great at it&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;difference-threshold&quot;&gt;Difference Threshold&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Definition: The smallest difference between two stimuli that people can perceive 50 percent of the time&lt;/li&gt;
  &lt;li&gt;aka Just Noticeable Difference (JND)&lt;/li&gt;
  &lt;li&gt;Weber’s Law: JND is directly proportional to the magnitude of the stimulus with which the comparison is being made&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;gestalt-principles-of-perceptual-organization&quot;&gt;Gestalt Principles of Perceptual Organization&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Figure-Ground: our tendency to organize stimuli into a central or foreground figure and a background
    &lt;ul&gt;
      &lt;li&gt;The central figure is usually in front of or on top of what we perceive to be the background&lt;/li&gt;
      &lt;li&gt;The central figure tends to more striking and more memorable than the background&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Similarity: when parts of a configuration are perceived as similar, they will be perceived as belonging together&lt;/li&gt;
  &lt;li&gt;Proximity: elements that are near each other are likely to be perceived as part of the same configuration&lt;/li&gt;
  &lt;li&gt;Good Continuation (Continuity): people link individual elements together so they form a continuous pattern that makes sense&lt;/li&gt;
  &lt;li&gt;Closure: people tend to close the open edges of a figure or fill in gaps in an incomplete figure, so that their identification of the form is more complete that what is actually present&lt;/li&gt;
  &lt;li&gt;Common Region&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;perceptual-hypotheses&quot;&gt;Perceptual Hypotheses&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Perceptual Schema&lt;/strong&gt;: a mental representation or image containing the critical features of a person, object, event, or other perceptual phenomenon; mental templates&lt;/li&gt;
  &lt;li&gt;The perceptual system actively searches its library of internal schemas for the interpretation that best fits the sensory data&lt;/li&gt;
  &lt;li&gt;Ponzo Illusion: train track yellow line&lt;/li&gt;
  &lt;li&gt;Muller-Lyer Illusion: stylized arrow&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;perceptual-sets&quot;&gt;Perceptual Sets&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Readiness to perceive stimuli in a particular way&lt;/li&gt;
  &lt;li&gt;Like being primed to expect something and therefore perceiving it&lt;/li&gt;
  &lt;li&gt;Study by Kelley (1950) - guest lecturer “warm” vs. “cold” descriptor&lt;/li&gt;
  &lt;li&gt;Bugelski &amp;amp; Alampay (1961)
    &lt;ul&gt;
      &lt;li&gt;Primed participants with either human faces or animal pictures&lt;/li&gt;
      &lt;li&gt;Then showed them amibuguous images, like “rat-man”&lt;/li&gt;
      &lt;li&gt;Those who were primed with the faces saw a man, those who were primed with animals saw a rat&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;cultural-differences-and-perception&quot;&gt;Cultural Differences and Perception&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Our cultural experiences and the type of perceptions we are used to experiencing can influence how we perceive stimuli&lt;/li&gt;
  &lt;li&gt;People from different cultures could look at the same stimuli but perceive it differently&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-13-2016---lecture-5&quot;&gt;June 13, 2016 - Lecture 5&lt;/h2&gt;

&lt;p&gt;Test 2 on June 27, 2016 -&amp;gt; 60 MC, ~15 questions from each chapter (5, 6, 7, 8)&lt;/p&gt;

&lt;h3 id=&quot;audition&quot;&gt;Audition&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Stimulus for hearing = sounds waves (described by 2 characteristics: frequency (pitch) and amplitude (loudness/intensity))&lt;/li&gt;
  &lt;li&gt;The McGurk Effect: interaction between hearing and vision in speech perception; auditory component of one sound is paired with the visual component of another sound, leadning to the perception of a third sound&lt;/li&gt;
  &lt;li&gt;Echolocation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;chapter-6-consciousness&quot;&gt;Chapter 6: Consciousness&lt;/h2&gt;

&lt;h3 id=&quot;consciousness&quot;&gt;Consciousness&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Definition: Moment-to-moment awareness of ourselves and the environment&lt;/li&gt;
  &lt;li&gt;Major characteristics:
    &lt;ol&gt;
      &lt;li&gt;subject and private: other people cannot directly know what the reality is for you, nor can you enter directly into their experience&lt;/li&gt;
      &lt;li&gt;dynamic (ever changing): we drift in and out of various states. Although stimuli constantly change, we experience consciousness as a continuously flowing stream of mental activity&lt;/li&gt;
      &lt;li&gt;self-reflective and central to our sense of self: the mind is aware of its own consciousness. Thus, no matter what your awareness is focused on, you can reflect on the fact that you are the one who is conscious of it&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Consciousness is connected with the process of selective attention (process that focuses awareness on some stimuli to the exclusion of others)&lt;/li&gt;
  &lt;li&gt;Levels of consciousness: Psychodynamic Perspective
    &lt;ol&gt;
      &lt;li&gt;The conscious mind - contains our thoughts, perceptions, and other mental events we are aware of&lt;/li&gt;
      &lt;li&gt;Preconscious - mental events that are out of our current awareness but that can be easily retrieved under certain conditions&lt;/li&gt;
      &lt;li&gt;Unconscious - events cannot be brought into conscious awareness under ordinary circumstances&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Levels of consciousness: Cognitive Perspective -&amp;gt; Views the conscious and unconscious as working together, not as in constant conflict with each other like the psychodynamic approach
    &lt;ul&gt;
      &lt;li&gt;Controlled vs. Automatic Processing&lt;/li&gt;
      &lt;li&gt;Controlled processing - requires voluntary use of attention and conscious effort (e.g. learning to type, use utensils etc.)
        &lt;ul&gt;
          &lt;li&gt;More practice -&amp;gt; increased performance -&amp;gt; brain regions involved in conscious thought become less active&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Automatic processing - activities can be performed with little or no conscious effort&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;stages-of-sleep&quot;&gt;Stages of Sleep&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;EEG
    &lt;ul&gt;
      &lt;li&gt;Beta waves - when you are awake and alert; high frequency (15 to 30 cycles per second), low amplitude&lt;/li&gt;
      &lt;li&gt;Alpha waves - relaxed and drowsy, brain waves slow down; low frequency (8 to 12 cps)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;As sleep begins, brain-wave pattern becomes irregular
    &lt;ul&gt;
      &lt;li&gt;Theta waves - (3.5 to 7.5 cps)&lt;/li&gt;
      &lt;li&gt;Delta waves - (0.5 to 2 cps), very large amplitude&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Stage 1
    &lt;ul&gt;
      &lt;li&gt;Light Sleep, easily awakened&lt;/li&gt;
      &lt;li&gt;Theta waves increase&lt;/li&gt;
      &lt;li&gt;May experience “body jerks”&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Stage 2
    &lt;ul&gt;
      &lt;li&gt;Sleep deepens - muscles more relaxed - harder to awaken, dreams may occur&lt;/li&gt;
      &lt;li&gt;Sleep spindles (periodic 1 to 2 second bursts of rapid brain-wave activity (12 to 15 cps))&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Stage 3
    &lt;ul&gt;
      &lt;li&gt;Sleep deepens&lt;/li&gt;
      &lt;li&gt;Delta waves start occurring; as time passes they occur more often&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Stage 4
    &lt;ul&gt;
      &lt;li&gt;Delta waves dominate pattern&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Stage 3 and 4: Slow-wave sleep; body is relaxed, activity in various parts of brain has decreased, hard to awaken, may have dreams&lt;/li&gt;
  &lt;li&gt;REM Sleep
    &lt;ul&gt;
      &lt;li&gt;Rapid eye movement&lt;/li&gt;
      &lt;li&gt;High arousal (heart rate, breathing, brain wave activity)&lt;/li&gt;
      &lt;li&gt;REM sleep paralysis: difficult for voluntary muscles to contract&lt;/li&gt;
      &lt;li&gt;Frequent dreaming&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sleep-deprivation&quot;&gt;Sleep Deprivation&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Pilcher &amp;amp; Bradley (1996) studied sleep deprivation&lt;/li&gt;
  &lt;li&gt;Short-term sleep deprived (up to 45 hours without sleep)&lt;/li&gt;
  &lt;li&gt;Long-term sleep deprived (more than 45 hours without sleep)&lt;/li&gt;
  &lt;li&gt;Partial deprivation (sleep no more than 5 hours per night for one or more consecutive nights)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Responses on: Mood, mental tasks, physical tasks&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;University students who pull all-nighters perform more poorly on critical thinking tasks than students allowed to sleep&lt;/li&gt;
  &lt;li&gt;But sleep deprived students actually report that they performed better and concentrated harder&lt;/li&gt;
  &lt;li&gt;People seem to underestimate the negative impact sleep deprivation has on their abilities&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sleep-disorders&quot;&gt;Sleep Disorders&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Insomnia&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Chronic difficulty in falling asleepm staying asleep, or experienceing restful sleep&lt;/li&gt;
      &lt;li&gt;Most common sleep disorder, affects 10-40% of the population&lt;/li&gt;
      &lt;li&gt;Has biological, psychological, and environmental causes&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Narcolepsy&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Extreme daytime sleepiness and sudden, uncontrollable sleep attacks&lt;/li&gt;
      &lt;li&gt;Can last from less for a minute to an hour&lt;/li&gt;
      &lt;li&gt;May also experience &lt;strong&gt;cataplexy&lt;/strong&gt; (sudden loss of muscle tone triggered by laughter, excitement, and other strong emotions)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sleepwalking&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Typically occurs during stage 3 or 4 sleep&lt;/li&gt;
      &lt;li&gt;Often have a blank stare and are unresponsive to other people&lt;/li&gt;
      &lt;li&gt;About 10-30% of children sleepwalk but only 5% adults&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;REM-Sleep Behaviour Disorder (RBD)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Loss of muscle tone that causes normal REM sleep paralysis is absent&lt;/li&gt;
      &lt;li&gt;RBD sleepers may kick violently, throw punches, or get out of bed and move about wildly&lt;/li&gt;
      &lt;li&gt;Often injure themselves while sleeping and sometimes injure their sleeping partners as well&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Nightmares and Night Terrors&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Nightmares are frightening dreams&lt;/li&gt;
      &lt;li&gt;Night terrors (sleep terrors) are more intense than nightmares; occur during stage 3 or 4 sleep
        &lt;ul&gt;
          &lt;li&gt;Sleeper sits up and starts screamingl; terrified and near panic&lt;/li&gt;
          &lt;li&gt;6% of children&lt;/li&gt;
          &lt;li&gt;Only 1-2% of adults&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dreams&quot;&gt;Dreams&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;When do we dream?
    &lt;ul&gt;
      &lt;li&gt;Not just during REM sleep, but the majority of dreaming does take place during REM sleep&lt;/li&gt;
      &lt;li&gt;The final hours of sleep contains more dreaming compared to the beginning of sleep&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;What do we dreama about?
    &lt;ul&gt;
      &lt;li&gt;Actually dreams are generally quite “ordinary” with familiar settings&lt;/li&gt;
      &lt;li&gt;Large proportion contains negative emotions and/or contained aggressive acts&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Why?
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Freud Analytic Theory&lt;/strong&gt; - Main purpose of dreaming is wish fulfillment - the gratification of our unconscious desires&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Activation-Synthesis Theory&lt;/strong&gt; - duing REM sleep the brain stem is bombarding our higher brain centres with random neural activity; this activity does not match our external sensory events, but our cerebral cortex continues its job of interpretation&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Cognitive Approach&lt;/strong&gt; - Porblem-solving dream models. Dreams can help us find creative solutions to our problems and conflicts
        &lt;ul&gt;
          &lt;li&gt;Integation? Antrobus (1991) combined aspects from each (cognitive, biological, and modern psychoanalytic) perspective to try and explain the dreaming process&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;psychoactive-drugs&quot;&gt;Psychoactive Drugs&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Drugs that influence subjective experience and behaviour by activing on the nervous system&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tolerance&lt;/strong&gt;: users become less affected by the drug, so requires larger doses to achieve the same effect&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Compensatory Responses&lt;/strong&gt;: physiological reactions opposite to drug effect; body adjusting to drug&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Withdrawal&lt;/strong&gt;: compensatory responses after drug is discontinued&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Influence activity on neurotransmitters
    &lt;ul&gt;
      &lt;li&gt;Agonists: increase activity&lt;/li&gt;
      &lt;li&gt;Antagonists: decrease activity&lt;/li&gt;
      &lt;li&gt;e.g. Prozac (an antidepressant) works by increasing serotonin levels&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;drug-categories&quot;&gt;Drug Categories&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Stimulants
    &lt;ul&gt;
      &lt;li&gt;increase blood pressure, respiration, heart rate, alertness&lt;/li&gt;
      &lt;li&gt;improve mood, produce euphoria&lt;/li&gt;
      &lt;li&gt;may improve concentration, attention&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Depressants
    &lt;ul&gt;
      &lt;li&gt;decrease nervous system activity&lt;/li&gt;
      &lt;li&gt;small doses: reduce tension and anxiety, produce relaxation&lt;/li&gt;
      &lt;li&gt;Very high doses: slow down vital life processes to the point of death&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;alcohol&quot;&gt;Alcohol&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Behavioural Effects of Alcohol
    &lt;ul&gt;
      &lt;li&gt;0.03 1 Decreased alertness, impaired reaction time&lt;/li&gt;
      &lt;li&gt;0.05 2 Decreased alertness, impaired judgment and reaction time, feeling of relaxation, release of inhibitions&lt;/li&gt;
      &lt;li&gt;0.10 4 Severely impaired reaction time, motor function, and judgment, less caution&lt;/li&gt;
      &lt;li&gt;0.15 10 Gross intoxication, impairemnts worsen&lt;/li&gt;
      &lt;li&gt;0.25 ? Extreme sensory and motor impairment, staggering&lt;/li&gt;
      &lt;li&gt;0.30 ? Stuporous but conscious, cannot comprehend immediate environment&lt;/li&gt;
      &lt;li&gt;0.40 ? Lethal in over 50% of cases&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Withdrawal Symptoms
    &lt;ul&gt;
      &lt;li&gt;“Hangover” (mild withdrawal): headache, nausea, vomiting, termors&lt;/li&gt;
      &lt;li&gt;Full-blown withdrawal
        &lt;ul&gt;
          &lt;li&gt;Phase 1 (5-6 hours after cessation)
            &lt;ul&gt;
              &lt;li&gt;severe tremors, agitation, headache, abdominal cramps, profuse sweating&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Phase 2 (begins 24-48 hours after cessation)
            &lt;ul&gt;
              &lt;li&gt;Convulsions&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Phase 3 (begins 2 or 3 days after)
            &lt;ul&gt;
              &lt;li&gt;Delirium tremes (“DTs”)&lt;/li&gt;
              &lt;li&gt;Hallucinations, delusions, agitation, confusion, hyperthermia&lt;/li&gt;
              &lt;li&gt;Can be lethal&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Chronic consumption
    &lt;ul&gt;
      &lt;li&gt;Brain Damage&lt;/li&gt;
      &lt;li&gt;Korsakoff’s Syndrome (severe memory loss, dementia, sensory/motor dysfunction)&lt;/li&gt;
      &lt;li&gt;Causes scarring of the liver&lt;/li&gt;
      &lt;li&gt;Erodes muscles of heart (heart attack)&lt;/li&gt;
      &lt;li&gt;Higher risk of many cancers&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Alcohol and Time Perception
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Temporal Myopia&lt;/strong&gt;: increased attention to immediate events and decreased attention to more distant events; e.g. more likely to engage in risky behaviour, ignoring long-term consequences&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;amphetamines&quot;&gt;Amphetamines&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Usually ingested, injected&lt;/li&gt;
  &lt;li&gt;Increases dopamine and norepinephrine activity&lt;/li&gt;
  &lt;li&gt;Heavy use can lead to “amphetamine psychosis”, schizophrenia-like hallucinations and delusions&lt;/li&gt;
  &lt;li&gt;Withdrawl symptoms
    &lt;ul&gt;
      &lt;li&gt;Sleep for 1 or 2 days&lt;/li&gt;
      &lt;li&gt;Wake up depressed, exhausted, irritable&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Ecstasy(MDMA)&lt;/strong&gt;: derivative of amphetamine
    &lt;ul&gt;
      &lt;li&gt;Synthesized in 1914, emerged in 1960s&lt;/li&gt;
      &lt;li&gt;Originally thought to be the safe drug&lt;/li&gt;
      &lt;li&gt;Adverse effects: MDMA is a neurotoxin, kills neurons that produce serotonin&lt;/li&gt;
      &lt;li&gt;Linked to cognitive impairment, depression, suicide, sudden death&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cocaine&quot;&gt;Cocaine&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Coca bush, was widely used as an anesthetic&lt;/li&gt;
  &lt;li&gt;Eaten, smoked, snorted, or injected&lt;/li&gt;
  &lt;li&gt;Free-based form (Crack) -&amp;gt; smoked or injected&lt;/li&gt;
  &lt;li&gt;Effects:
    &lt;ul&gt;
      &lt;li&gt;Well-being, self-confidence, alertness, energy, strength, socially outgoing, fidgety, talkativeness&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;opiates&quot;&gt;Opiates&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Opium is a product of the opium poppy&lt;/li&gt;
  &lt;li&gt;Drugs derived from opium - called opiates&lt;/li&gt;
  &lt;li&gt;For example: morphine, codeine, and heroin&lt;/li&gt;
  &lt;li&gt;Two major effects:
    &lt;ul&gt;
      &lt;li&gt;Pain relief&lt;/li&gt;
      &lt;li&gt;Mood changes (intense euphoria)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Oxycodone (aka Ocycontin and Percocet)
    &lt;ul&gt;
      &lt;li&gt;Powerful painkillers that have intense mood-altering effects&lt;/li&gt;
      &lt;li&gt;Increase dopamine activity&lt;/li&gt;
      &lt;li&gt;Bayer used to market heroin as a cough suppressant&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;hallucinogens&quot;&gt;Hallucinogens&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Powerful mind-altering drugs that produce hallucinations&lt;/li&gt;
  &lt;li&gt;Some are natural sources - Mescaline (peyote)&lt;/li&gt;
  &lt;li&gt;Some are synthetic - LSD and phencyclidine (angel dust)&lt;/li&gt;
  &lt;li&gt;Classifying Hallucinogens: The first three relate to the chemical similarity between the particular drug and one of three major neurotransmitters: acetylcholine, serotonin, or norepinephrine; The fourth, miscellaneous group includes synthetic hallucinogens, such as phencyclidine(PCP) and ketamine, which bear little resemblance to any known neurotransmitter&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;lysergic-acid-diethylamide-lsd&quot;&gt;Lysergic Acid Diethylamide (LSD)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;LSD experience is often unpredictable, but certain features are commonly observed:
    &lt;ul&gt;
      &lt;li&gt;Colorful hallucinations&lt;/li&gt;
      &lt;li&gt;Synesthesia in which sounds often appear as visions&lt;/li&gt;
      &lt;li&gt;Emotional swings&lt;/li&gt;
      &lt;li&gt;A feeling of timelessness&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Affects a subtype of brain receptors sensitive to serotonin, referred to as serotonin-2A receptors&lt;/li&gt;
  &lt;li&gt;IN the early 1990s, a resurgence in LSD abuse among young people&lt;/li&gt;
  &lt;li&gt;Hollow mask test&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;marijuana&quot;&gt;Marijuana&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;From the hemp plant - Cannabis Sativa&lt;/li&gt;
  &lt;li&gt;Hard to classify&lt;/li&gt;
  &lt;li&gt;Most widely used illicit drug in Canada&lt;/li&gt;
  &lt;li&gt;Approximately one third of all Canadians have used marijuana at least once&lt;/li&gt;
  &lt;li&gt;Acute Effects of Marijuana
    &lt;ul&gt;
      &lt;li&gt;Because marijuana is often consumed through smoking, the acute effects are rapid, but because it is absorbed into fatty tissue, its elimination is slow&lt;/li&gt;
      &lt;li&gt;It may require days or weeks for THC to leave the body completely&lt;/li&gt;
      &lt;li&gt;Acute physiological effects: cardiac acceleration and a reddening of the eyes&lt;/li&gt;
      &lt;li&gt;Acute psychological effects: euphoria, giddiness, a perception of time elongation, and increased hunger&lt;/li&gt;
      &lt;li&gt;There are impairments in attention and memory, which interfere with complex visual-motor skills such as driving an automobile&lt;/li&gt;
      &lt;li&gt;The acute effects of marijuana are now known to be due to the binding of THC at special receptors in the brain&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Misconceptions about marijuana:
    &lt;ul&gt;
      &lt;li&gt;Leads to amotivational syndrome (unmotivated and apathetic towards everything)&lt;/li&gt;
      &lt;li&gt;Causes people to use more dangerous drugs (gateway drug)&lt;/li&gt;
      &lt;li&gt;Has no significant dangers
        &lt;ul&gt;
          &lt;li&gt;Cancer-causing substances&lt;/li&gt;
          &lt;li&gt;Impairs memory and learning&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-20-2016---lecture-6&quot;&gt;June 20, 2016 - Lecture 6&lt;/h2&gt;

&lt;h3 id=&quot;hypnosis&quot;&gt;Hypnosis&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Hypnotic Induction&lt;/strong&gt;: a process that creates a context for hypnosis&lt;/li&gt;
  &lt;li&gt;The goal is to relax the subject and increase his or her concentration&lt;/li&gt;
  &lt;li&gt;People cannot be hypnotized against their will. Even when people want to be hypnotized, they differ in how “susceptible” they are to hypnotic suggestion&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dissociation Theory&lt;/strong&gt;: Hypnosis is an altered state involving a division of consciousness
    &lt;ul&gt;
      &lt;li&gt;Hypnosis creates a division of consciousness in which the person simultaneously experiences two streams of consciousness that are cut off from each other&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Social Cognitive Theories&lt;/strong&gt;: hypnotic experiences result from expectations of people who are motivated to take on the role of being “hypnotized”
    &lt;ul&gt;
      &lt;li&gt;Most people believe that hypnosis involves a trancelike appearance, responsiveness to suggestion, and loss of self-consciousness&lt;/li&gt;
      &lt;li&gt;Develop a perceptual set&lt;/li&gt;
      &lt;li&gt;Orne, 1959
        &lt;ul&gt;
          &lt;li&gt;Importance of expectations about hypnosis&lt;/li&gt;
          &lt;li&gt;Classroom demonstration. University students were told that hypnotized people usually experience spontanoues stiffening of muscles in dominant hand (not actually the case)&lt;/li&gt;
          &lt;li&gt;When students were later hypnotized, 55% of them exhibited stiffening of the hand without suggestion from the hypnotist&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;chapter-7---learning&quot;&gt;Chapter 7 - Learning&lt;/h2&gt;

&lt;h3 id=&quot;classical-conditioning&quot;&gt;Classical Conditioning&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Associating one stimulus with another&lt;/li&gt;
  &lt;li&gt;Basic form of learning&lt;/li&gt;
  &lt;li&gt;Learn to associate two stimuli
    &lt;ul&gt;
      &lt;li&gt;One stimulus elicits a response that was originally elicited only by the other stimulus&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Applications:
    &lt;ul&gt;
      &lt;li&gt;Fear&lt;/li&gt;
      &lt;li&gt;Overcoming Fear
        &lt;ul&gt;
          &lt;li&gt;Exposure Therapy: Extinction of CR through exposure to CS without presence of UCS&lt;/li&gt;
          &lt;li&gt;Systematic Desensitization: Muscular relaxation paired with gradual exposure to fear-inducing stimulus&lt;/li&gt;
          &lt;li&gt;Flooding: Exposure to fearful stimulus&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;acquisition&quot;&gt;Acquisition&lt;/h3&gt;

&lt;p&gt;4 important elements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Unconditioned Stimulus(UCS)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Stimulus that elicits a reflexive or innate unconditioned response (UCR) without prior learning&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Unconditioned Response(UCR)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Reflexive or innate response elicited by the UCS without prior learning&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Conditioned Stimulus(CS)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;stimulus that through association with the UCS, comes to elicit a conditioned response similar to the original UCR&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Conditioned Response(CR)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Response elicited by a conditioned stimulus&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note: UCR and CR are the same thing, what elicits them is different!&lt;/p&gt;

&lt;p&gt;E.g. Before conditioning, tone leads to no salivation response, unconditioned stimulus (UCS) -&amp;gt; food powder leads to unconditioned response (UCR) -&amp;gt; salivation&lt;/p&gt;

&lt;p&gt;During conditioning, conditioned stimulus (CS) -&amp;gt; tone + unconditioned stimulus (UCS) -&amp;gt; food powder lead to unconditioned response (UCR) -&amp;gt; salivation&lt;/p&gt;

&lt;p&gt;After conditioning, conditioned stimulus (CS) -&amp;gt; tone leads to conditioned response (CR) -&amp;gt; salivation&lt;/p&gt;

&lt;h3 id=&quot;common-conditioning-procedures&quot;&gt;Common Conditioning Procedures&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Short-delayed conditioning
    &lt;ul&gt;
      &lt;li&gt;Conditioned stimuli (CS) still present when unconditioned stimulus (UCS) present&lt;/li&gt;
      &lt;li&gt;Optimal learning&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Trace conditioning
    &lt;ul&gt;
      &lt;li&gt;Gap in time separates end of CS and start of UCS&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Simultaneous conditioning
    &lt;ul&gt;
      &lt;li&gt;CS and UCS presented at the same time&lt;/li&gt;
      &lt;li&gt;Slow learning&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;factors-influencing-classical-conditioning&quot;&gt;Factors Influencing Classical Conditioning&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Number of pairings for the conditioned and the unconditioned stimulus&lt;/li&gt;
  &lt;li&gt;The intensity of the unconditioned stimulus&lt;/li&gt;
  &lt;li&gt;How reliably the conditioned stimulus predicts the unconditioned stimulus&lt;/li&gt;
  &lt;li&gt;The timing (temporal relationship) between the conditioned stimulus and the unconditioned stimulus&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;higher-order-conditioning&quot;&gt;Higher Order Conditioning&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Chain of events which has 2 CS stimuli&lt;/li&gt;
  &lt;li&gt;Expands influence of classical conditioning on behaviour&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;classical-conditioning-aversion-therapy&quot;&gt;Classical Conditioning: Aversion Therapy&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Attempts to condition an aversion or repulsion to a stimulus that triggers unwanted behaviour by pairing it with a noxious UCS&lt;/li&gt;
  &lt;li&gt;Example: giving alcoholic patients a drug that induces vomiting any time alcohol is consumed&lt;/li&gt;
  &lt;li&gt;Aversion therapy has shown mixed results that are often extinguished over time&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;overcoming-fears&quot;&gt;Overcoming fears&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;First - Phobias
    &lt;ul&gt;
      &lt;li&gt;E.g. Acrophobia (fear of heights), Arachnephobia (fear of spiders), Ophodiophobia (fear of snakes), Aulophobia (fear of flutes), Consecotaleophobia (fearof chopsticks), Coulrophobia (fear of clowns)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;thorndikes-law-of-effect&quot;&gt;Thorndike’s Law of Effect&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Placed a hungry cat in a box and put food outside the box&lt;/li&gt;
  &lt;li&gt;Eventually the cat would accidentally step on the pedal that opened the door&lt;/li&gt;
  &lt;li&gt;Slwoly they learned to step on the pedal to get out of the box&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Law of Effect&lt;/strong&gt;: A response followed by a “satisfying “ outcome that will become more likely to occur&lt;/li&gt;
  &lt;li&gt;Operant conditioning - B.F. Skinner&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;operant-conditioning&quot;&gt;Operant Conditioning&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Learning in which behaviour is influenced by its consequences&lt;/li&gt;
  &lt;li&gt;Responses that produce favourable consequences tend to be repeated, whereas responses that produce unfavourable consequences become less likely to occur&lt;/li&gt;
  &lt;li&gt;Changing the probability that a behaviour occurs&lt;/li&gt;
  &lt;li&gt;Learning a new behaviour&lt;/li&gt;
  &lt;li&gt;Operant conditioning has 3 types of events.
    &lt;ul&gt;
      &lt;li&gt;A: Antecedents (stimuli present before the behaviour)&lt;/li&gt;
      &lt;li&gt;B: Behaviours&lt;/li&gt;
      &lt;li&gt;C: Consequences that follow the behaviour&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Behaviour has consequences:
    &lt;ul&gt;
      &lt;li&gt;If the consequence is positive, the behaviour is more likely to occur again&lt;/li&gt;
      &lt;li&gt;If the outcome is negative, the behaviour is less likely to occur again&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Reinforcement: used to increase the likelihood that a behaviour occurs again
    &lt;ul&gt;
      &lt;li&gt;Positive Reinforcement: deliver something good&lt;/li&gt;
      &lt;li&gt;Negative Reinforcement: remove something aversive&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Punishment: used to decrease the likelihood that a behaviour occurs again
    &lt;ul&gt;
      &lt;li&gt;Positive Punishment: deliver something aversive&lt;/li&gt;
      &lt;li&gt;Negative Punishment: remove something positive&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;operant-conditioning-techniques&quot;&gt;Operant Conditioning Techniques&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;B.F. Skinner
    &lt;ul&gt;
      &lt;li&gt;Used reinforcement to get an individual to produce a new behaviour&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Shaping
    &lt;ul&gt;
      &lt;li&gt;Mold a particular behaviour by reinforcing responses that get closer to it&lt;/li&gt;
      &lt;li&gt;Demonstration:
        &lt;ol&gt;
          &lt;li&gt;Sit in a chair&lt;/li&gt;
          &lt;li&gt;Kick instructor in the shin&lt;/li&gt;
          &lt;li&gt;Shake instructor’s hand&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Reinforcers
    &lt;ul&gt;
      &lt;li&gt;Primary reinforcers
        &lt;ul&gt;
          &lt;li&gt;Fulfill basic physical needs&lt;/li&gt;
          &lt;li&gt;Value is not learned&lt;/li&gt;
          &lt;li&gt;E.g. food&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Secondary reinforcers
        &lt;ul&gt;
          &lt;li&gt;Gains value because it has been paired with other reinforcers&lt;/li&gt;
          &lt;li&gt;Value is learned&lt;/li&gt;
          &lt;li&gt;E.g. money&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;schedules-of-reinforcement&quot;&gt;Schedules of Reinforcement&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Fixed-Ratio(FR) Schedule&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Subject is given a reinforcement after every __ responses&lt;/li&gt;
      &lt;li&gt;E.g. FR-5 schedule: reinforcement after the 5th response&lt;/li&gt;
      &lt;li&gt;E.g. piece-work&lt;/li&gt;
      &lt;li&gt;Make 100 widgets, earn $1&lt;/li&gt;
      &lt;li&gt;Officer gains promotion after catching specific # of criminals&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Variable-Ratio(VR) Schedule&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Subject is given a reinforcement after an average of __ responses&lt;/li&gt;
      &lt;li&gt;E.g. VR-5 schedule: reinforcement after the 2nd, 5th, and 8th responses (average is 5)&lt;/li&gt;
      &lt;li&gt;Another example: slow machines pays off on a VR schedule&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Immediate vs Delayed Consequences
    &lt;ul&gt;
      &lt;li&gt;Training animals typically requires immediate or very quick reinforcements&lt;/li&gt;
      &lt;li&gt;For humans it can be a little different. We often weight immediate consequences against future consequences&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Delay of Gratification
    &lt;ul&gt;
      &lt;li&gt;The ability to forego an immediate smaller reward for a delayed but more satisfying outcome&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bandura---observational-learning&quot;&gt;Bandura - Observational Learning&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Bandura’s &lt;strong&gt;Social Learning Theory&lt;/strong&gt;: people learn through observing, imitating, and modeling&lt;/li&gt;
  &lt;li&gt;Bobo Doll Experiment -&amp;gt; people not only learn by being rewarded or punished (behaviourism), but they can also learn from watching somebody else being rewarded or punished (observational learning)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;chapter-8---memory&quot;&gt;Chapter 8 - Memory&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Refers to the processes that allow us to record and later retrieve experiences and information&lt;/li&gt;
  &lt;li&gt;E.g. Daniel and Kim, “The Human Camera”
    &lt;ul&gt;
      &lt;li&gt;Daniel Tammet and Kim Peek have amazing abilities to store and retrieve particular types of information. Steven Whiltshire displays a different type of skill&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;memory-as-information-processing&quot;&gt;Memory as Information Processing&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;The advent of computers gave rise to the metaphorical comparison that the mind is a processing system that encodes, stores, and retrieves information
    &lt;ul&gt;
      &lt;li&gt;Encoding: getting information into the system by translating it into a neural code that your brain processes
        &lt;ul&gt;
          &lt;li&gt;Like what happens when you type on a computer keyboard&lt;/li&gt;
          &lt;li&gt;Your keystrokes are translated into an electrical code that the computer can understand&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Storage: retaining information over time
        &lt;ul&gt;
          &lt;li&gt;Once information is in the system it must be filed away and saved for future access&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Retrieval: the ability to pull information out of storage when we want to use it
        &lt;ul&gt;
          &lt;li&gt;With a computer we would give a command like “open file” to retrieve specific information&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;remebering&quot;&gt;Remebering&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Involves all 3 of these processes (Encoding, Storage, Retrieval)&lt;/li&gt;
  &lt;li&gt;Failure in any one of these processes can result in memory failure&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;a-three-component-model&quot;&gt;A Three-Component Model&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;3 levels of memory:
    &lt;ul&gt;
      &lt;li&gt;Sensory memory: holds information coming through the sense for a period of about a fraction of a second to several seconds; holds the incoming information just long enough for it to the recognized&lt;/li&gt;
      &lt;li&gt;Short-term/Working memory: holds information we are conscious of at any given time; aka “working memory” as it consiously processes, codes, and “works on” information we are focusing on; in order to transfer the information from sensory to short-term memory it must be represented in a code; memory codes are mental representations of information
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;Rehearsal&lt;/strong&gt;: purposely repeating information to maintain it in short-term memory or to transfer it to long-term memory&lt;/li&gt;
          &lt;li&gt;Short term memory requires some amount of rehearsal&lt;/li&gt;
          &lt;li&gt;2 Types of Rehearsal:
            &lt;ol&gt;
              &lt;li&gt;Maintenance Rehearsal&lt;/li&gt;
              &lt;li&gt;Elaborative Rehearsal&lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
          &lt;li&gt;STM holds about 7 items for less than 30 seconds with rehearsal&lt;/li&gt;
          &lt;li&gt;Miller (1956): memory studies found that the capacity for short-term memory is 7 +- 2 (between 5 and 9 items)&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Chunking&lt;/strong&gt;: organizing or grouping bits of information into larger units; Easier to deal with the information&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Long-term memory:
        &lt;ul&gt;
          &lt;li&gt;The vast library of durable stored memories&lt;/li&gt;
          &lt;li&gt;Barring brain damage, we remain capable of forming new long-term memories until we die&lt;/li&gt;
          &lt;li&gt;The storage capacity of long-term memory is essentially unlimited&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;serial-position-effect&quot;&gt;Serial Position Effect&lt;/h3&gt;

&lt;p&gt;Recall of an item is influenced by the position in a series of items&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2 components:
    &lt;ul&gt;
      &lt;li&gt;Primary Effect - superior recall of early words
        &lt;ul&gt;
          &lt;li&gt;Causes: First few words are rehearsed and transferred to long term memory. But as the list grows the short-term memory fills up and there are too many words and they can’t be rehearsed and transferred&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Recency Effect - superior recall of the most recent words
        &lt;ul&gt;
          &lt;li&gt;Causes: The last few words aren’t bumped out of short term memory by new information, therefore the last few words can remain short term memory long enough to be included in the recal&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mnemonic-devices&quot;&gt;Mnemonic Devices&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Any type of memory aid&lt;/li&gt;
  &lt;li&gt;Any strategy used to help in your ability to remember information&lt;/li&gt;
  &lt;li&gt;Example: chunking, Method of Loci, Acronyms, Acrostics&lt;/li&gt;
  &lt;li&gt;Method of Loci: Memory improvement technique to help visualize items
    &lt;ul&gt;
      &lt;li&gt;Imagine a physical environment with a sequence of distinct landmarks, for example rooms in your house etc.&lt;/li&gt;
      &lt;li&gt;To remember a list of items, you then take a “stroll” through that familiar environment and link an item with the location&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;long-term-memory&quot;&gt;Long-Term Memory&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Two main subtypes:
    &lt;ol&gt;
      &lt;li&gt;Declarative Memory: Facts, information, and personal life events that can be brought to mind verbally or in the form of images
        &lt;ul&gt;
          &lt;li&gt;Two subtypes:
            &lt;ol&gt;
              &lt;li&gt;Episodic memory: contains the memory of events we have experienced personally; the people we have known, the places we have seen, and the personal experiences we have had&lt;/li&gt;
              &lt;li&gt;Semantic memory: our memory of general knowledge, made of facts and general information; the capital of Canada, what 3*7 is etc.&lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Procedural Memory: Motor skills, habits, and simple classically conditioned responses; example: eating with a fork, driving a car, riding a bicycle&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;visual-imagery&quot;&gt;Visual Imagery&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Dual Coding Theory&lt;/strong&gt;:
    &lt;ul&gt;
      &lt;li&gt;Pavlov proposes that information is stored in long-term memory in two forms: verbal and non-verbal&lt;/li&gt;
      &lt;li&gt;Using both codes enhances memory because the odds improve that at least one of the codes will be available to support recall&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;superior-autobiographical-memory-hyperthymesia&quot;&gt;Superior Autobiographical Memory (Hyperthymesia)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Condition of possessing an extremely detailed autobiographical memory&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;carmichael-hogan--walters-1932&quot;&gt;Carmichael, Hogan &amp;amp; Walters (1932)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;The Researchers presented participants with a set of images&lt;/li&gt;
  &lt;li&gt;The images were labelled with one of two different set of words&lt;/li&gt;
  &lt;li&gt;The participants were later asked to recreate the images for each label&lt;/li&gt;
  &lt;li&gt;Encoding Specificity Principle: memory enhanced when conditions present during retrieval match these present during encoding (e.g. exams written in the same room)&lt;/li&gt;
  &lt;li&gt;Context-dependent memory: easier to remember something in same environment where encoded&lt;/li&gt;
  &lt;li&gt;State-dependent memory: ability to retrieve better when internal state at retrieval matches that at encoding (e.g. arousal, drugs)&lt;/li&gt;
  &lt;li&gt;Mood-congruent recall: tend to recall information or events congruent with current mood&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;july-4-2016---lecture-7&quot;&gt;July 4, 2016 - Lecture 7&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Final Exam&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Chapter 9 - Language &amp;amp; Thinking&lt;/li&gt;
  &lt;li&gt;Chapter 13 - Social Psychology&lt;/li&gt;
  &lt;li&gt;Chapter 16 - Psychological Disorders&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;chapter-9---language-and-thinking&quot;&gt;Chapter 9 - Language and Thinking&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Language&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Most common, universal feature of human society&lt;/li&gt;
  &lt;li&gt;Pervades every facet of our lives, public and private&lt;/li&gt;
  &lt;li&gt;Every culture, no matter how isolated or primitive has Language&lt;/li&gt;
  &lt;li&gt;Every person, except under extreme deprivation/accidents, develops skills in use of language&lt;/li&gt;
  &lt;li&gt;The use of language evolved as people gathered to form larger social units
    &lt;ul&gt;
      &lt;li&gt;As the social environment became more complex, new survival problems emerged: the need to create divisions of labor and copperative social systems and communicate thoughts, and to pass on knowledge&lt;/li&gt;
      &lt;li&gt;The development of language made it easier for humans to adapt to environmental demands&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Thus, human brain has an inborn capacity to acquire languages&lt;/li&gt;
  &lt;li&gt;5000 - 6000 languages spoken across the globe&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Language&lt;/strong&gt; = A shared symbolic system for communication&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;consists of a system of symbols and rules for combining these symbols in ways that can generate an infinite number of possible messages and meanings&lt;/li&gt;
  &lt;li&gt;Letters, written, and spoken symbols that stand for the referent of the word&lt;/li&gt;
  &lt;li&gt;Shared by all speakers of a language culture&lt;/li&gt;
  &lt;li&gt;System enables communication&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Psycholinguistics&lt;/strong&gt; = scientific study of the psychological aspects of language&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;how people understand, produce, and acquire language&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;basic-principles&quot;&gt;Basic Principles&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Language = Words + Rules&lt;/li&gt;
  &lt;li&gt;Words of language comprise the mental lexicon&lt;/li&gt;
  &lt;li&gt;Grammar = rules that dictate the legal combination of the units of language&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Non-modular view&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Language perception, production, and comprehension are the joint product of garden-variety cognitive processes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Modular view&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Language is comprised of a unique set of capacities that cannot be reduced to other cognitive processes&lt;/li&gt;
  &lt;li&gt;Linguistic capabilities are “special”&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;properities-of-laguage&quot;&gt;Properities of Laguage&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Language is a system of symbols and rules&lt;/li&gt;
  &lt;li&gt;3 Properties:
    &lt;ol&gt;
      &lt;li&gt;&lt;strong&gt;Symbolic&lt;/strong&gt;: use of sounds, signs, gestures
        &lt;ul&gt;
          &lt;li&gt;Allows for forming and transferring mental representations&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Structure&lt;/strong&gt;: rule-governed structures
        &lt;ul&gt;
          &lt;li&gt;Symbols combined to create meaningful units&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Generativity&lt;/strong&gt;:
        &lt;ul&gt;
          &lt;li&gt;Symbols can be combined to generate an infinite number of messages that can have novel meaning&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Displacement&lt;/strong&gt;: past, future, imaginary events, objects can be symbolically represented and communicated
    &lt;ul&gt;
      &lt;li&gt;the fact that language allows us to communicate about events and objects that are not physically present&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;structure-of-language&quot;&gt;Structure of Language&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Surface Structure&lt;/strong&gt;: consists of the symbols that are used and their order. Related to the concept of syntax (the rules that govern the order of words)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Deep Structure&lt;/strong&gt;: refers to the underlying meaning of the combined symbols. Related to the concept of semantics (the meaning of words and sentences)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;surface-vs-deep-structure&quot;&gt;Surface vs. Deep Structure&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Surface Structure&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;consists of the symbols that are used and their order&lt;/li&gt;
      &lt;li&gt;related to the concept of syntax (the rules that govern the order of words)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Deep Structure&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;refers to the underlying meaning of the combined symbols&lt;/li&gt;
      &lt;li&gt;related to the concept of semantics (the meaning of words and sentences)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Different surface structure (different syntax) but same deep structure (same semantics):
    &lt;ul&gt;
      &lt;li&gt;Sam ate the cake&lt;/li&gt;
      &lt;li&gt;The cake was eaten by Sam&lt;/li&gt;
      &lt;li&gt;Eaten by Sam the cake was (syntax is incorrect)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;critical-and-sensitive-period&quot;&gt;Critical and Sensitive Period&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Critical Period&lt;/strong&gt; - timeframe in which a particular skill or ability must be learned or developed. If missed, it will never be developed&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sensitive Period&lt;/strong&gt; - timeframe during which development of a particular skill is likely to occur&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;language-acquisition&quot;&gt;Language Acquisition&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;“Feral Children”
    &lt;ul&gt;
      &lt;li&gt;Victor of Aveyron - Learned to read and write some words but never learned to speak&lt;/li&gt;
      &lt;li&gt;Genie - speaking ability stalled at around 2-3 year-old level&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ambiguous-sentences&quot;&gt;Ambiguous Sentences&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Mary had a little lamb. (But I was quite hungry, so I had a little lamb plus a bowl of soup)&lt;/li&gt;
  &lt;li&gt;Time flies like an arrow, but fruit flies like a banana.&lt;/li&gt;
  &lt;li&gt;Put the box on the table in the kitchen.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;garden-path-sentences&quot;&gt;Garden Path Sentences&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Demonstrates that there is risk to interpreting a sentence as it arrives&lt;/li&gt;
  &lt;li&gt;The information necessary for interpretation can often come at the end&lt;/li&gt;
  &lt;li&gt;Examples:
    &lt;ul&gt;
      &lt;li&gt;The old man the ships.&lt;/li&gt;
      &lt;li&gt;The secretary applauded for his efforts was soon promoted.&lt;/li&gt;
      &lt;li&gt;Fat people eat accummulates.&lt;/li&gt;
      &lt;li&gt;Because he ran the second mile went quickly.&lt;/li&gt;
      &lt;li&gt;The girl told the story cried.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;pragmatics&quot;&gt;Pragmatics&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Knowledge of the practical aspects of using language&lt;/li&gt;
  &lt;li&gt;Rules surrounding the social context of language&lt;/li&gt;
  &lt;li&gt;Example:
    &lt;ul&gt;
      &lt;li&gt;Passerby - “Do you have the time?” You - “3:52”; Generally speaking, you don’t just say “Yes” and keep walking&lt;/li&gt;
      &lt;li&gt;Student - “I need you to explain this material to me. Do you have the time?” Professor - “3:52” ???
        &lt;ul&gt;
          &lt;li&gt;The context is different. The additional information changes the question being asked despite the surface structure of the sentence remaining the same&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;language-in-non-human-species&quot;&gt;Language in Non-Human Species&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Speculation and research have centered on whether non-human specirs are capable of language
    &lt;ul&gt;
      &lt;li&gt;Communication systems: are they equivalent to language?&lt;/li&gt;
      &lt;li&gt;Most would say no, as these systems lack key design features of language&lt;/li&gt;
      &lt;li&gt;Example: Kanzi, Alex&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Others have investigated whether animals can follow simple commands presented in some type of “language”
    &lt;ul&gt;
      &lt;li&gt;Although successful, these efforts fall short of demonstrating language
        &lt;ul&gt;
          &lt;li&gt;Communications doesn’t occur spontaneously&lt;/li&gt;
          &lt;li&gt;Done only to achieve some reward&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The most successful language training projects have involved cross-fostering studies with Bonobo chimps
    &lt;ul&gt;
      &lt;li&gt;Kanzi was trained informally during everyday interactions after he spontaneously picked up on signs from mother; “lexigrams”&lt;/li&gt;
      &lt;li&gt;Kanzi generated a corpus of thousands of utterances, many of which demonstrated evidence of systematic understanding&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Most believe animal language falls short of true language&lt;/li&gt;
  &lt;li&gt;What is the key feature of language that makes it “special”, unique to humans?
    &lt;ul&gt;
      &lt;li&gt;Some believe it’s &lt;strong&gt;recursion&lt;/strong&gt;, the ability of language to embed sentences and phrases within sentences and phrases, theoretically without limit&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bilingualism&quot;&gt;Bilingualism&lt;/h3&gt;

&lt;p&gt;= Learning a second language&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Learned best and spoken most fluently when acquired in sensitive period&lt;/li&gt;
  &lt;li&gt;Associated with greater thinking flexibility, higher performance on intelligence tests&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;possessing-language&quot;&gt;Possessing Language&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Possessing language is the quintessential human trait
    &lt;ul&gt;
      &lt;li&gt;All normal humans speak&lt;/li&gt;
      &lt;li&gt;Children learn a language without formal lessons&lt;/li&gt;
      &lt;li&gt;Main vehicle by which we know about other people’s thoughts&lt;/li&gt;
      &lt;li&gt;Does how we “think” come from our language?&lt;/li&gt;
      &lt;li&gt;Language acquisition = learning to think&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thought&quot;&gt;Thought&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Propositional Thought&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Expresses statement&lt;/li&gt;
      &lt;li&gt;E.g. “Mount Fuji is breathtaking”&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Imaginal Thought&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Consists of images we see in our mind&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Motoric Thought&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Mental representations of motor movements&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;problem-solving&quot;&gt;Problem-Solving&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Trial and error&lt;/li&gt;
  &lt;li&gt;Means-end analysis
    &lt;ul&gt;
      &lt;li&gt;Identify differences between current state and goal state&lt;/li&gt;
      &lt;li&gt;E.g. Tower of Hanoi&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;July 11, 2016 - Lecture 8&lt;/p&gt;

&lt;h2 id=&quot;chapter-13---social-psychology&quot;&gt;Chapter 13 - Social Psychology&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Outline (Videos watched):
    &lt;ul&gt;
      &lt;li&gt;Milgram’s Obedience Study&lt;/li&gt;
      &lt;li&gt;Zimbardo Stanford Prison Experiment&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Social Psychology&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Studies
    &lt;ul&gt;
      &lt;li&gt;How we think about and perceive our social world (social thinking and social perception)&lt;/li&gt;
      &lt;li&gt;How we behave toward other people (social relations)&lt;/li&gt;
      &lt;li&gt;How other people influence our behaviours (social influence)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Conformity&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Asch’s Line Judgement Task
    &lt;ul&gt;
      &lt;li&gt;When alone, people answered incorrectly on fewer than 1% of trials&lt;/li&gt;
      &lt;li&gt;When in a group, people answered incorrectly on an average of 33% of trials&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Obedience&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Milgram’s experiment on obedience to authority figures
    &lt;ul&gt;
      &lt;li&gt;Instruct people to perform acts conflicting with their personal conscience&lt;/li&gt;
      &lt;li&gt;Deliver a shock when a mistake was made&lt;/li&gt;
      &lt;li&gt;How far would they go?&lt;/li&gt;
      &lt;li&gt;Milgram asked psychologists, students etc. to predict level of obedience
        &lt;ul&gt;
          &lt;li&gt;~1%&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;In fact 65% obeyed to highest level of shock value&lt;/li&gt;
      &lt;li&gt;Found that a very high proportion of people were prepared to obey, albeit unwillingly, even if apparently causing serious injury and distress&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Milgram’s Agency Theory&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Milgram (1974) explained the behaviour of his participants by suggesting that people actually have two states of behaviour when hey are in a social situation
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Autonomous State&lt;/strong&gt; = people direct their own actions, and they take responsibility for the results of those actions&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Agentic State&lt;/strong&gt; = people allow others to direct their actions, and then pass off the responsibility for the consequences to the person giving the orders. In other words, they act as agents for another person’s will&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Says that people will obey an authority when they believe that the authority will take responsibility for the consequences of their actions
    &lt;ul&gt;
      &lt;li&gt;Supported by some aspects of Milgram’s evidence&lt;/li&gt;
      &lt;li&gt;For example, when participants were reminded that they had responsibility for their own actions, almost none of them were prepared to obey&lt;/li&gt;
      &lt;li&gt;In contrast, many participants who were refusing to  go on did so if the experimenter said that he would take responsibility&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Factors and Variations&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Uniform
    &lt;ul&gt;
      &lt;li&gt;In the original study, the experiemnter wore a grey lab coat as a symbol of his authority (a kind of uniform)&lt;/li&gt;
      &lt;li&gt;Milgram carried out a variation in which the experimenter was called away right at the start of the procedure, and the role of the experimenter was then taken over by an ordinary member of the public (a confederate) in everyday clothes rather than a lab coat&lt;/li&gt;
      &lt;li&gt;The obedience level dropped to 20%&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Two Teacher Condition
    &lt;ul&gt;
      &lt;li&gt;When participants could instruct an assistant (confederate) to press the switches, 92.5% shocked to the maximum 450 volts&lt;/li&gt;
      &lt;li&gt;When there is less personal responsibility obedience increases This relates to Milgram’s Agency Theory&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How to Enter the Agentic State&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The person giving the orders is perceived as being qialified to direct other people’s behaviour. That is, they are seen as legitimate&lt;/li&gt;
  &lt;li&gt;The person being ordered about is able to believe that the authority will accept responsiblity for what happens&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Social Norms: Rules of the Game&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Social Norms&lt;/strong&gt;: shared expectations about how people should think, feel, and behaves; The cement that binds social systems together&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Social Role&lt;/strong&gt;: a set of norms that characterizes how people in a given social position ought to behave
    &lt;ul&gt;
      &lt;li&gt;The role of a university student&lt;/li&gt;
      &lt;li&gt;Role conflict can occur&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Stanford Prison Experiment&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Zimbardo (1973)
    &lt;ul&gt;
      &lt;li&gt;Conducted an experiment to simulate prison life&lt;/li&gt;
      &lt;li&gt;Advertised for participants to be part of a 2 week experiment looking at the prison experience&lt;/li&gt;
      &lt;li&gt;Half of the participants would be randomly assigned as prisoners and half would be guards&lt;/li&gt;
      &lt;li&gt;They would then spend 2 weeks in a mock prison setting&lt;/li&gt;
      &lt;li&gt;Question: Would they readily take on the norms of those social roles?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;They adapted to their roles well beyond expectations, as the guards enforced authoritarian measures and ultimately subjected some of the prisoners to psychological torture
    &lt;ul&gt;
      &lt;li&gt;Many prisoners passively accepted psychological abuse and readily harassed other prisoners who attempted to prevent it&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Factors
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Deindividuation&lt;/strong&gt;: loss of individuality that leads to disinhibited behaviour&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Bystander Effect&lt;/strong&gt;: diffusion of responsibility&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Detecting and Resisting Compliance Strategies&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Many of these strategies are used by telemarketers and salespeople&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Norm of Reciprocity&lt;/strong&gt;: expectation that when others treat us well, we should respond in kind
    &lt;ul&gt;
      &lt;li&gt;E.g. Hari Krishna’s “Flower Power” technique&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Door-in-the-Face Technique&lt;/strong&gt;: persuader makes a large request, expecting you to reject it and then presents a smaller request&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Foot-in-the-Door Technique&lt;/strong&gt;: persuader gets you to comply with a small request first, and later presents a larger request
    &lt;ul&gt;
      &lt;li&gt;E.g. Gueguin, 2002. Email asking you to complete a 20-min survey about dietary habits, 44% said yes&lt;/li&gt;
      &lt;li&gt;But if asked for a simple piece of advice, takes 1 min, and then asked to do the survey, 76% agreed&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Lowballing&lt;/strong&gt;: persuader gets you to commit to some action and then, before you actually perform the behaviour, they increase the cost of that same behaviour
    &lt;ul&gt;
      &lt;li&gt;E.g. used car costs only $8000. You agree. Salesperson just has to go check with their manager. Oops! It’s too low. But only $400 more.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Attribution&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The process by which individuals explain the causes of behaviour and events&lt;/li&gt;
  &lt;li&gt;Attributional Factors:
    &lt;ul&gt;
      &lt;li&gt;Consistency&lt;/li&gt;
      &lt;li&gt;Distinctiveness&lt;/li&gt;
      &lt;li&gt;Consensus&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Attribution
    &lt;ul&gt;
      &lt;li&gt;Personal Attribution (internal)&lt;/li&gt;
      &lt;li&gt;Situation Attribution (external)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Attribution Bias&lt;/strong&gt;: cognitive bias that refers to the systematic errors made when people evaluate behaviours
    &lt;ul&gt;
      &lt;li&gt;E.g. when a driver cuts us off, we are more likely to attribute blame to the reckless driver, rather than situational circumstances&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Fundamental Attribution Error&lt;/strong&gt;: Bias in explaining others’ behaviours; Place an undue emphasis on internal characteristics of the agent, rather than external factors
    &lt;ul&gt;
      &lt;li&gt;When we make attributions about another person’s actions, we are likely to overemphasize the role of dispositional factors&lt;/li&gt;
      &lt;li&gt;E.g. If we see a coworker bump into someone on his way to a meeting, we explain this behaviour in terms of our coworker’s carelessness, rather than him running late to a meeting&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Ultimate Attribution Error&lt;/strong&gt;: group-level attribution error that offers an explanation for how one person views different causes of negative and positive ingroup and outgroup behaviours
    &lt;ul&gt;
      &lt;li&gt;Out: negative-&amp;gt;flaws in personality, positive-&amp;gt;chance or circumstance&lt;/li&gt;
      &lt;li&gt;In: negative-&amp;gt;chance or circumstance, positive-&amp;gt;personality&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Actor-Observer Bias&lt;/strong&gt;: extension of the FAE
    &lt;ul&gt;
      &lt;li&gt;E.g. a student who studies may explain her behaviour by referencing situational factors (“I have an exam coming up”), whereas others will explain her studying by referencing dispositional factors (“Ambitious and hard-working”)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Hostile Attribution Bias&lt;/strong&gt;: interpret others’ ambiguous behaviours as hostile, rather than benign
    &lt;ul&gt;
      &lt;li&gt;E.g. if a child witnesses two other children whispering and assumes they are talking about him/her, that child makes an attribution of hostile intent&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cognitive Dissonance&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The state of having inconsistent thoughts, beliefs, or attitudes, especially as relating to behavioural decisions and attitude change&lt;/li&gt;
  &lt;li&gt;Contraditory beliefs, ideas, or values at the same time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;july-18-2016---lecture-9&quot;&gt;July 18, 2016 - Lecture 9&lt;/h2&gt;

&lt;p&gt;Roots of Prejudice&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Cognitive Roots - our automatic tendency to categorize people may also help lay the foundation for prejudice&lt;/li&gt;
  &lt;li&gt;Motivational Roots
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Realistic Conflict Theory&lt;/strong&gt; - competition for limited resources fosters prejudice&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Social Identity Theory&lt;/strong&gt; - prejudice stems from a need to enhance our self-esteem. Self-esteem based on two components: a personal identity and a “group” identity&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Original Clark Doll Test&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who’s Lead Researcher?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Porter &amp;amp; Geis, 1981&lt;/li&gt;
  &lt;li&gt;Which person contributes most strongly to this research team?
    &lt;ul&gt;
      &lt;li&gt;All-male, all-female, mixed gender -&amp;gt; same answer (Seat 3)&lt;/li&gt;
      &lt;li&gt;Unless, there is a female seated in that chair in a mixed gender photo. Then it’s one of the males seated elsewhere&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Stereotypes&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Allport &amp;amp; Postman, 1947&lt;/li&gt;
  &lt;li&gt;Which person is holding the razor knife? Describe.&lt;/li&gt;
  &lt;li&gt;Innate prejudice&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;chapter-16-psychological-disorders&quot;&gt;Chapter 16: Psychological Disorders&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Abnormality
    &lt;ul&gt;
      &lt;li&gt;Is a “social construction” - function of cultural values&lt;/li&gt;
      &lt;li&gt;3 D’s
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;Distressing&lt;/strong&gt; to the individual - is disproportionate, too long-lasting&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Dysfunctional&lt;/strong&gt; - for individual or society&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Deviant&lt;/strong&gt; - especially if violate unstated norms&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Historical Perspectives&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Demonlogical View&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Abnormal behaviour = result of supernatural forces&lt;/li&gt;
      &lt;li&gt;Possessed by a spirit&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Treatment&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Trephination = hole in the skull&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The Medical Model&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The medical model proposes that it is useful to think of abnormal behaviour as a disease” and has become the main way of thinking about mental illness today&lt;/li&gt;
  &lt;li&gt;This view is in stack contrast to how mental illness used to be perceived&lt;/li&gt;
  &lt;li&gt;Thus, the medical model has brought much needed improvement in patient care&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Diagnosis&lt;/strong&gt; - involves distinguishing one illness from another&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Etiology&lt;/strong&gt; = apparent causation and developmental history of an illness&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Prognosis&lt;/strong&gt; = a forecast about the probable course of an illness&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The Classification of Disorders&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The American Psychological Association (APA) uses the &lt;strong&gt;Diagnostic and Statistical Manual (DSA)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Provides detailed information about various mental illnesses that allows clinicians to make more consistent diagnoses&lt;/li&gt;
      &lt;li&gt;DSM-1 sfirst published in 1952; 106 disorders&lt;/li&gt;
      &lt;li&gt;currently on the 5th edition of the DSM (published 2013, referred to as DSM-5); 300 disorders&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Psychological Perspectives&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Psychoanalytic
    &lt;ul&gt;
      &lt;li&gt;Inappropriate use of defense mechanisms = &lt;strong&gt;neuroses&lt;/strong&gt; (a mild mental illness that is not caused by organic disease, involving symptoms of stress but not a radical loss of touch with reality; distress but neither delusions nor hallucinations)&lt;/li&gt;
      &lt;li&gt;Withdrawal from reality = &lt;strong&gt;psychoses&lt;/strong&gt; (a severe mental disorder in which thought and emotions are so impaired that contact is lost with external reality; loss of contact with reality; hallucinations, delusions, catatonia, thought disorder)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Behavioural
    &lt;ul&gt;
      &lt;li&gt;Learned responses&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cognitive
    &lt;ul&gt;
      &lt;li&gt;Thought processes&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Humanistic
    &lt;ul&gt;
      &lt;li&gt;Frustrations of achieving self-actualization&lt;/li&gt;
      &lt;li&gt;Negative self-concept&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Anxiety Disorders&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A class of disorders marked by feelings of excessive apprehension and anxiety&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Phobic Disorders&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Strong, irrational fears of objects or situations&lt;/li&gt;
      &lt;li&gt;Most develop during childhood, adolescence, young adulthood&lt;/li&gt;
      &lt;li&gt;Seldom go away on their own
        &lt;ul&gt;
          &lt;li&gt;Can intensify over time&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Degree of impairment
        &lt;ul&gt;
          &lt;li&gt;Depends on how often condition is encountered&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Most common Western society fears
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;Social phobias&lt;/strong&gt; = fear of certain situations that might involve evaluation/embarrassment&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Specific phobias&lt;/strong&gt; = fear of specific objects such as animals or situations
            &lt;ul&gt;
              &lt;li&gt;E.g. alektorophobia (fear of chickens), amathophobia (fear of dust)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Obsessive-Compulsive Disorder (OCD)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Persistent, uncontrollable intrusions of unwanted thoughts (obsessions) and urges to engage in senseless rituals (compulsions)&lt;/li&gt;
      &lt;li&gt;Obsessions = cognitive component
        &lt;ul&gt;
          &lt;li&gt;repetitive and unwelcome thoughts&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Compulsions = behavioural component
        &lt;ul&gt;
          &lt;li&gt;repetitive behavioural responses&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Affects 2.5% of population&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Emotional symptoms:
    &lt;ul&gt;
      &lt;li&gt;Feelings of tension&lt;/li&gt;
      &lt;li&gt;Apprehension&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cognitive symptoms:
    &lt;ul&gt;
      &lt;li&gt;Worry&lt;/li&gt;
      &lt;li&gt;Thoughts about inability to cope&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Physiological symptoms:
    &lt;ul&gt;
      &lt;li&gt;Increased heart rate&lt;/li&gt;
      &lt;li&gt;Muscle tension&lt;/li&gt;
      &lt;li&gt;Other autonomic arousal symptoms&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Behavioural symptoms:
    &lt;ul&gt;
      &lt;li&gt;Avoidance of feared situations&lt;/li&gt;
      &lt;li&gt;Decreased task performance&lt;/li&gt;
      &lt;li&gt;Increased startle response&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Psychological Factors&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Psychodynamic Explanations
    &lt;ul&gt;
      &lt;li&gt;Neurotic anxiety = unacceptable impulses threaten to overwhelm ego’s defenses&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cognitive Explanations
    &lt;ul&gt;
      &lt;li&gt;Maladaptive thoughts and beliefs&lt;/li&gt;
      &lt;li&gt;Things appraised “catastrophically”&lt;/li&gt;
      &lt;li&gt;Eliciting stimuli (internal or external) -&amp;gt; Physiological responses (e.g. increased heart rate, diziiness, breathlessness, muscle tension) -&amp;gt; catastrophic appraisals (e.g. “I’m losing it!” “I’m having a heart attack!”) -&amp;gt; Panic Attack&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Mood (Affective) Disorders&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Depression&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Is not a “case of the blues” or “having a bad day”&lt;/li&gt;
      &lt;li&gt;Clinical depression = frequency, intensity, duration of symptoms is out of proportion to situation&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Major Depression&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Unable to function effectively&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dysthymia&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Chronic disruption of mood&lt;/li&gt;
      &lt;li&gt;Persistent mild depression&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Symptoms&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Emotional
    &lt;ul&gt;
      &lt;li&gt;Negative mood state&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cognitive
    &lt;ul&gt;
      &lt;li&gt;Difficulty concentrating; feelings of inferiority &amp;amp; failure, pessimism&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Motivational
    &lt;ul&gt;
      &lt;li&gt;Loss of interest &amp;amp; drive&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Somatic (Physiological)
    &lt;ul&gt;
      &lt;li&gt;Loss of appetite or compulsive eating, sleep disturbances&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bipolar Disorder&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Depression alternates with mania (periods of great excitement, euphoria, delusions, and overactivity)&lt;/li&gt;
      &lt;li&gt;Manic state:
        &lt;ul&gt;
          &lt;li&gt;Euphoric mood, grandiose cognitions&lt;/li&gt;
          &lt;li&gt;Rapid speech&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Comparison of Depressive and Manic Symptoms&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Emotional
    &lt;ul&gt;
      &lt;li&gt;Depressive: Dysphoric, gloomy mood; Diminished ability to experience pleasure; Sense of hopelessness&lt;/li&gt;
      &lt;li&gt;Manic: Euphoric, enthusiastic mood; Excessive pursuit of pleasureable activities; Unwanted optimism&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Behavioural
    &lt;ul&gt;
      &lt;li&gt;Depressive: Fatigue, loss of energy; Insomnia; Slowed speech and movement; Social withdrawal&lt;/li&gt;
      &lt;li&gt;Manic: Energetic, tireless, hyperactive; Decreased need for sleep; Rapid speech and agitation; Increased sociability&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cognitive
    &lt;ul&gt;
      &lt;li&gt;Depressive: Impaired ability to think and make decisions; Slowed thought process; Excessive worry, rumination (compulsively focused attention on the symptom of one’s distress); Guilt, self-blame, unrealistic negative evaluations of one’s worth&lt;/li&gt;
      &lt;li&gt;Manic: Grandiose planning, indiscriminate decision making; Racing thoughts, easily distracted; Impulsive behaviour; Inflated self-esteem and self-confidence&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Mood Disorders: Population&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Prevalence of mood disorders
    &lt;ul&gt;
      &lt;li&gt;1 in 5 will have a depressive episode of clinical proportions during lifetime&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Gender differences
    &lt;ul&gt;
      &lt;li&gt;Women are twice as likely to suffer from unipolar depression (depression without mania because the mood remains at one emotional state or “pole”)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Mood Disorders: Patterns&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Among people who suffer major depression:
    &lt;ul&gt;
      &lt;li&gt;50%: depression will recur after recovery
        &lt;ul&gt;
          &lt;li&gt;Majority of cases&lt;/li&gt;
          &lt;li&gt;Symptom free about 3 years&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;40%: depression will never recur after recovery&lt;/li&gt;
      &lt;li&gt;10%: no recovery; chronic depression
        &lt;ul&gt;
          &lt;li&gt;Minority of cases&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;90% recurrence of manic episodes&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Mood Disorders: Causal Factors&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Biological Explanations&lt;/li&gt;
  &lt;li&gt;Depression
    &lt;ul&gt;
      &lt;li&gt;Genetic factors: higher concordance for MZ (monozygotic) twins&lt;/li&gt;
      &lt;li&gt;Biochemical differences:
        &lt;ul&gt;
          &lt;li&gt;Underactivity of norepinephrine, dopamine, serotonin&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Bipolar disorder
    &lt;ul&gt;
      &lt;li&gt;stronger genetic component than unipolar depression
        &lt;ul&gt;
          &lt;li&gt;50% have relative with disorder&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Concordance rate is 5 times higher among identical (MZ) twins compared to fraternal twins&lt;/li&gt;
      &lt;li&gt;Manic disorders - overactivity of neurotransmitters&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Dissociative Disorders&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Usually personality has a unity and coherence, so that the many facets of the self integrate with our behaviour, our feelings, and how we think&lt;/li&gt;
  &lt;li&gt;Our memory also plays a key role in this integration because it connects the past and the present&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Dissociative disorders involve a breakdown of this normal integration. Resulting in significant alterations in memory and/or identity&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Examples:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Psychogenic amnesia (aka dissociative amnesia)&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;Sudden retrograde autobiographical memory loss; from hours to years&lt;/li&gt;
          &lt;li&gt;Restrospectively reported memory gaps&lt;/li&gt;
          &lt;li&gt;Extensive but selective memory loss following trauma&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Psychogenic fugue (aka dissociative fugue or fugue)&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;Rare; short-lived state&lt;/li&gt;
          &lt;li&gt;Loss of all personal identity&lt;/li&gt;
          &lt;li&gt;Reversible amnesia for personal identity (including memories, personality etc)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Dissociative Identity Disorder (DID)&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;Previously known as Multiple Personality Disorder (MPD)&lt;/li&gt;
          &lt;li&gt;2 or more separate personalities that alternately show in a person’s behaviour, accompanied by memory impairment&lt;/li&gt;
          &lt;li&gt;Each identity is unique
            &lt;ul&gt;
              &lt;li&gt;Own sets of memories, ideas, thoughts&lt;/li&gt;
              &lt;li&gt;One identity may be the protector, another a child&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Trauma-dissociation Theory&lt;/strong&gt;
            &lt;ul&gt;
              &lt;li&gt;DID generally results from severe traumatic experience during early childhood&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Example: Helen (7 personality or “alters”)&lt;/li&gt;
          &lt;li&gt;Debate: Is DID real?
            &lt;ul&gt;
              &lt;li&gt;Not universally accepted&lt;/li&gt;
              &lt;li&gt;Differences in brain waves demonstrated DID but
                &lt;ul&gt;
                  &lt;li&gt;Unknown in some cultures&lt;/li&gt;
                  &lt;li&gt;Role-playing?&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Schizophrenia&lt;/strong&gt; = split-mind&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Abnormal social behaviour and failure to understand what is real&lt;/li&gt;
  &lt;li&gt;Severe disturbances in thinking, speech, perception, emotion and behaviour&lt;/li&gt;
  &lt;li&gt;Thinking
    &lt;ul&gt;
      &lt;li&gt;Delusions = false beliefs&lt;/li&gt;
      &lt;li&gt;Unclear or confused thinking (thought disorder)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Speech
    &lt;ul&gt;
      &lt;li&gt;Disorganized; strange words&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Perception
    &lt;ul&gt;
      &lt;li&gt;Hallucinations = false perceptions&lt;/li&gt;
      &lt;li&gt;Hearing voices&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Emotion
    &lt;ul&gt;
      &lt;li&gt;Blunted affect (lack of affect more sever than restricted or constricted affect; severe reduction in the intensity of affect; emotional numbness)&lt;/li&gt;
      &lt;li&gt;Inappropriate affect (an emotional expression disharmonious in quality or intensity with the person, event, or idea that provoked it; an individual’s display of emotions that do not properly fit a circumstance, such as smiling in reaction to a tragedy, or failing to show emotion at a time when an emotional reaction would be normal)&lt;/li&gt;
      &lt;li&gt;Lack of motivation&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Behavioural
    &lt;ul&gt;
      &lt;li&gt;Disorganized behaviour
        &lt;ul&gt;
          &lt;li&gt;A decline in overall daily functioning&lt;/li&gt;
          &lt;li&gt;Lack of inhibition and impulse control&lt;/li&gt;
          &lt;li&gt;Behaviours that appear bizarre and have no purpose&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Subtypes of Schizophrenia&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Paranoid&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;False beliefs (delusions) that some individuals are plotting against them&lt;/li&gt;
      &lt;li&gt;Delusions of persection; Grandeur&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Disorganized&lt;/strong&gt; (aka Hebephrenic Schizophrenia)
    &lt;ul&gt;
      &lt;li&gt;Confusion; Incoherence&lt;/li&gt;
      &lt;li&gt;Disorganized behaviour and speech, as well as disturbances in emotional expression&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Catatonic&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Severe motor disturbances (Catatonia)&lt;/li&gt;
      &lt;li&gt;Behavioural abnormality manifested by stupor (near-unconsciousness)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Undifferentiated&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Not easlity classified as one of above&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Two Main Categories&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Type I&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Predominance of positive symptoms
        &lt;ul&gt;
          &lt;li&gt;Positive symptoms: hallucinations, delusions, racing thoughts&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Pathological extremes&lt;/li&gt;
      &lt;li&gt;Delusions, hallucinations, disordered speech &amp;amp; thought&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Type II&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Predominance of negative symptoms
        &lt;ul&gt;
          &lt;li&gt;Negative symptoms: apathy, lack of emotion, poor or nonexistant social functioning&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Absence of normal reactions&lt;/li&gt;
      &lt;li&gt;Lack of emotion, expression, motivation&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Schizophrenia: Population&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Affects 1% of population (over-represented in psychiatric hospitals)
    &lt;ul&gt;
      &lt;li&gt;Equal number of males and females (males generally earlier)&lt;/li&gt;
      &lt;li&gt;10% permanently impaired&lt;/li&gt;
      &lt;li&gt;65% intermittent periods of functioning&lt;/li&gt;
      &lt;li&gt;25% recover&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Positive Symptoms (Type I)
    &lt;ul&gt;
      &lt;li&gt;History of good functioning&lt;/li&gt;
      &lt;li&gt;Better prognosis&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Negative Symptoms (Type II)
    &lt;ul&gt;
      &lt;li&gt;Long history of poor functioning&lt;/li&gt;
      &lt;li&gt;Poor recovery&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Schizophrenia: Causal Factors&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Biological factors
    &lt;ul&gt;
      &lt;li&gt;Genetics&lt;/li&gt;
      &lt;li&gt;Neurodegenerative Hypothesis
        &lt;ul&gt;
          &lt;li&gt;Destruction of neural tissue&lt;/li&gt;
          &lt;li&gt;20-35% show brain atrophy in regions that influence cognitive processing and emotion&lt;/li&gt;
          &lt;li&gt;Thalamus
            &lt;ul&gt;
              &lt;li&gt;Shows abnormal MRI activity&lt;/li&gt;
              &lt;li&gt;Routes sensory information&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Dopamine Hypothesis
        &lt;ul&gt;
          &lt;li&gt;Overactivity of dopamine system&lt;/li&gt;
          &lt;li&gt;Regulate emotion, motivation, cognitive functioning&lt;/li&gt;
          &lt;li&gt;Associated with positive symptoms&lt;/li&gt;
          &lt;li&gt;Antipsychotic drugs used for schizophrenia reduce dopamine activity&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Psychological factors
    &lt;ul&gt;
      &lt;li&gt;Freud: Extreme use of defence mechanism regression (retreat to an earlier, more secure stage in life); Not generally accepted but life stress is a factor&lt;/li&gt;
      &lt;li&gt;Cognitive: Defect in ability to filter out irrelevant information&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Personality Disorders&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Stable, ingrained, inflexible and maladaptive ways of thinking, feeling, behaving&lt;/li&gt;
  &lt;li&gt;3 clusters of disorders:
    &lt;ul&gt;
      &lt;li&gt;Dramatic and impulsive behaviours&lt;/li&gt;
      &lt;li&gt;Anxiety and fearfulness&lt;/li&gt;
      &lt;li&gt;Odd and eccentric behaviours&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Examples:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Anti-Social Personality Disorder&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;Previously known as Psychopaths or Sociopaths&lt;/li&gt;
          &lt;li&gt;3:1 Male to Female ratio&lt;/li&gt;
          &lt;li&gt;Lack of conscience&lt;/li&gt;
          &lt;li&gt;Failure to respond to punishment&lt;/li&gt;
          &lt;li&gt;Incapable of true emotions&lt;/li&gt;
          &lt;li&gt;Charming and manipulative&lt;/li&gt;
          &lt;li&gt;Diagnosis: at least 18 years old with anti-social behaviour before age 15&lt;/li&gt;
          &lt;li&gt;Example: Karla Homolka&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Borderline Personality Disorder&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;Has become an intense interest among clinical researchers in recent years due to the chaotic effects it can have on those suffer from it, their families, and therapists&lt;/li&gt;
          &lt;li&gt;Approx. 3-5% of the general population&lt;/li&gt;
          &lt;li&gt;About 2/3 of those diagnosed with BPD are women&lt;/li&gt;
          &lt;li&gt;A collection of symptoms characterized primarily by serious instability in behaviour, emotion, identity, and interpersonal relationships&lt;/li&gt;
          &lt;li&gt;Central issue in BPD is emotional dysregulation
            &lt;ul&gt;
              &lt;li&gt;Emotional Dysregulation: an inability to control negative emotions in response to stressful life events&lt;/li&gt;
              &lt;li&gt;Many of the stressful life events are actually caused by the individuals themselves&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Individuals with BPD have:
            &lt;ul&gt;
              &lt;li&gt;Intense and unstable personal relationships&lt;/li&gt;
              &lt;li&gt;Chronic feelings of extreme anger, loneliness, and emptiness&lt;/li&gt;
              &lt;li&gt;Momentary loss of personal identity&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Individuals with BPD are inclined to engage in:
            &lt;ul&gt;
              &lt;li&gt;Impulsive behaviour&lt;/li&gt;
              &lt;li&gt;Running away&lt;/li&gt;
              &lt;li&gt;Promiscuity&lt;/li&gt;
              &lt;li&gt;Binge eating&lt;/li&gt;
              &lt;li&gt;Drug abuse&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Individuals with BPD lives are often marked with:
            &lt;ul&gt;
              &lt;li&gt;Repetitive self-destructive behaviours such as self-mutilation and suicide attempts that seem designed to elicit “saving” responses from other people in their lives&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Chaos extend to their relationships with their psychotherapists&lt;/li&gt;
          &lt;li&gt;BPD patients are considered among the most difficult to treat because of their clinging dependency, irrational anger, and tendency to engage in “manipulative” suicide threats&lt;/li&gt;
          &lt;li&gt;6-10% BPD individuals eventually do commit suicide, either through miscalculation or design&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Personality Disorders: Causal Factors&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Biological factors
    &lt;ul&gt;
      &lt;li&gt;Genetic predisposition&lt;/li&gt;
      &lt;li&gt;Dysfunction in brain structures that govern self-control and emotional arousal
        &lt;ul&gt;
          &lt;li&gt;MRI findings of subtle differences in prefrontal lobes&lt;/li&gt;
          &lt;li&gt;Weaker limbic input to frontal cortex&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Psychodynamic View
    &lt;ul&gt;
      &lt;li&gt;Lack of superego (ethical component of the personality that provides the moral standards by which the ego operates)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Borderline
    &lt;ul&gt;
      &lt;li&gt;Comparison between Borderline and normal individuals
        &lt;ul&gt;
          &lt;li&gt;Borderline respondents reported 6x more events in which someone treated them badly or injured them emotionally or physically&lt;/li&gt;
          &lt;li&gt;They also viewed potential helpers as far less helpful to them&lt;/li&gt;
          &lt;li&gt;Parents of borderine individuals are described as abusive, rejecting, and non-affirming&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Some theorists suggest that an early lack of acceptance by parents may cripple self-esteem and lead to the clinging behaviours of borderline&lt;/li&gt;
      &lt;li&gt;Otto Kernberg - Splitting (sudden shifts in relationships from extreme love and clinging to intense hatred and feelings of abandonment could reflect this cognitive process)
        &lt;ul&gt;
          &lt;li&gt;The failure to integrate positive and negative aspects of another’s behaviour into a coherent whole&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Biological Factors&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;Close relatives of those with BPD are 5 times more likely to have the disorder&lt;/li&gt;
          &lt;li&gt;Emotional explosiveness and impulsivity may also reflect an abnormality in neurotransmitter systems or the areas of the brain that contribute to emotional regulation&lt;/li&gt;
          &lt;li&gt;BPD probably reflects an interaction between biological and social/environmental factors&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Rosenhan (1973)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What would happen if someone simply walked into a treatment facility complaining that they heard voices?
    &lt;ul&gt;
      &lt;li&gt;Rosenhan + 7 pseudopatients did that&lt;/li&gt;
      &lt;li&gt;Message from the voices unclear (hollow, empty, and thud)&lt;/li&gt;
      &lt;li&gt;If admitted, nothing was ever said again about the symptoms and if asked they would say they don’t hear them anymore&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Results:
    &lt;ul&gt;
      &lt;li&gt;All 8 were admitted with diagnosis of schiophrenia (and upon discharge a diagnosis of schizophrenia in remission)&lt;/li&gt;
      &lt;li&gt;Not a single member of the staff at any hospital realized that they were faking it&lt;/li&gt;
      &lt;li&gt;Other patients did often say they were not “real patients”&lt;/li&gt;
      &lt;li&gt;Average stay was 19 days, ranging from 7-52 days&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Vulnerability-Stress Model&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Incorporates biological, environmental, and psychological views&lt;/li&gt;
  &lt;li&gt;Vulnerability = predisposition to disorders
    &lt;ul&gt;
      &lt;li&gt;Biological basis: personality or environmental factors&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Stressor = event that requires person to cope&lt;/li&gt;
  &lt;li&gt;Predisposition = creates disorder only when person is subject to a stressor&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 02 May 2016 18:56:00 -0400</pubDate>
        <link>http://dzed.me/notes/2016/05/02/Psych-101.html</link>
        <guid isPermaLink="true">http://dzed.me/notes/2016/05/02/Psych-101.html</guid>
        
        
        <category>notes</category>
        
      </item>
    
      <item>
        <title>MUSIC 140 - Popular Music and Culture</title>
        <description>&lt;pre&gt;&lt;code&gt;MUSIC 140 - Popular Music and Culture
Instructor: Simon Wood
Section: 001
Location: STP 105
Time: Thursdays 7:00pm - 9:50pm
Term: Spring 2016
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;may-5-2016---lecture-1&quot;&gt;May 5, 2016 - Lecture 1&lt;/h2&gt;

&lt;h3 id=&quot;what-is-popular-music&quot;&gt;What is Popular Music?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Dependent on the development of
    &lt;ol&gt;
      &lt;li&gt;Different from “folk” and “art” music genres&lt;/li&gt;
      &lt;li&gt;The Industrial Revolution changes the system of barter economy to a system of monetary currency (also contributed to 3, the Middle Class, and 4, the growth of urban populations)&lt;/li&gt;
      &lt;li&gt;The Emergence of the Middle Class, who possesses &lt;strong&gt;disposable income&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Large Urban Populations (as a result of the rural-to-urban shift)&lt;/li&gt;
      &lt;li&gt;Copyright Law -&amp;gt; music itself is an &lt;strong&gt;idea&lt;/strong&gt; (Law originated from Queen Mary, who also started stationary companies; musicians have to register and sell royalty)&lt;/li&gt;
      &lt;li&gt;Technologies of mass production and broadcasting -&amp;gt; records&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;By 1945:
    &lt;ol&gt;
      &lt;li&gt;End of the “Big Band” era&lt;/li&gt;
      &lt;li&gt;Big Band had dominated the music industry since the mid 30s&lt;/li&gt;
    &lt;/ol&gt;

    &lt;p&gt;Example: “Sentimental Journey” (Doris Day, 1944), focuses on instrumental, performed by Les Brown and His Band of Renown&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Significant figures: Boney Goodman, Count Basie, Duke Ellington, Tommy Dorsey&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Returning to focus on vocalist&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;The music industry divided into 3 distinct categories:
        &lt;ol&gt;
          &lt;li&gt;Popular(Pop): White/Middle Class/Urban&lt;/li&gt;
          &lt;li&gt;Race: Black, regardless of class or location&lt;/li&gt;
          &lt;li&gt;Hillbilly: Origins in poor, white, rural -&amp;gt; now migrating to urban areas (particular in Southern US) -&amp;gt; Country&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;Products of the music industry were sheet music and recordings&lt;/li&gt;
      &lt;li&gt;Sheet music dominated recordings until the the late 1920s&lt;/li&gt;
      &lt;li&gt;While sheet music was still important, by the end of WWII, the recording industry had come to dominated&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Development of the American Music Industry
    &lt;ul&gt;
      &lt;li&gt;What creates the conditions for popular music to become a consumer product?
        &lt;ul&gt;
          &lt;li&gt;1790s to 1830s - Amendments to the copyright law to cover sheet music&lt;/li&gt;
          &lt;li&gt;The Victorian Ballad: &lt;strong&gt;Minstrel Shows&lt;/strong&gt; and &lt;strong&gt;Parlour Music&lt;/strong&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Minstrel Shows
        &lt;ul&gt;
          &lt;li&gt;Variety show that depicted African-Americans in a racist and stereotypical light&lt;/li&gt;
          &lt;li&gt;Instruments: Guitar, Banjo, Fiddle, also Piano&lt;/li&gt;
          &lt;li&gt;Most important composer: Steven Foster&lt;/li&gt;
          &lt;li&gt;Example: “Massa’s in de cold cold ground” (1852)&lt;/li&gt;
          &lt;li&gt;Characteristics: guitar accomaniment and vocal control&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Parlour Music
        &lt;ul&gt;
          &lt;li&gt;Industrial Revolution
            &lt;ul&gt;
              &lt;li&gt;Rise of the Middle Class&lt;/li&gt;
              &lt;li&gt;Luxury item = Piano = symbol of wealth&lt;/li&gt;
              &lt;li&gt;Daughters pursue “leisure” activities&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Example: “Believe Me, If All Those Endearing Young Charms” (Early 1800s) by Thomas Moore&lt;/li&gt;
          &lt;li&gt;Parlous Song - AABA form in terms of melody&lt;/li&gt;
          &lt;li&gt;Characteristics: Piano accomaniment, vocal control, and with themes such as loyalty, honesty, control, and restraint&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Demand for newly composed songs leads to the increased organization of the music industry&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tin Pan Alley
    &lt;ul&gt;
      &lt;li&gt;Charles K. Harris - “After the Ball” (1892): Sheet music sold over 5M copies = “The First Hit Song” -&amp;gt; Why? Urbanization and population growth&lt;/li&gt;
      &lt;li&gt;The success of “After the Ball” gave birth to Tin Pan Alley (TPA)&lt;/li&gt;
      &lt;li&gt;Both a musical style and a place&lt;/li&gt;
      &lt;li&gt;Manhattan in NYC, became the centre of professional music making&lt;/li&gt;
      &lt;li&gt;During the 20s and 30s, 21k publisher and 36k composers in a few blocks in TPA&lt;/li&gt;
      &lt;li&gt;Division of labour: composers, lyricists, publishers, publicity(marketing), and performers&lt;/li&gt;
      &lt;li&gt;Sheet music dominated (though transitioning to recording in the 20s)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-12-2016---lecture-2&quot;&gt;May 12, 2016 - Lecture 2&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Lyrics&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Basic rhyme scheme&lt;/li&gt;
  &lt;li&gt;Syllabic&lt;/li&gt;
  &lt;li&gt;Idealized romance - Beginning and Ending&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;african-american-music&quot;&gt;African American Music&lt;/h2&gt;

&lt;p&gt;Where black culture emerges from and how characteristics map onto emerging culture after slavery ends&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Background&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Do not get rock’n roll without the slave trade&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;North American Slave Trade (1619-1863)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1619, First African slaves sold in North America&lt;/li&gt;
  &lt;li&gt;Sahara essentially divides Africa into two:
    &lt;ol&gt;
      &lt;li&gt;Northern Africa - more associated with Middle East&lt;/li&gt;
      &lt;li&gt;South Sub-Saharan Africa&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Majority of North American slaves came from South Sub-Saharan West Africa&lt;/li&gt;
  &lt;li&gt;Despite salvers’ attempts to extinguish slav culture, some aspects such as music, survived, in fact music was omnipresent&lt;/li&gt;
  &lt;li&gt;Where Rock ‘n Roll began&lt;/li&gt;
  &lt;li&gt;Work songs:
    &lt;ul&gt;
      &lt;li&gt;Used to pass time, set pace, or coordinate group work for efficiency (i.e. synchronize axe swings)&lt;/li&gt;
      &lt;li&gt;Help saving lives: by slowing pace, work songs made the group seem at the same pace, making it hard for owners to distinguish sick/slackers&lt;/li&gt;
      &lt;li&gt;“Floating pool of verse”: floating verse created by song leader - majority were men, highly valued; had many fragmented verses, made songs up on the spot&lt;/li&gt;
      &lt;li&gt;E.g. “Old Alabama” (1947): Slavery ended 12 years before recording technology, therefore we are not listening to slaves but rather a prison gang; this recording is by prisoners in 1947; song leader initiates and everyone joins in; not just a song, more like a game to keep spirits up - had to discern verse from syllables of song leader&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;folk-music&quot;&gt;Folk Music&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Performed by amateurs (derived from the French word for lovers, amore; means “doing it for free”, not paid)&lt;/li&gt;
  &lt;li&gt;For self or community entertainment&lt;/li&gt;
  &lt;li&gt;Oral tradition - passed down generationally via experience&lt;/li&gt;
  &lt;li&gt;More concern with tradition than innovation (lacking “self-consciousness”)
    &lt;ul&gt;
      &lt;li&gt;Not professionalization - quest for innovation, to stand out to get noticed; folk culture contrasts this, it focuses on continuity of tradition&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;African Retentions:
    &lt;ul&gt;
      &lt;li&gt;Interest in percussion and distorted timbres
        &lt;ul&gt;
          &lt;li&gt;Timbre(tamber) (physical/audible): quality of an instrument that allows identification&lt;/li&gt;
          &lt;li&gt;West African culture has a focus on percussion (drums, but anything that is struck)&lt;/li&gt;
          &lt;li&gt;Distortion: unintended alteration of your signal - West African Perspective: seen as an overflow of intensity/investment of energy&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Value in the Ecstatic and the Cathartic: Sweat means energy&lt;/li&gt;
      &lt;li&gt;Rhythmic complexity - syncopation
        &lt;ul&gt;
          &lt;li&gt;Indian music has complex notes and rhythms - no chords or harmonies&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Use of “riffs”, a small, self-contained, music gesture that is repeated over and over, becomes the basis of a longer composition (opposite: motif)&lt;/li&gt;
      &lt;li&gt;Use of “call and response” -&amp;gt; West African perspective: no difference between performer and audience. Audience sing and dance with performer (in contrast to Western concert); E.g. YouTube video “Pop Song”, Jon Lajoie&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;American Civil War (1861-1865) and Post-Slavery (1865-)
    &lt;ul&gt;
      &lt;li&gt;Institutionalized racism&lt;/li&gt;
      &lt;li&gt;Acceleration of rural-to-urban shift&lt;/li&gt;
      &lt;li&gt;New forms of music appear during late 1800s:
        &lt;ol&gt;
          &lt;li&gt;Ragtime(“The Entertainer”) - urban&lt;/li&gt;
          &lt;li&gt;Jazz - urban&lt;/li&gt;
          &lt;li&gt;Blues, Country (rural) Blues:
            &lt;ul&gt;
              &lt;li&gt;Wandering musicians&lt;/li&gt;
              &lt;li&gt;Male vocalist, with acoustic guitar&lt;/li&gt;
              &lt;li&gt;Plaintive vocal sound - lament&lt;/li&gt;
              &lt;li&gt;Themes: travel, economy, and love&lt;/li&gt;
              &lt;li&gt;12 Measure phrases (known as bars)&lt;/li&gt;
              &lt;li&gt;a-a-b lyric pattern&lt;/li&gt;
              &lt;li&gt;Call and response between guitar and voice&lt;/li&gt;
              &lt;li&gt;Floating pool of verse&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Robert Johnson (1911-1938)
    &lt;ul&gt;
      &lt;li&gt;Defined standards for blues guitar&lt;/li&gt;
      &lt;li&gt;Peak: November 1936 and June 1937 - The Complete Recordings&lt;/li&gt;
      &lt;li&gt;Mythic character&lt;/li&gt;
      &lt;li&gt;E.g. “Sweet Home Chicago”, November 1936: added six/Boogie-woogie pattern (note: take a body of the song and put it into intro and outro (end of each verse is similar to intro))&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Word of the Class: Self-Conscious (indicator of  professional performer; unlike folk performer; Actively thinking about how to innovate and improve in order to gain more audience)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Changes in Technology&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mechanical Reproduction
    &lt;ul&gt;
      &lt;li&gt;1877: Edison invented phonograph (gave rise to gramophone)&lt;/li&gt;
      &lt;li&gt;1892-1912: Transition from cylinders to disks&lt;/li&gt;
      &lt;li&gt;1925: Industry standard speed set to 78 RPM&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;What was recorded?
    &lt;ul&gt;
      &lt;li&gt;Sheet music/TPA(Tin Pan Alley)&lt;/li&gt;
      &lt;li&gt;Black music/rural Southern white music not recorded because:
        &lt;ul&gt;
          &lt;li&gt;cultural chauvinism (people who control the technology did not think other cultures were worth recording)&lt;/li&gt;
          &lt;li&gt;Rural areas - less sales&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Commercial Radio, 1920
    &lt;ul&gt;
      &lt;li&gt;January 1922 - 28 stations -&amp;gt; December 1922 - 570 stations&lt;/li&gt;
      &lt;li&gt;Controlled by only a few networks (CBS, NBC, Mutual)&lt;/li&gt;
      &lt;li&gt;First radio network: NBC, 1928&lt;/li&gt;
      &lt;li&gt;Very few independent radio stations existed&lt;/li&gt;
      &lt;li&gt;Network radio began to change patterns of consumption form regional to national&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-rise-of-the-record-industry&quot;&gt;The Rise of the Record Industry&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;The record industry concerned - needs to find new markets&lt;/li&gt;
  &lt;li&gt;Ralph Peer - worked for Okeh Records&lt;/li&gt;
  &lt;li&gt;Finding songs (repertoire) and artists (A&amp;amp;R guy - artists and repertoire)&lt;/li&gt;
  &lt;li&gt;1920 - “Crazy Blues” - Mamie Smith
    &lt;ul&gt;
      &lt;li&gt;due to institutionalizedracism - black people did not record music&lt;/li&gt;
      &lt;li&gt;first significant recording by AA artists despite origin in 1877&lt;/li&gt;
      &lt;li&gt;song was a minor hit - purchased by white people despite racism&lt;/li&gt;
      &lt;li&gt;black community did not have a lot of purchasing power, thus they were not a targeted market&lt;/li&gt;
      &lt;li&gt;not a Blues song, much more associated to Jazz. Jazz is closely linked to popular music up to post-war&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Market research in popular music
    &lt;ul&gt;
      &lt;li&gt;most radio music is TPA&lt;/li&gt;
      &lt;li&gt;Ignored black cultural and southern rural white culture, thought culture was artistically and economically insignificant&lt;/li&gt;
      &lt;li&gt;Peer decided to used records to play what radio did not&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Introduction of “Hillbilly”: Carve that Possum - Uncle Dave Macon, 1927
    &lt;ul&gt;
      &lt;li&gt;Uncle Dave Macon and the Fruit Jar Drinkers&lt;/li&gt;
      &lt;li&gt;Early origin of country (music of Southeastern states, now called blue bratz) and western&lt;/li&gt;
      &lt;li&gt;More energy/intensity, very hard, on beat&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-19-2016---lecture-3&quot;&gt;May 19, 2016 - Lecture 3&lt;/h2&gt;

&lt;h3 id=&quot;introduction-of-race&quot;&gt;Introduction of “Race”&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;How Long Blues, 1928, Leroy Carr and Scrapper Blackwell; beginning of guitar solo
    &lt;ul&gt;
      &lt;li&gt;First recording of AA artists and Blues (1890s, maybe 1880s)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Included different styles. The most important one was that it included the next style of Blues: City Blues = music made by country blues artists after they moved to the cities; Relaxed style&lt;/li&gt;
  &lt;li&gt;Instruments had to be louder in city than in country, therefore main instrument went from solo acoustic guitar to piano&lt;/li&gt;
  &lt;li&gt;Black and Southern cultures exposed&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;television&quot;&gt;Television&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;First demonstration in 1927&lt;/li&gt;
  &lt;li&gt;Experimental and low-resolution broadcasts through the 1930s&lt;/li&gt;
  &lt;li&gt;Network broadcasts begin in 1939&lt;/li&gt;
  &lt;li&gt;By 1945 - 6 stations&lt;/li&gt;
  &lt;li&gt;WWII: TV not helpful towards war effort&lt;/li&gt;
  &lt;li&gt;By 1955 - 411 stations&lt;/li&gt;
  &lt;li&gt;Major nextworks move to Television
    &lt;ul&gt;
      &lt;li&gt;Televion was a better medium for commercials&lt;/li&gt;
      &lt;li&gt;Commercials were primary revenue source for networks&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Major networks switching mediums led to more independent, local stations&lt;/li&gt;
  &lt;li&gt;First “Black Appeal” radio station - WDIA Memphis, 1948; 2 pharmacists bought a radio station&lt;/li&gt;
  &lt;li&gt;By 1954, 200 BA radio stations are on the air&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Who is listening? Extended Adolescence&lt;br /&gt;
Transistor Radio&lt;/p&gt;

&lt;h3 id=&quot;gospel&quot;&gt;Gospel&lt;/h3&gt;

&lt;p&gt;The sacred music of black culture, from the culture following the civil war -&amp;gt; spiritual&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ray Charles(Robinson), 1930-2004&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Born in Albany, GA&lt;/li&gt;
  &lt;li&gt;Blind at age 7, learns music in a school for the blind&lt;/li&gt;
  &lt;li&gt;1952 Atlantic Records&lt;/li&gt;
  &lt;li&gt;Success with white audiences - heightened level of intensity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Chicago Electric Blues&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Muddy Waters, 1913-1983
    &lt;ul&gt;
      &lt;li&gt;Born in Mississippi&lt;/li&gt;
      &lt;li&gt;Played guitar and harmonica&lt;/li&gt;
      &lt;li&gt;Emulated Robert Johnson&lt;/li&gt;
      &lt;li&gt;Moved to Chicago in the early 1940s&lt;/li&gt;
      &lt;li&gt;Switched to electric guitar, 1945&lt;/li&gt;
      &lt;li&gt;1946, records for Aristocrat Records (would later become Chess Records)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Hoochie Coochie Man (1954, Willie Dixon)
    &lt;ul&gt;
      &lt;li&gt;Verse chorus (modified 12-bar blues)&lt;/li&gt;
      &lt;li&gt;Stop Time&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-26-2016---lecture-4&quot;&gt;May 26, 2016 - Lecture 4&lt;/h2&gt;

&lt;h2 id=&quot;recap&quot;&gt;Recap&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Crossover hits: works done by black artists but were popular on the charts;&lt;/li&gt;
  &lt;li&gt;White teenagers listened to a lot Black music&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cover-versions-1954-1956&quot;&gt;Cover Versions: 1954-1956&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;“white” versions of “black” records; did not violate copyright laws; quite legal; crossover-&amp;gt;pop chart-&amp;gt;within a week or two the same song performed by white artists would be on the chart with it simultaneously-&amp;gt;to appease white parents&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;** Richard Wayne Penniman “Little Richard” **&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Born 1932, Macon, GA&lt;/li&gt;
  &lt;li&gt;First big hit: “Tutti Frutti”&lt;/li&gt;
  &lt;li&gt;Released late 1955 on Specialty Records (lyrics revised by Dorothy LaBostrie; she replaced some sexual lyrics with less controversial words)&lt;/li&gt;
  &lt;li&gt;“Crossover” hit: #2 R&amp;amp;B, #17 Pop on Billboard&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;** Pat Boone **&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Born 1934&lt;/li&gt;
  &lt;li&gt;Was just breaking as a popstar in 1955&lt;/li&gt;
  &lt;li&gt;Early 1956, released a cover of “Tutti Frutti”&lt;/li&gt;
  &lt;li&gt;No R&amp;amp;B, #10 Pop&lt;/li&gt;
  &lt;li&gt;Outsold Little Richard with white audiences&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;** What was changed? **&lt;/p&gt;

&lt;p&gt;** Cover Versions: “Sh-Boom” **&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The Chords (black, original) and The Crew Cuts (white, cover);&lt;/li&gt;
  &lt;li&gt;The Chords: June 1954/Cat Records(independent) (AABA pattern), crossover hit on the pop charts&lt;/li&gt;
  &lt;li&gt;The Crew Cuts: July 1954/Mercury Records (AABA,Sh-Boom(A), Sh-Boom(A),BA, still retained the AABA structure; deliberately repeated the AABA pattern to appeal to white middle class audiences, will sound more familiar; Changes:)&lt;/li&gt;
  &lt;li&gt;The Chords: Form: 1x through AABA, with interludes; Voice: distorted - use of lower octave in B; Solo: Sax - distorted timbre, sexual metaphor&lt;/li&gt;
  &lt;li&gt;The Crew Cuts: Form: 2x through AABA - clearly stated; Voice: Clean, no use of lower octave; Solo: No solo - repeats of “Sh-boom” group vocal - timpani joke (cartoon reference)&lt;/li&gt;
  &lt;li&gt;Racist? Or a continuation of TPA traditions? Record companies -&amp;gt; simply business&lt;/li&gt;
  &lt;li&gt;The Chords: #3 R&amp;amp;B / #5 Pop&lt;/li&gt;
  &lt;li&gt;The Crew Cuts: no R&amp;amp;B / #1 Pop for 9 weeks - Song of the Year (not The Chords)&lt;/li&gt;
  &lt;li&gt;Both white and black artists performing in this new style: a mix of pop, C&amp;amp;W, and R&amp;amp;B, targeted teenagers - Rock ‘n Roll (term attributed to Alan Freed; term goes at least back to the 1800s out of Black culture)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;** Bill Haley and the Comets **&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Born in 1925&lt;/li&gt;
  &lt;li&gt;Originally “Bill Haley and the Saddlemen”&lt;/li&gt;
  &lt;li&gt;Western Swing (Jazz beats)&lt;/li&gt;
  &lt;li&gt;Changes to “Bill Haley and the Comets” in 1952&lt;/li&gt;
  &lt;li&gt;Early hits with “Crazy Man, Crazy” and “Shake, Rattle, and Roll”&lt;/li&gt;
  &lt;li&gt;** 1954, Rock Around The Clock **
    &lt;ul&gt;
      &lt;li&gt;Becomes popular in 1955 in the midst of fear of black culture on white teenagers&lt;/li&gt;
      &lt;li&gt;Film “Blackboard Jungle”&lt;/li&gt;
      &lt;li&gt;12 bar blues&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;** Elvis Presley (1935-1977) **&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Born in Tupelo, Mississippi&lt;/li&gt;
  &lt;li&gt;1953 - 18 years old, Sam Phillips/Sun Records (independent, 2 employees)&lt;/li&gt;
  &lt;li&gt;Spring 1954 - Records with Scotty Moore (Guitar) and Bill Black (Bass); White artists did not use drums in 1954, “gonna record country and western songs”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-2-2016---lecture-5&quot;&gt;June 2, 2016 - Lecture 5&lt;/h2&gt;

&lt;h2 id=&quot;elvis-continued&quot;&gt;Elvis Continued&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;July 1954, “That’s Alright Mamma”/”Blue Moon of Kentucky”, original by Bill Monroe; Change in beats&lt;/li&gt;
  &lt;li&gt;country and western music to upbeat, pop monstrosity with heavy R&amp;amp;B influence; added drum&lt;/li&gt;
  &lt;li&gt;1954-55: Elvis on Sun Records; 12 songs, all covers&lt;/li&gt;
  &lt;li&gt;Rockabilly - “The Hillbilly Cat”, one foot in country and western, one foot in rhythm and blue&lt;/li&gt;
  &lt;li&gt;Regional star, some national sucess on Country Charts&lt;/li&gt;
  &lt;li&gt;1956, Colonel Tom Parker; in Southern states, “Colonel” is an honorary title for an important figure in the community; Tom Parker is a promotor extraordinaire; RCA&lt;/li&gt;
  &lt;li&gt;Sam sold Elvis’s contract for $35,000; Money was used to promote other artists&lt;/li&gt;
  &lt;li&gt;1956, Elvis: 11 appearances on national television&lt;/li&gt;
  &lt;li&gt;April-May 1956: “Heartbreak Hotel”, April-May No.1 Pop/Country No.5 R&amp;amp;B&lt;/li&gt;
  &lt;li&gt;August to December 1956: “Hound Dog”, “Don’t Be Cruel”, “Love Me Tender” ALL No.1 Pop; “Hound Dog” is the first song to chart No.1 on Pop/Country/R&amp;amp;B&lt;/li&gt;
  &lt;li&gt;Elvis not charting R&amp;amp;B after 1957&lt;/li&gt;
  &lt;li&gt;March 1958 - March 1960: Elvis enters the army&lt;/li&gt;
  &lt;li&gt;March 1961 - Last public performance for 7 years&lt;/li&gt;
  &lt;li&gt;Transition from trailblazing pop star icon to movie star&lt;/li&gt;
  &lt;li&gt;1968 - “Comeback Special”&lt;/li&gt;
  &lt;li&gt;1970-1977 = Las Vegas&lt;/li&gt;
  &lt;li&gt;Elvis died August 16, 1977, aged 42&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;chuck-berry&quot;&gt;Chuck Berry&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Early History&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Born in St. Louis, Midwest, different from other contemporary artists (Elvis, Little Richard, etc); Middle-class family&lt;/li&gt;
  &lt;li&gt;Wanted to be rich, thus chose a music career; Entered talent/music contests&lt;/li&gt;
  &lt;li&gt;Deliberately used nasal cavity to sing to sound like a white country artist&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Chess Records&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“Idared” -&amp;gt; “Maybellene”, July 1955&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Themes&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cars&lt;/li&gt;
  &lt;li&gt;Girls&lt;/li&gt;
  &lt;li&gt;No school&lt;/li&gt;
  &lt;li&gt;Rock ‘n’ Roll - celebrating the music itself&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Berry deliberately wrote songs for young white audience.&lt;/p&gt;

&lt;p&gt;Few “cover versions” of Berry’s songs. Why?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;centrality of the electric guitar&lt;/li&gt;
  &lt;li&gt;unlike artists such as Little Richard, Berry had little in his performance or music that was viewed as a “threat”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Johnny B. Goode, 1958&lt;/strong&gt; No.2 R&amp;amp;B, No.8 Pop&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;12 Bar Blues with a “text heavy” narrative&lt;/li&gt;
  &lt;li&gt;While elements:
    &lt;ul&gt;
      &lt;li&gt;text-heavy - narrative/stories;&lt;/li&gt;
      &lt;li&gt;clear enunciation, sung very clearly&lt;/li&gt;
      &lt;li&gt;groove is “straight” 8ths&lt;/li&gt;
      &lt;li&gt;country guitar sound, as opposed to muddy/messy guitar sound&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Black elements:
    &lt;ul&gt;
      &lt;li&gt;Blues chord structure&lt;/li&gt;
      &lt;li&gt;Added 6th (Boogie-woogie)&lt;/li&gt;
      &lt;li&gt;Call and response between voice and guitar&lt;/li&gt;
      &lt;li&gt;Guitar solo is structured on timbre and rhythm, than on actual notes&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-9-2016---lecture-6&quot;&gt;June 9, 2016 - Lecture 6&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1954 $200 Million; 1959 $600 Million:&lt;/li&gt;
  &lt;li&gt;Pop top 10: 1955 - 15% are R’n’R / 1959 - 42% are R’n’R&lt;/li&gt;
  &lt;li&gt;Independent share: 1955: 21% / 1959: 66%&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;racism&quot;&gt;Racism&lt;/h3&gt;

&lt;p&gt;Reaction against the perceived intergration of youth&lt;/p&gt;

&lt;p&gt;Birth of ROck and ROll coincides the mergence of the Civil Rights Movement
+ May 1954: Brown v. Board of Education of Topeka: Separate is not Equal
  + Court declared state laws establishing separate public schools for black and white students to be unconstitutional
  + Overturned state-sponsored racial segragration supported by Plessy v. Ferguson (1896)
+ December 1955: Rosa Parks - Montgomery Bus Boycott
  + political and social protest against racial segregation
+ Freedom Rides / Lunch Counter Sit-ins
  + African-Americans and sympathetic Americans
  + Sit together while crossing state lines
  + Lunch Counter Sit-ins: 1960: Greensboro, North Carolina
+ Martin Luther King King Jr.: Non-violent protest
+ Dislike of Rock ‘n’ Roll is linked to middle-class white fears regarding the growing strength of the Civil Rights’ movement; RnR considered inferior culture&lt;/p&gt;

&lt;h3 id=&quot;the-great-extinction&quot;&gt;The Great Extinction&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;March 1958: Elvis drafted into army&lt;/li&gt;
  &lt;li&gt;December 1959: Chuck Berry arrested under the “Mann Act” (aka White Slave Traffic Act)&lt;/li&gt;
  &lt;li&gt;May 1958: Jerry Lee Lewis - Marriage to 13-year-old cousin becomes public&lt;/li&gt;
  &lt;li&gt;October 1957: Bible College&lt;/li&gt;
  &lt;li&gt;February 1959: Buddy Holly - died in a plane crash along with Ritchie Valens and “The Big Bopper” (JP Richardson) = End of the Golden Age, song “The Day Music Died”, February 3, 1959&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-in-between-years-1959-1963&quot;&gt;The In-Between Years (1959-1963)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;The end of the Golden Age of Rock and Roll, to the arrival of The Beatles (February 1964)&lt;/li&gt;
  &lt;li&gt;Vacuum created by the loss of so many of the stars of the Golden Age creates a space for the Major Record companies to reassert control over the popular music industry&lt;/li&gt;
  &lt;li&gt;They begin to create music similar to 1950’s Rock and Roll, but produced within the Division-Of-Labour system favoured by the major labels&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dance-craze&quot;&gt;Dance Craze&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;E.g. “The Locomotion”, Little Eva (Gofiin, King), 1962&lt;/li&gt;
  &lt;li&gt;Songs are written specifically for the new teen demographic. Romantic (non-sexualized) love and dancing&lt;/li&gt;
  &lt;li&gt;Teen idols: clean-cut, idealized boyfriend - no “bad boy” image from the Golden Age&lt;/li&gt;
  &lt;li&gt;Bobby Vinton: “Blue Velvet”, 1963
    &lt;ul&gt;
      &lt;li&gt;Composed in 1950&lt;/li&gt;
      &lt;li&gt;Hit for Tony Bennett in 1951&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Most of the newer artists did not write songs - where were they coming from?&lt;/li&gt;
  &lt;li&gt;From a new generation of TPA-style songwriters working in the new style of Rock and Roll&lt;/li&gt;
  &lt;li&gt;Many came from The Brill Building&lt;/li&gt;
  &lt;li&gt;Neil Diamond, Carol King, Burt Bacharach, Marvin Hamlisch (EGOT), Ellie Greenwich, Barry Mann&lt;/li&gt;
  &lt;li&gt;Don Kirshaner / Al Nevins Aldon Music&lt;/li&gt;
  &lt;li&gt;Pop music - TPA approach&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-rise-of-the-producer&quot;&gt;The Rise of the Producer&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Magnetophon: Sgt. Jack Mullin in Signal Corps in the US Army;
    &lt;ul&gt;
      &lt;li&gt;He discovered a magnetophon in Nazi Germany at the end of WWII&lt;/li&gt;
      &lt;li&gt;Magnetophone = First high-quality reel-to-reel tape recorder&lt;/li&gt;
      &lt;li&gt;1947: Mullin demonstrated tape recorder to Bing Crosby (who invented the laugh track)&lt;/li&gt;
      &lt;li&gt;Bing Crosby invested in the founding Ampex&lt;/li&gt;
      &lt;li&gt;Inexpensive, mass-produced tape recorders lower the cost of operating a recording studio&lt;/li&gt;
      &lt;li&gt;Leads to a boom in independent record companies, which in turn is part of what makes the golden age of Rock’n’Roll possible&lt;/li&gt;
      &lt;li&gt;1948: Bing Crosby gve one of the first commercially produced reel-to-reel tape recorder to Les Paul&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;les-paul-1915-2009&quot;&gt;Les Paul (1915-2009)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Jazz, Pop, Country&lt;/li&gt;
  &lt;li&gt;1941: “The Log”&lt;/li&gt;
  &lt;li&gt;1952: Gibson Les Paul&lt;/li&gt;
  &lt;li&gt;Les Paul wished to create recordings by layering performance&lt;/li&gt;
  &lt;li&gt;Assisted in the devlopment of the “multitrack” tape recorder&lt;/li&gt;
  &lt;li&gt;Example: 1953, “Sitting on Top of the World”, Les Paul with Mary Ford
    &lt;ul&gt;
      &lt;li&gt;When did this performance occur?
        &lt;ul&gt;
          &lt;li&gt;Multitrack recording redefines the process of recording. Reproduction to Production&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;During the In-Between Years, the recording industry begins the transition from recording complete songs in a single “take” to the use of multitrack recording&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;phil-spector&quot;&gt;Phil Spector&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;The “Wall of Sound”&lt;/li&gt;
  &lt;li&gt;1963, The Ronettes, “Be My Baby” (Barry, Greenwich, Spector)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Two other styles of music become imporant although neither fit the Division-Of-Labour model.&lt;/p&gt;

&lt;h2 id=&quot;the-folk-festival&quot;&gt;The Folk Festival&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Many of the teen fans of the Golden Age are now in their early 20s&lt;/li&gt;
  &lt;li&gt;Now in university, many are looking for music that is more “serious”&lt;/li&gt;
  &lt;li&gt;Folk music&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;pre-wwii&quot;&gt;Pre WWII&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Folk music, political left, Union Movement&lt;/li&gt;
  &lt;li&gt;Woody Guthrie: “This machine kills fascists”&lt;/li&gt;
  &lt;li&gt;The Weavers: Pete Seeger&lt;/li&gt;
  &lt;li&gt;“This Land is Your Land” (Woody Guthrie, 1940) performed by The Weavers
    &lt;ul&gt;
      &lt;li&gt;instruments and vocal timbre&lt;/li&gt;
      &lt;li&gt;lyric content&lt;/li&gt;
      &lt;li&gt;successful from late 1940s to 1953&lt;/li&gt;
      &lt;li&gt;“blacklisted” in 1953 because of left-wing connection&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;huac-house-un-american-activities-committee-and-mccarthyism-1947-1956&quot;&gt;HUAC (House Un-American Activities Committee) and McCarthyism (1947-1956)&lt;/h3&gt;

&lt;p&gt;+&lt;/p&gt;

&lt;h3 id=&quot;late-1950s--early-1960s---baby-book-reaches-college&quot;&gt;Late 1950s / Early 1960s - Baby Book reaches college&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;interest in “serious” music&lt;/li&gt;
  &lt;li&gt;The Kingston Trio / Peter Paul and Mary
    &lt;ul&gt;
      &lt;li&gt;similiar to ealier music but more “produced” - smoother sounding, more “arranged”&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-16-2016---lecture-7&quot;&gt;June 16, 2016 - Lecture 7&lt;/h2&gt;

&lt;h3 id=&quot;bob-dylan&quot;&gt;Bob Dylan&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;1961-1965 Traditional folk singer songwriter&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A Hard Rain’s a Gonna Fall&lt;/strong&gt; (1963)
    &lt;ul&gt;
      &lt;li&gt;Nuclear missile: black rain&lt;/li&gt;
      &lt;li&gt;Cuban Missile Crisis - October 1962&lt;/li&gt;
      &lt;li&gt;Lyric style&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;surf-music&quot;&gt;Surf Music&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Middle class, West Coast prosperity&lt;/li&gt;
  &lt;li&gt;An extension of the 1950s&lt;/li&gt;
  &lt;li&gt;Dick Dale and the Del-tones; The Ventures&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Importance of Electric Guitar&lt;/strong&gt;:
    &lt;ul&gt;
      &lt;li&gt;instrumental tracks&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The Beach Boys&lt;/li&gt;
  &lt;li&gt;1952 -&lt;/li&gt;
  &lt;li&gt;The Pendletones (original name)&lt;/li&gt;
  &lt;li&gt;May 1963 - Surfin’ USA (Chuck Berry)&lt;/li&gt;
  &lt;li&gt;Brian Wilson - Creative force&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;decline-in-popularity-through-late-1960s---why&quot;&gt;Decline in popularity through late 1960s - why?&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Brian Wilson’s mental illness&lt;/li&gt;
  &lt;li&gt;Changes in approach to popular music (1960s) - Too optimistic, too naive&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Total worth: $200M in 1954&lt;/li&gt;
  &lt;li&gt;Total worth: $600M end of golden age, mid to late 60s&lt;/li&gt;
  &lt;li&gt;Stayed flat during the in-between years (60s) -&amp;gt; holding pattern&lt;/li&gt;
  &lt;li&gt;After The Beatles appeared (1964): $1B&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Why do we call call these years “The In-Between Years”?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;End of 50s: Music industry worth 600M&lt;/li&gt;
  &lt;li&gt;1963: Music industry worth 600M&lt;/li&gt;
  &lt;li&gt;There was &lt;strong&gt;no growth&lt;/strong&gt; in this period. It was completely stagnant. But a year later, once The Beatles have come around in 1964, the industry was worth over 1B.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;===TEST 2 MATERIAL===&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-british-invasion&quot;&gt;The British Invasion&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;US in early 60s&lt;/li&gt;
  &lt;li&gt;Opinion with Kennedy (Camelot, musical by Lerner and Loewe, refers to his charisma)&lt;/li&gt;
  &lt;li&gt;Optimism with Kennedy (who believed in equality), well-liked by young people, democratic, sympathetic to goals of civil right movements&lt;/li&gt;
  &lt;li&gt;“The New Frontier” - world as it would be if there was selflessness and equality&lt;/li&gt;
  &lt;li&gt;JFK “the outsider” -&amp;gt; very young, Catholic (American presidents were never Catholic) -&amp;gt; champion of civil rights who listens to young people -&amp;gt; “Anything is possible”&lt;/li&gt;
  &lt;li&gt;August 1963, Washington DC - MLK “I Have A Dream”&lt;/li&gt;
  &lt;li&gt;November 22, 1963, Dallas TX - Kennedy assissinated
    &lt;ul&gt;
      &lt;li&gt;This put the country into a great depression and shocked everyone&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;February 1964 - The Beatles arrived in New York&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;post-war-britain&quot;&gt;Post-War Britain&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Lack jobs, infrastructure destroyed, increased unemployment, rationing - Consequences of WWII&lt;/li&gt;
  &lt;li&gt;Also lack of entertainment culture due to crumbled infrastructure&lt;/li&gt;
  &lt;li&gt;Thus the return to &lt;strong&gt;DIY culture&lt;/strong&gt;: There is no music industry, what do you do? You make it yourself.&lt;/li&gt;
  &lt;li&gt;New style of music: &lt;strong&gt;Skiffle&lt;/strong&gt; (3-6 (cheap) guitar players, could not afford bass, a bass player with a broomstick bass and string on box “washtub”, and maybe a kick drum + tambourine), heavily influenced by American culture&lt;/li&gt;
  &lt;li&gt;Everyone knew how good it was in the US (years following WWII stories of how well Americans were doing)&lt;/li&gt;
  &lt;li&gt;As such, the British wanted to be like tem where things were better. The craze for American culture spread into the music industry
    &lt;ul&gt;
      &lt;li&gt;British teens were getting American records from American soldiers who brought supplies, including things they could sell on black market (chocolate, records (Blues and Rock n Roll))&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Skiffle&lt;/strong&gt; was based on American Blues and Rock ‘n’ Roll&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-quarrymen-later-known-as-the-beatles&quot;&gt;The Quarrymen (later known as The Beatles)&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Early History&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;July 1957, “The Quarrymen” - John Lennon / Paul McCartney (vocals and guitar) began to write songs together (important: they both wrote songs). John invites Paul to join and write songs&lt;/li&gt;
  &lt;li&gt;However, neither of them could play guitar solos; needed a lead guitarist&lt;/li&gt;
  &lt;li&gt;February 1958 - George Harrison (“Lead” guitarist)&lt;/li&gt;
  &lt;li&gt;January 1960 - Stu Sutcliffe (Bass) was added, but he really just stood there because he couldn’t play bass&lt;/li&gt;
  &lt;li&gt;The Quarrymen spent a lot of time in Germany playing for American soldiers&lt;/li&gt;
  &lt;li&gt;They had their &lt;strong&gt;Rocker&lt;/strong&gt; image (black leather jackets, jeans, boots, greased hair) during this time; in Hamburg, Germany
    &lt;ul&gt;
      &lt;li&gt;The British interpretation of American motorcycle gangs&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;August 1960 - Changed name to “The Beatles”, added drummer Pete Best
    &lt;ul&gt;
      &lt;li&gt;Became a very busy band, where in England they were busy backing up other singers, and in Germany playing for American soldiers&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Liverpool - The Cavern Club&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The Beatles were developing their home club while playing at this night club&lt;/li&gt;
  &lt;li&gt;July 1961 - Stu Sutcliffe leaft band to become an artist; Died of brain hemorrhage in April 1962; Paul McCartney switched to bass&lt;/li&gt;
  &lt;li&gt;The Beatles were very rough - they got into a lot of fights, took drugs, spat on audience etc.&lt;/li&gt;
  &lt;li&gt;More importantly, they met Brian Epstein, their manager&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Brian Epstein&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;December 1961 - Epstein became The Beatles’ manager&lt;/li&gt;
  &lt;li&gt;Up to this time, The Beatles were making a lot of recording as back-up artists&lt;/li&gt;
  &lt;li&gt;In 1961 they were background music for Tony Sheriton, which became a small hit
    &lt;ul&gt;
      &lt;li&gt;It was Tony’s hit everywhere else, but in Liverpool, residents knew that The Beatles were the ones in the background&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;First, Epstein changed The Beatles’ image: more clean-cut
    &lt;ul&gt;
      &lt;li&gt;He made them into men that fathers would be okay if their daughters dated them&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Next, he got them a record label
    &lt;ul&gt;
      &lt;li&gt;June 1962 - Parlophone (a division of EMI), after being rejected by the major ones (such as DECA)&lt;/li&gt;
      &lt;li&gt;EMI didn’t know what to do with them, so they shoved them aside and gave them a producer, George Martin&lt;/li&gt;
      &lt;li&gt;Martin didn’t think they were the best, fired Pete Best and hired Ringo Starr&lt;/li&gt;
      &lt;li&gt;He would later have a lot of interactions with Paul McCartney as the Beatles began to divide into the John side and the Paul side&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-23-2016---lecture-8&quot;&gt;June 23, 2016 - Lecture 8&lt;/h2&gt;

&lt;h2 id=&quot;the-beatles-history-continued&quot;&gt;The Beatles: History (Continued)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Love Me Do&lt;/strong&gt;, September 1962 (Ringo didn’t play on this record)&lt;/li&gt;
  &lt;li&gt;By the end of 1963, The Beatles were one of the most popular acts in Britain
    &lt;ul&gt;
      &lt;li&gt;They performed at the Royal Variety Show in November 1963 at London Palladium&lt;/li&gt;
      &lt;li&gt;26 million people viewed this performance&lt;/li&gt;
      &lt;li&gt;Sponsored by the Royal Family; Established them as major stars&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Please Please Me&lt;/strong&gt;, January 1963 (Ringo as drummer)
    &lt;ul&gt;
      &lt;li&gt;AABA form&lt;/li&gt;
      &lt;li&gt;McCartney and Lennon, by this point, were experienced and mature songwriters&lt;/li&gt;
      &lt;li&gt;Numerous rehearsed details, change in rhythmic density in vocal&lt;/li&gt;
      &lt;li&gt;Highest note at the end of the B section - moment of greatest tension&lt;/li&gt;
      &lt;li&gt;TPA-style attention to arrangement&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Initially, British musical acts did not do well in the US&lt;/li&gt;
  &lt;li&gt;February 1964 - “The Beatles are coming” media campaign in the US
    &lt;ul&gt;
      &lt;li&gt;Referred to as “The New British Invasion” (in reference to the War of Independence)&lt;/li&gt;
      &lt;li&gt;Television performance: &lt;strong&gt;Ed Sullivan Show&lt;/strong&gt;, February 9, 1964
        &lt;ul&gt;
          &lt;li&gt;70 million viewers; Bruce Springsteen was impressed and inspired, amongst other future rockstars&lt;/li&gt;
          &lt;li&gt;The most influential TV appearance ever&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;The Beatles invented Arena Gigs - They did a concert at a sports arena (Washington Coliseum), and no band had ever played in such a big venue before&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The American tour lasted for two weeks. They sold over 2 million albums, and $2.5 million worth of merchandise&lt;/li&gt;
  &lt;li&gt;When The Beatles returned to England, 50,000 fans were awaiting their arrival at the airport. This hysteria is known as &lt;strong&gt;“Beatlemania”&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;In April 1964, 12 Beatles songs in the Billboard Top 100 Pop including spots 1-5, for three weeks&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A Hard Day’s Night&lt;/strong&gt; (film), July 1964
    &lt;ul&gt;
      &lt;li&gt;First film; Usually pop star films were bad, but this one was good and funny&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;In 1965, by the end of their 4th US tour, they had made $65 million, also played in Shea Stadium in New York
    &lt;ul&gt;
      &lt;li&gt;This craze can be explained by the fact that you have probably seen them at most twice - no videos, only the Ed Sullivan Show and only photographs; Very limited access to seeing artists&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The Beatles have &lt;strong&gt;brought back the Golden Age of Rock n Roll&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Not much musically, but the sensibility and more importantly, self-contained bands&lt;/li&gt;
      &lt;li&gt;They brought back the approach of the Golden Age, writing and playing own songs and instruments, and playing music primarily based on the electric guitar (all of which disappeared during the in-between years)&lt;/li&gt;
      &lt;li&gt;The Beatles formed the template for what is to follow - guitar-based, self-contained, writing/performing own songs&lt;/li&gt;
      &lt;li&gt;They were essentially role models for &lt;strong&gt;Mersey Beat&lt;/strong&gt;: Gerry and the Pacemakers, The Searchers, The Swinging Blue Jeans with regards to their music and appearance
        &lt;ul&gt;
          &lt;li&gt;Mersey Beat is the sound that is similar to The Beatles&lt;/li&gt;
          &lt;li&gt;Liverpool was built on a port - important, because this was where you could get music from sailors&lt;/li&gt;
          &lt;li&gt;Mersey Beat was a music publication in Liverpool; it carried news about all the local Liverpool bands&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Help&lt;/strong&gt; (film), July 1965
    &lt;ul&gt;
      &lt;li&gt;The Beatles’ second film&lt;/li&gt;
      &lt;li&gt;Very influential - American TV created a band (“The Monkees”) modelled on the look from the movie&lt;/li&gt;
      &lt;li&gt;The TV show was about an imaginary band that wanted to be The Beatles, but was never successful&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Yesterday&lt;/strong&gt;, 1965 (from Help)
    &lt;ul&gt;
      &lt;li&gt;AABA form&lt;/li&gt;
      &lt;li&gt;More complex harmonic and lyric structure&lt;/li&gt;
      &lt;li&gt;Was written almost entirely by Paul McCartney, but none of the other members liked the song; It was not a Beatles tune
        &lt;ul&gt;
          &lt;li&gt;First time a Beatle song where only one Beatle playing&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;String quartet also playing
        &lt;ul&gt;
          &lt;li&gt;Shows the growing bond between George Martin and Paul McCartney&lt;/li&gt;
          &lt;li&gt;String quartet = composers do their greatest and most serious work&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;This song was the first song that something was changing within The Beatles
        &lt;ul&gt;
          &lt;li&gt;Prior to this song, they had met Bob Dylan, who introduced them to drugs, influenced their approach to music - told them that they had good music but their lyrics lacked meaning&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;This is the moment when The Beatles stopped being one band and started moving away from each other, between Lennon and McCartney&lt;/li&gt;
      &lt;li&gt;The Beatles were evolving - they started to move away from pop song writing&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Rubber Soul&lt;/strong&gt; (album), December 1965
    &lt;ul&gt;
      &lt;li&gt;The Beatles’ first release not to feature their name on the cover, uncommon in 1965&lt;/li&gt;
      &lt;li&gt;The Beatles were moving away from singles, and into the realm of albums, and all of the aspects that come with it&lt;/li&gt;
      &lt;li&gt;They slowly drifted away from conventional album covers to covers with less words = “Rubber Soul” with a distorted image&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Revolver&lt;/strong&gt; (album), August 1966
    &lt;ul&gt;
      &lt;li&gt;By this time, The Beatles were heavily influenced by non-Western culture&lt;/li&gt;
      &lt;li&gt;They were interested in studio recording and writing music that could not be played in real life; Very abstract&lt;/li&gt;
      &lt;li&gt;Writing and recording is now more important than playing live&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tomorrow Never Knows&lt;/strong&gt;, from the album &lt;strong&gt;Revolver&lt;/strong&gt;, August 1966
    &lt;ul&gt;
      &lt;li&gt;Composed by John Lennon&lt;/li&gt;
      &lt;li&gt;Song was based on a drone, a note or chord continuously sounded throughout most or all of a piece (influence of non-Western culture)&lt;/li&gt;
      &lt;li&gt;Lyrics were based on the Tibetan Book of the Dead&lt;/li&gt;
      &lt;li&gt;Vocal was “double-tracked” (John sang the song once and recorded it, then sang it a second time and tried to match it exactly to the first time) - you can’t perfectly match them, there will be always be some kind of discrepency and is run through a Leslie speaker cabinet&lt;/li&gt;
      &lt;li&gt;Made use of tape loops (avant garde) and backwards recording&lt;/li&gt;
      &lt;li&gt;First known use of &lt;strong&gt;flanging&lt;/strong&gt; (audio effect produced by mixing two identical signals together, one delayed by a small and gradually changing period; produces a “Darth Vader effect”)&lt;/li&gt;
      &lt;li&gt;Had an Indian musical influence&lt;/li&gt;
      &lt;li&gt;The importance of this song: demonstrated the growing influence of non-Western culture and recording studio techonology on the work of The Beatles
        &lt;ul&gt;
          &lt;li&gt;First song that they could not play live&lt;/li&gt;
          &lt;li&gt;Creating the studio has become more important to them than being able to play in concerts&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Summer 1966, The Beatles were not a good band
    &lt;ul&gt;
      &lt;li&gt;June 1966, Japan - They played awfully, not together as a band&lt;/li&gt;
      &lt;li&gt;July 1966, The Phillippines - They were even more exhausted and sounded even worse&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;March 1966, Lennon did an interview with an English newspaper, London Evening Standard
    &lt;ul&gt;
      &lt;li&gt;He emerged as the intellectual in the group&lt;/li&gt;
      &lt;li&gt;When asked about the conflict between modern pop culture and religious traidtions, Lennon (who was fairly spiritual) said modern religion is more about power, rather than faith, and said people would rather see The Beatles than go to church&lt;/li&gt;
      &lt;li&gt;“Bigger than Jesus”&lt;/li&gt;
      &lt;li&gt;No reaction from he public until August 1966, when a US teen magazine quoted Lennon’s comments -&amp;gt; extensive protests&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;August 29, 1966 - The Beatles’ final live performance in Candlestick Park in San Francisco
    &lt;ul&gt;
      &lt;li&gt;Final unannounced live performance was on the roof the Apple building in London in January 1969&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The Beatles were only in the public light for about 2 years&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sgt. Pepper’s Lonely Hearts Club Band&lt;/strong&gt; (album), June 1967
    &lt;ul&gt;
      &lt;li&gt;Considered one of the most important albums in the history of Western pop music&lt;/li&gt;
      &lt;li&gt;27 weeks at the top of the albums chart in UK, 15 in US&lt;/li&gt;
      &lt;li&gt;The first concept album -&amp;gt; most or all songs were linked to theme: The Beatles wanted to present themselves as someone else (Sgt. Pepper’s Club) and talk about childhood, but both ideas were dumped&lt;/li&gt;
      &lt;li&gt;This was an album, not a collection of songs&lt;/li&gt;
      &lt;li&gt;The first significant album to include all of the lyrics; The lyrics were printed in full on the back cover&lt;/li&gt;
      &lt;li&gt;It was an experience; Listening to the songs in order is very important&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The Beatles were changing what popular music was, where you focus on album and musicians not thinking of themselves as entertainers, but instead as artists&lt;/li&gt;
  &lt;li&gt;The Beatles’ second great contribution: transforming Rock n Roll into Rock -&amp;gt; music that was more serious and focused&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-30-2016---lecture-9&quot;&gt;June 30, 2016 - Lecture 9&lt;/h2&gt;

&lt;h2 id=&quot;the-british-blues-revival&quot;&gt;The British Blues Revival&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;There was a significant interest in Blues in London, UK
    &lt;ul&gt;
      &lt;li&gt;Had a large following there even though Blues weren’t as popular as in the US&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Late 1950s - Chess Tour was organized (Chess Records musicians travelled to England to perform)&lt;/li&gt;
  &lt;li&gt;Chris Barber, Cyril Davies, Spencer Davis, Alexis Korner - Blues Incorporated, John Mayall’s Blues Breakers
    &lt;ul&gt;
      &lt;li&gt;Their backup singers included members of: Fleetwood Mac, Cream, Eric Clapton, Led Zeppelin, and The Rolling Stones&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-rolling-stones&quot;&gt;The Rolling Stones&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;During this Blues revival, The Rolling Stones were put together by Brian Jones to play the music he loved (American Rhythms and Blues)&lt;/li&gt;
  &lt;li&gt;July 1962 - First gig at &lt;strong&gt;Marquee Club&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;April 1963 - &lt;strong&gt;Andrew Loog Oldham&lt;/strong&gt; became The Rolling Stone’s manager
    &lt;ul&gt;
      &lt;li&gt;He created the band’s “Bad Boy” image (anti-Beatles): rude, short-tempered attitude&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;1963-1964 - Band started to record singles (American R&amp;amp;B)
    &lt;ul&gt;
      &lt;li&gt;all singles were initially covers of Chuck Berry, Buddy Holly, and Willie Dixon&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;I Wanna Be Your Man&lt;/strong&gt;, November 1963 (written by Lennon/McCartney)
    &lt;ul&gt;
      &lt;li&gt;The Rolling Stones were signed to DECA Records through the help of The Beatles&lt;/li&gt;
      &lt;li&gt;Oldham called Lennon and McCartney to come show them how to write songs&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;England’s Newest Hit Makers&lt;/strong&gt;, May 1964
    &lt;ul&gt;
      &lt;li&gt;Mostly Blues covers&lt;/li&gt;
      &lt;li&gt;Brian Jones was the leader&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;King Bee&lt;/strong&gt;, April 1964
    &lt;ul&gt;
      &lt;li&gt;12-bar Blues form (AAB)&lt;/li&gt;
      &lt;li&gt;Cover of song by Slim Harpo (1957)&lt;/li&gt;
      &lt;li&gt;What’s remarkable:
        &lt;ul&gt;
          &lt;li&gt;Played by white teenagers from England, but the quality of the performance was very similar to the original track&lt;/li&gt;
          &lt;li&gt;Jagger’s vocal performace - Where is his accent?
            &lt;ul&gt;
              &lt;li&gt;He nailed the American accent&lt;/li&gt;
              &lt;li&gt;One of the keys to the British Blues Revival; They weren’t just fans of Blues, they studied it; level of authenticity they captured is a testament&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Adult relationships in the lyrics&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;(I Can’t Get No) Satisfaction&lt;/strong&gt;, February 1965 (written by Jagger/Richards)
    &lt;ul&gt;
      &lt;li&gt;See textbook for listening guide&lt;/li&gt;
      &lt;li&gt;Keith Richards took McCartney’s advice and kept recording system right next to his bed so if anything ever came up he would be ready to record -&amp;gt; How he came up with Satisfaction&lt;/li&gt;
      &lt;li&gt;First US Number One pop&lt;/li&gt;
      &lt;li&gt;Different visual experience from The Beatles&lt;/li&gt;
      &lt;li&gt;Mick Jagger has a dangerous/darker edge to him. Jagger doesn’t hold any instrument on the stage, unlike The Beatles, so he has a mobile personality on stage and he can move around freely; a mobile, energetic, and intense presentation&lt;/li&gt;
      &lt;li&gt;Brian Jones was unhappy with the direction of the band was going in; Was pushed back after the Satisfaction song&lt;/li&gt;
      &lt;li&gt;This was when Jagger and Richards became the leaders&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Their Music Style&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The Rolling Stones had a very &lt;strong&gt;loose/relaxed sound&lt;/strong&gt; - there was improvisation, unlike The Beatles, where each note was thought about and structured for a reason&lt;/li&gt;
  &lt;li&gt;The Beatles were rooted in the TPA era, whereas The Rolling Stones were rooted in the Blues. The Beatles = Orchestra, very precise, very well-thought through; The Rolling Stones = groove, intensity, power, real emotion&lt;/li&gt;
  &lt;li&gt;This is a band that is used to working out songs overtime and allowing them to change over time&lt;/li&gt;
  &lt;li&gt;They would roughly work out a song, and go out and start playing it
    &lt;ul&gt;
      &lt;li&gt;The soung would be recognizable every time they played it, but it would be different&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Room for spontaneous changeability in small things&lt;/li&gt;
  &lt;li&gt;They were more interested in &lt;strong&gt;capturing the energy of a moment/performance&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Process-oriented&lt;/strong&gt; (more interested in the journey, rather than the destination)
    &lt;ul&gt;
      &lt;li&gt;Before the Golden Age, African-Americans: Process-oriented; White culture: Object-oriented or product-oriented&lt;/li&gt;
      &lt;li&gt;Post-Golden Age: skin colour doesn’t matter as much, bands can choose whatever they want&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Let’s Spend the Night Together&lt;/strong&gt;, 1967
    &lt;ul&gt;
      &lt;li&gt;Verse/Chorus&lt;/li&gt;
      &lt;li&gt;Brian Jones had been drifting away from the band after Richards and Jagger started to take control; Also becoming addicted to drugs and alcohol&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;1969 - The Stone went to a tour for several months in the US
    &lt;ul&gt;
      &lt;li&gt;Brian Jones had visa problems due to his drug charges in the US&lt;/li&gt;
      &lt;li&gt;Instead of cancelling the tour, the group went to with the tour without Jones&lt;/li&gt;
      &lt;li&gt;Jones announced that he would be leaving the band; he died 5 weeks after in a swimming pool&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;other-important-bands-of-the-british-blues-revival&quot;&gt;Other Important Bands of the British Blues Revival&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;The Yardbirds&lt;/strong&gt; (Blues Influence)
    &lt;ul&gt;
      &lt;li&gt;A series of remarkable guitar players went through their ranks
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;Eric Clapton&lt;/strong&gt;
            &lt;ul&gt;
              &lt;li&gt;Guitar player&lt;/li&gt;
              &lt;li&gt;Blues purist; Similar to Jones of The Rolling Stones; The Yardbirds wanted to write originals and songs written by professional songwriters&lt;/li&gt;
              &lt;li&gt;Clapton was unhappy with the direction, like Brian Jones, especially after their first hit, &lt;strong&gt;For Your Love&lt;/strong&gt; (1965) (original song was recorded with studio recordings)&lt;/li&gt;
              &lt;li&gt;Left The Yardbirds shortly after the first hit&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Jeff Beck&lt;/strong&gt;
            &lt;ul&gt;
              &lt;li&gt;Guitar player; Replaced Clapton&lt;/li&gt;
              &lt;li&gt;God of guitar players (“A musicians’ musician”), very innovative, but has stage fright
                &lt;ul&gt;
                  &lt;li&gt;Used to deal with it by getting drunk, which made him unreliable&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Jimmy Page&lt;/strong&gt;
            &lt;ul&gt;
              &lt;li&gt;Studio guitarist&lt;/li&gt;
              &lt;li&gt;Came in 1969, in case Beck became unreliable so he could fill in&lt;/li&gt;
              &lt;li&gt;Became lead guitarist within a year&lt;/li&gt;
              &lt;li&gt;Disappointed when the band wanted to call it quits in 1968, because he had given up his lucrative studio career for this band&lt;/li&gt;
              &lt;li&gt;The band gave Page the tour they had booked in Scandinavia, and Page formed a new band The New Yardbirds. The tour was a tremendous success, and when they came back they changed their name to &lt;strong&gt;Led Zeppelin&lt;/strong&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;The Who&lt;/strong&gt; (The Mods/Art Influence) The Modernists = The Mods
    &lt;ul&gt;
      &lt;li&gt;Also considered parts of the British Blues Revival&lt;/li&gt;
      &lt;li&gt;Described as world’s first punk band&lt;/li&gt;
      &lt;li&gt;Focus on albums&lt;/li&gt;
      &lt;li&gt;Avant-garde cutting-edge art&lt;/li&gt;
      &lt;li&gt;One of the first bands consciously adapting various fields of art to their music and their appearances&lt;/li&gt;
      &lt;li&gt;They never had a strong Blues sound&lt;/li&gt;
      &lt;li&gt;The first group to create a full song of &lt;strong&gt;Rock Opera&lt;/strong&gt; (a work of rock music that presents a storyline told over multiple parts, songs, or sections)
        &lt;ul&gt;
          &lt;li&gt;“Tommy”, 1969&lt;/li&gt;
          &lt;li&gt;“Quadrophenia”, 1973&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;At the time (and much of the career) phenomenally loud band
        &lt;ul&gt;
          &lt;li&gt;Played with more volume and aggression than any other band of their era&lt;/li&gt;
          &lt;li&gt;Part of it due to the drummer, Keith Moon&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Pete Townshend&lt;/strong&gt; (songwriter) influenced the direction of the band; He was bringing in things that was ahead of their time
        &lt;ul&gt;
          &lt;li&gt;Drug influences (as early as 1965)&lt;/li&gt;
          &lt;li&gt;Political issues&lt;/li&gt;
          &lt;li&gt;Addressing the gap between parents and their children, the fact that the new generation was looking athe world in a very different way&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Townshend brought all of them into songs&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;My Generation&lt;/strong&gt;, 1965
        &lt;ul&gt;
          &lt;li&gt;Had one the first rock bass solos&lt;/li&gt;
          &lt;li&gt;About the generational gap&lt;/li&gt;
          &lt;li&gt;Provocative lines: “Hope I die before I get old”, this would be prominent in 10 years, when Punk came about&lt;/li&gt;
          &lt;li&gt;Introduced &lt;strong&gt;stuttering&lt;/strong&gt;
            &lt;ul&gt;
              &lt;li&gt;The Who, while still playing at clubs in London, became very popular with a subculture called &lt;strong&gt;The Mods (The Modernists)&lt;/strong&gt;&lt;/li&gt;
              &lt;li&gt;The Mods were the enemies of the &lt;strong&gt;Rockers&lt;/strong&gt; (The Beatles’ first image)&lt;/li&gt;
              &lt;li&gt;The Mods were sophisticated, well-dressed, wore sharp suits, Vespa Scooters (defining feature) with lots of mirrors and lights&lt;/li&gt;
              &lt;li&gt;The Mods loved dancing and taking amphetamines; the drug usage causes you to start thinking faster than you can speak, and that causes &lt;strong&gt;stuttering&lt;/strong&gt; (a sign of amphetamine use), which was what Pete Townshend was referring to&lt;/li&gt;
              &lt;li&gt;Everyone in that generation understood the reference&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;The Who was also famous for smashing guitars on stage at the end of major gigs
        &lt;ul&gt;
          &lt;li&gt;Why? Pete was experimenting with “what is a performance?” -&amp;gt; The art world in the 1960s was very experimental. Some ideas:
            &lt;ul&gt;
              &lt;li&gt;Real art happens in the moment and real art is something that your experience, and it won’t happen again&lt;/li&gt;
              &lt;li&gt;A “happenin’” was an artistic event; art isn’t a picture that hangs on the wall, art is something we live in, and it surrounds us&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Pete Townshend: Instruments are just tools, and what’s important is the experience
            &lt;ul&gt;
              &lt;li&gt;Similar to breaking glasses after a toast: that vow or promise you just toasted to cannot be alterted or taken back&lt;/li&gt;
              &lt;li&gt;The concert you just saw will never be seen again, because the instruments that made it possible are now destroyed&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;soul-music&quot;&gt;Soul Music&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Development connected to the Civil Rights movement and the development of African-American identity.&lt;/li&gt;
  &lt;li&gt;Late 1950s into the early 1960s - growing anticipation of civil rights.&lt;/li&gt;
  &lt;li&gt;Rejection of Blues as the sound of the past, rural south, and slavery
    &lt;ul&gt;
      &lt;li&gt;R&amp;amp;B music was too rough, and it didn’t have class anymore that seemed like it was “worked out”. African-Americans were starting to find equality&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Pop music within black culture is profoundly linked to the idea of African American identity and the Civil Rights movement
    &lt;ul&gt;
      &lt;li&gt;Soul music is often a reflection of the success and then growing failure of the movement&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;New sound of the urban - Soul Music&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Soul Music is a fusion of 3 elements:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Vocal style comes from Gospel&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Gospel music, and this vocal style were thought be definitively African-American&lt;/li&gt;
      &lt;li&gt;Soul music needed to be optimistic and yet also rooted strongly Black Culture; They wanted to look at a brighter/urban future&lt;/li&gt;
      &lt;li&gt;So Soul artists turned to Gospel music (Ray Charles in particular) to provide optimistic black music&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Rhythm and back beat of R&amp;amp;B&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Strong back beat, because Soul music is supposed to be meant for dancing and celebrations (hency why the groove is so important)&lt;/li&gt;
      &lt;li&gt;They took the beats of R&amp;amp;B and sped them up&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Arrangements and lyric styles from TPA&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;More playful, less sexual&lt;/li&gt;
      &lt;li&gt;Light pop lyric structure&lt;/li&gt;
      &lt;li&gt;Soul music was reflective of the change that was becoming of African-Americans&lt;/li&gt;
      &lt;li&gt;Blacks were now urban, lower/middle-class people&lt;/li&gt;
      &lt;li&gt;Because of this, they thought they “outgrew” R&amp;amp;B&lt;/li&gt;
      &lt;li&gt;So they took from TPA - the instrumental arrangements are what we would associate with TPA&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;important-locations-for-soul-music&quot;&gt;Important Locations for Soul Music&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Motown - Detroit = Hitsville U.S.A.&lt;/li&gt;
  &lt;li&gt;Stax - Memphis = Soulsville U.S.A.&lt;/li&gt;
  &lt;li&gt;Fame - Muscle Shoals, Alabama
    &lt;ul&gt;
      &lt;li&gt;FAME = Florence Alabama Music Enterprises&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;motown&quot;&gt;Motown&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Founded by Berry Gordy&lt;/li&gt;
  &lt;li&gt;Detroit was a city made by the automotive empire, hence the name “MOtown”&lt;/li&gt;
  &lt;li&gt;First important label owned by an African-American
    &lt;ul&gt;
      &lt;li&gt;Held up as a success story of the Civil Rights movement&lt;/li&gt;
      &lt;li&gt;At the time, the most successful company in the US held by an African-American; An example of extrepreneurship of African-Americans&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Starts in 1959 - Based on Gordy’s experience in automotive plants
    &lt;ul&gt;
      &lt;li&gt;Gordy applied assembly line to the music industry and to Black artists&lt;/li&gt;
      &lt;li&gt;This had never been done where primarily Black culture was involved (only done for TPA/Major white labels)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Assembly Line - Everything under one roof
    &lt;ul&gt;
      &lt;li&gt;Song writers: Holland/Dozier/Holland, Smokey Robinson&lt;/li&gt;
      &lt;li&gt;Maxine Powell: Finishing school (that teaches the musicians how to carry themselves in public), studied how Motown performers performed, how to act, walk, and talk&lt;/li&gt;
      &lt;li&gt;Cholly Atkins: Choreographer; Same choreographer -&amp;gt; consistency&lt;/li&gt;
      &lt;li&gt;The Funk Brothers: House band&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Result is absolute consistency of product&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;You’d Better Shop Around&lt;/strong&gt;, 1960 - Smokey and the Miracles
    &lt;ul&gt;
      &lt;li&gt;Soul music maintained the image of individual artist, not bands&lt;/li&gt;
      &lt;li&gt;Polished, restrained presentation - sophistication&lt;/li&gt;
      &lt;li&gt;A great example of the visual presentation of a Motown artist: full suits, neatly groomed
        &lt;ul&gt;
          &lt;li&gt;Positioning themselves apart from R&amp;amp;B artists; Motown looked formal and smooth&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Barry Gordy was trying to target white audiences
        &lt;ul&gt;
          &lt;li&gt;Reason why his artists appeared safe, restrained, and controlled&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;You don’t see the band
        &lt;ul&gt;
          &lt;li&gt;This has gone through the TPA style of prodiction (Division-Of-Labour)&lt;/li&gt;
          &lt;li&gt;The singers probably didn’t write their own songs&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;The singers were in front and centre&lt;/li&gt;
      &lt;li&gt;Smokey was always projecting outwards
        &lt;ul&gt;
          &lt;li&gt;They were singing to the audience&lt;/li&gt;
          &lt;li&gt;The audience was always in the constant in the mind of a Motown performer&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Major Motown Bands&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;The Supremes&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Members:
        &lt;ul&gt;
          &lt;li&gt;Diana Ross, not the best singer, but more constraint, controlled voice&lt;/li&gt;
          &lt;li&gt;Mary Wilson, very talented singer, more powerful, like R&amp;amp;B&lt;/li&gt;
          &lt;li&gt;Diana Ross was chosen to the lead singer&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Visually presented in a way associated with the white upper-class&lt;/li&gt;
      &lt;li&gt;A vocal group (girl group)&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Stop in the Name of Love&lt;/strong&gt;, 1965
        &lt;ul&gt;
          &lt;li&gt;Generally in Motown, mostly number 2 and 3 elements in Soul, however number 1 (Gospel) was lacking&lt;/li&gt;
          &lt;li&gt;Piano and electric organ, organsliding at the beginning of song&lt;/li&gt;
          &lt;li&gt;Tambourine very common in Soul, why?
            &lt;ul&gt;
              &lt;li&gt;Expensive microphone is able to capture high frequencies, earlier R&amp;amp;B was “dull”. not a lot of high-end sound due to inexpensive production. Gordy wanted to put instruments with high frequencies -&amp;gt; Tambourine&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Sound of Motown:
            &lt;ul&gt;
              &lt;li&gt;Lyrics:
                &lt;ul&gt;
                  &lt;li&gt;About idealized romance&lt;/li&gt;
                  &lt;li&gt;Adult relationship&lt;/li&gt;
                  &lt;li&gt;Much more in-keeping with the lyrics of TPA/Brill Building/Rock n Roll&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Dance:
                &lt;ul&gt;
                  &lt;li&gt;A song meant for dancing&lt;/li&gt;
                  &lt;li&gt;Definitive groove&lt;/li&gt;
                  &lt;li&gt;Very easy to feel the beat, thus dance&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Vibraphone (has longer duration than xylophone, same family)
                &lt;ul&gt;
                  &lt;li&gt;Found in Jazz of the time&lt;/li&gt;
                  &lt;li&gt;Jazz was the shady side of urban culture Pre-WWII&lt;/li&gt;
                  &lt;li&gt;But by the 60s, it was becoming one of America’s greatest art forms; Respectable&lt;/li&gt;
                  &lt;li&gt;Including vibraphone means soul is urban sophistication&lt;/li&gt;
                  &lt;li&gt;Gave us two things:
                    &lt;ul&gt;
                      &lt;li&gt;&lt;strong&gt;An overtone of Jazz&lt;/strong&gt;
                        &lt;ul&gt;
                          &lt;li&gt;A sense of urban sophistication (important to soul music, a modern Black identity)&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;Artistic merit
                        &lt;ul&gt;
                          &lt;li&gt;Because of linking itself to Jazz, it gets merit and respect&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Motown’s Sound and Production Practice&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Top-down approach, and Berry Gordy had the final say of anything that came out of Motown&lt;/li&gt;
  &lt;li&gt;Pretty much the only difference between songs from Motown was the singer&lt;/li&gt;
  &lt;li&gt;Because of this method, Berry came under a lot of flak from the Black community itself; The community felt he was “whitening” Motown’s artists&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;atlantic-records---jerry-wexler1917-2008&quot;&gt;Atlantic Records - Jerry Wexler(1917-2008)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Only major record label willing to sign Black artists&lt;/li&gt;
  &lt;li&gt;Jerry Wexler(1917-2008), before Atlantic, he was a writer for the Billboard magazine&lt;/li&gt;
  &lt;li&gt;He was the person who came up with the name “Rhythm and Blues”&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;stax-records-memphis-soulsville-usa&quot;&gt;STAX Records, Memphis, “Soulsville USA”&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Formed in 1959 - Satellite Records(Stax, 1961)
    &lt;ul&gt;
      &lt;li&gt;Named after Jim Stewart and Estelle Axton&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;House Band: Booker T and the M.G.s&lt;/li&gt;
  &lt;li&gt;Biggest Difference between Motown and STAX
    &lt;ul&gt;
      &lt;li&gt;Integrated house band
        &lt;ul&gt;
          &lt;li&gt;unusual (sometimes the members had to stay in separate hotels)&lt;/li&gt;
          &lt;li&gt;In the 1960s, there were still almost 20 states where it was illegal to marry a person of another race&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Approach to Recording&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Not all that concerned with appearances
    &lt;ul&gt;
      &lt;li&gt;Straight off the bat, having an integrated band meant that appearances didn’t matter to them&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;All the musicians went into the studio at the same time, and everyone played together - single tracked, maybe recorded 3 or 4 takes and voted on the best one
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Unlike Motown&lt;/strong&gt;, who multiracked and kept recording and working until it was perfect&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Focus on energy&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Even if there was a mistake on the record, it would still be released if everyone thought they had the best energy&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;STAX Soul&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Try a Little Tenderness&lt;/strong&gt;, Otis Redding, 1966
    &lt;ul&gt;
      &lt;li&gt;Not a newly composed song; Written in the 1920s&lt;/li&gt;
      &lt;li&gt;A TPA hit for many artists (notable version by Bing Crosby in 1933)&lt;/li&gt;
      &lt;li&gt;AABA form&lt;/li&gt;
      &lt;li&gt;What we see (compared to Motown)
        &lt;ul&gt;
          &lt;li&gt;The Band
            &lt;ul&gt;
              &lt;li&gt;Seen as an important part of the process even if the artist was a solo artist like Otis&lt;/li&gt;
              &lt;li&gt;As opposed to Motown&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;No/Less Choreography
            &lt;ul&gt;
              &lt;li&gt;Far less worked out choreography, if any&lt;/li&gt;
              &lt;li&gt;More space for interpretation of a performance&lt;/li&gt;
              &lt;li&gt;More freedom, as opposed to consistency of Motown&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Projection outwards is not as important
            &lt;ul&gt;
              &lt;li&gt;We saw Otis sometimes closing his eyes; This might let him become more energetic, more powerful, for his performance&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Stax artists do something Motown artists never do: &lt;strong&gt;sweat&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Motown artists are cool as cucumbers&lt;/li&gt;
  &lt;li&gt;Stax artists sweat, because of the intensity of the performance&lt;/li&gt;
  &lt;li&gt;At Stax, the Gospel influence is the norm for vocal performance (unlike Motown - we didn’t see the Gospel aspect in the Supreme’s song)&lt;/li&gt;
  &lt;li&gt;Otis was known for his cathartic performance - unrestrained energy&lt;/li&gt;
  &lt;li&gt;In comparison to Motown:
    &lt;ul&gt;
      &lt;li&gt;Stax has a lot more room for improvisation, for energy (catharsis)&lt;/li&gt;
      &lt;li&gt;Far less restraints on the artists&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Motown artists make consistent eye contact with you&lt;/li&gt;
  &lt;li&gt;White audiences target Motown artists&lt;/li&gt;
  &lt;li&gt;Motown: product-oriented, STAX: process-oriented&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Sam and Dave&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;These Soul brothers are a good example of the word “Soul” becoming synonymous with Black identity (“Soul” is now a slang - meaning Black)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Soul Man&lt;/strong&gt;, Sam and Dave, 1967
    &lt;ul&gt;
      &lt;li&gt;Has a mistake in it
        &lt;ul&gt;
          &lt;li&gt;Horn players missed the first shot in the second verse&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Energy-focused, process-oriented&lt;/li&gt;
      &lt;li&gt;Much less concerned with right notes as opposed to energy&lt;/li&gt;
      &lt;li&gt;Still the optimistic sound&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;july-7-2016---lecture-10&quot;&gt;July 7, 2016 - Lecture 10&lt;/h2&gt;

&lt;h3 id=&quot;fame-studio&quot;&gt;FAME Studio&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;1966 - Atlantic (Jerry Wexler) began working at FAME&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Aretha Franklin&lt;/strong&gt; is the model for modern R&amp;amp;B female vocalists
    &lt;ul&gt;
      &lt;li&gt;One of the most important things of the time if you were a woman trying to make it in the music industry:
        &lt;ul&gt;
          &lt;li&gt;The experience you have growing up in a Black church&lt;/li&gt;
          &lt;li&gt;If you did learn to sing in the gospel church, then you have a higher level of credibility wihin the pop music community&lt;/li&gt;
          &lt;li&gt;Aretha had this connection
            &lt;ul&gt;
              &lt;li&gt;Her first recordings were religious Gospel songs&lt;/li&gt;
              &lt;li&gt;Her father was a pastor&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;By the time she was in her 20s, she moved to a different sound
        &lt;ul&gt;
          &lt;li&gt;Originally was presented like The Supremes, but didn’t really work&lt;/li&gt;
          &lt;li&gt;It wasn’t until Jerry Wexler (from Atlantic Records) went back to the Gospel style and just let her be&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Respect&lt;/strong&gt;, 1967
        &lt;ul&gt;
          &lt;li&gt;Originally written by Otis Redding&lt;/li&gt;
          &lt;li&gt;Aretha Franklin’s first recording after returning to Gospel&lt;/li&gt;
          &lt;li&gt;Unlike the original song, Aretha was singing about the civil rights movement
            &lt;ul&gt;
              &lt;li&gt;It was almost a song of protest&lt;/li&gt;
              &lt;li&gt;She was asking for equality; A feminist anthem&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Beginning of a more militant sound&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-civil-rights-movement-mid-to-late-1960s&quot;&gt;The Civil Rights Movement (Mid to Late 1960s)&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1965-1967: Inner city riots&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The frustration over the CRM not making any progress began to boil over&lt;/li&gt;
  &lt;li&gt;During these years, every US city with a significant Black population experienced race riots
    &lt;ul&gt;
      &lt;li&gt;Summer of 1967 = “The Long Hot Summer”&lt;/li&gt;
      &lt;li&gt;Most well-known riot: “Riot of Detroit”
        &lt;ul&gt;
          &lt;li&gt;Dozens dead, hundreds injured, thousands arrested&lt;/li&gt;
          &lt;li&gt;19 square miles of Downtown Detroit had been reduced to rubble&lt;/li&gt;
          &lt;li&gt;The fires were so bad that Detroit authorities started to call Windsor, ON for help&lt;/li&gt;
          &lt;li&gt;By the end, 7,000 Army troops were patrolling the streets of Detroit&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;A sense of Black identity began to reassert itself, particularly in the following spring&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;April 4, 1968: Martin Luther King assassinated&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MLK: The leader of the (peaceful) Civil Rights Movement&lt;/li&gt;
  &lt;li&gt;A small core of African-Americans who had always wanted to take a more militant stand gained much more power -&amp;gt; The Black Panther Party. Ideologies:
    &lt;ul&gt;
      &lt;li&gt;No action was off the table if it was required to achieve equality&lt;/li&gt;
      &lt;li&gt;Violence would not be avoided if it was the only way to achieve equality&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Most of the African-American community were not as swayed as the Black Panthers, but they did retrench and wanted to draw a wall between Whites and set their identity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The Reafricanization of Black Culture&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“Back to Africa” speech by Marcus Garvey - Black Star Line, 1919&lt;/li&gt;
  &lt;li&gt;Their names began to chnage: dropping their slave names, and taking on their African names (e.g. Muhammad Ali)&lt;/li&gt;
  &lt;li&gt;Fashion changes: overall style changed&lt;/li&gt;
  &lt;li&gt;Food&lt;/li&gt;
  &lt;li&gt;African-Americans stopped straightening their hair -&amp;gt; The Afro&lt;/li&gt;
  &lt;li&gt;Most importantly, music changed
    &lt;ul&gt;
      &lt;li&gt;Soul music no longer went far enough, need to change&lt;/li&gt;
      &lt;li&gt;James Brown developed Funk&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;funk-and-james-brown&quot;&gt;Funk and James Brown&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;James Brown&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Godfather of Soul&lt;/li&gt;
  &lt;li&gt;Soul Brother #1&lt;/li&gt;
  &lt;li&gt;By 1960, massive star in the US&lt;/li&gt;
  &lt;li&gt;First hit: &lt;strong&gt;“Please Please Please”&lt;/strong&gt;, 1956&lt;/li&gt;
  &lt;li&gt;1963 - Recorded a live album &lt;strong&gt;“Live at the Apollo”&lt;/strong&gt; (1963)
    &lt;ul&gt;
      &lt;li&gt;An unusual album (singles were still major at the time)&lt;/li&gt;
      &lt;li&gt;Arguably the first album by an African-American to sell 1 million copies&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;1965 - &lt;strong&gt;“Papa’s Got a Brand New Bag”&lt;/strong&gt; - Crossover hit
    &lt;ul&gt;
      &lt;li&gt;Not just a Black artist anymore&lt;/li&gt;
      &lt;li&gt;He diversified his audience&lt;/li&gt;
      &lt;li&gt;This started his string of crossover hits, which all followed the same pattern every time&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;“I Feel Good”&lt;/strong&gt;, 1965
    &lt;ul&gt;
      &lt;li&gt;12 bar Blues&lt;/li&gt;
      &lt;li&gt;An example of Soul music
        &lt;ul&gt;
          &lt;li&gt;It doesn’t have the elaborate arrangements like Motown, but we hear simple lyrical ideas&lt;/li&gt;
          &lt;li&gt;Really strong influence of Gospel music on his vocals&lt;/li&gt;
          &lt;li&gt;Optimistic music: happy to be alive&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;AABA form&lt;/li&gt;
      &lt;li&gt;Crossover hit&lt;/li&gt;
      &lt;li&gt;“Black folks like the Blues, White folks a little something different in the middle”&lt;/li&gt;
      &lt;li&gt;He knew exactly what he was doing, and he was crafting these songs deliberately
        &lt;ul&gt;
          &lt;li&gt;12 bar Blues to bring in the Black audiences&lt;/li&gt;
          &lt;li&gt;AABA to bring in the Whites&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This was the early 1960s. He moved from Soul into Funk.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Single-handedly changed music by coming up with a new style, Funk&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Say It Loud (I’m Black and I’m Proud)&lt;/strong&gt;, 1968&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Get Up (I Feel Like Being a Sex Machine)&lt;/strong&gt;, 1970
    &lt;ul&gt;
      &lt;li&gt;Within the first two minutes, not a single chord change&lt;/li&gt;
      &lt;li&gt;Changes from Soul to Funk:
        &lt;ul&gt;
          &lt;li&gt;Chords are unimportant; James de-privileged Harmony
            &lt;ul&gt;
              &lt;li&gt;He believed that chords are not important in the music of West Africa, so they were no longer important in what James Brown did&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;James believed worked out melodies are not important
            &lt;ul&gt;
              &lt;li&gt;He improvised melodies; James de-privileged melodies&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Emphasis on Rhythm
            &lt;ul&gt;
              &lt;li&gt;Articulation of it is key&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Interlocking Groove - Based on African Drum Groups&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;James was envisioning his group as a West-African drum ensemble
            &lt;ul&gt;
              &lt;li&gt;They were working on assumptions (simplified stereotypes)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Concepts: Drum group composed of a master drummer and a circle of those who are studying him
            &lt;ul&gt;
              &lt;li&gt;The master drummer start the piece, and directs the change in structure&lt;/li&gt;
              &lt;li&gt;The drummer does not order the circle, he asks them (everyone has a say)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Sense of community
            &lt;ul&gt;
              &lt;li&gt;He asks to count it off&lt;/li&gt;
              &lt;li&gt;He asks to go to the bridge&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;So now everyone in the drum ensemble gets a simple part to play over and over again&lt;/li&gt;
          &lt;li&gt;When they interlock, they create something greater = an interlocking groove&lt;/li&gt;
          &lt;li&gt;The summation of all the drum parts&lt;/li&gt;
          &lt;li&gt;It repeats over and over again, not based on bars, but small sections that repeat over and over again
            &lt;ul&gt;
              &lt;li&gt;Riff-based&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Cyclical - pleasure in repetition, not what you get in an AABA form when you get the melody and its contrast&lt;/li&gt;
      &lt;li&gt;Open-ended forms - cyclical vs. linear&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Black audiences loved him, but he lost almost all of his white audiences overnight, as they did not understand this music genre&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;folk-rock-bob-dylan-goes-electric&quot;&gt;Folk Rock (Bob Dylan Goes Electric)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Influenced by The Beatles, Bob Dylan went electric at the Newport Folk Festival in 1965
    &lt;ul&gt;
      &lt;li&gt;Started an uproar, not because of the fact that he was playing electric, but the electric guitar itself&lt;/li&gt;
      &lt;li&gt;The electric guitar represents Rock and Roll and the music industry
        &lt;ul&gt;
          &lt;li&gt;Everyone wanted to ignore that Folk is a part of the industry&lt;/li&gt;
          &lt;li&gt;Bob Dylan brought the industry back into folk music&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Within 6 months, Bob Dylan was more popular than ever before and had created a new genre - Folk Rock
    &lt;ul&gt;
      &lt;li&gt;Taking the musical style of Rock and fusing it with the lyrical content of Folk&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-counter-culture&quot;&gt;The Counter-culture&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;The Beats&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;One of the defining things about Beat culture:
    &lt;ul&gt;
      &lt;li&gt;First group that dared to question that the government was doing what it was doing for the betterment of society&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Constanly hunted by the government in an attempt to discredit them&lt;/li&gt;
  &lt;li&gt;Name, 3 sources:
    &lt;ul&gt;
      &lt;li&gt;“Beaten Down”&lt;/li&gt;
      &lt;li&gt;Jazz Beat
        &lt;ul&gt;
          &lt;li&gt;The style and stereotype of the time&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Beatitude
        &lt;ul&gt;
          &lt;li&gt;Spiritual beliefs/A higher sense of being&lt;/li&gt;
          &lt;li&gt;Main idea: We are blinded to what the real world looks like by materialism. We no longer see the world the way it really is&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Who made up “The Beats”?
    &lt;ul&gt;
      &lt;li&gt;Baby Boomers&lt;/li&gt;
      &lt;li&gt;Collectively known as Hippies&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-counter-culture-drugs-music-and-culture&quot;&gt;The Counter-culture: Drugs, Music, and Culture&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Two main centres:
    &lt;ul&gt;
      &lt;li&gt;Greenwich Village (NYC, East Coast)&lt;/li&gt;
      &lt;li&gt;Haight-Ashbury (SF, West Coast)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Homology of Sensory Stimulation (psychedelic)
    &lt;ul&gt;
      &lt;li&gt;You look at something and see a bunch of different elements&lt;/li&gt;
      &lt;li&gt;But then you notice that one distinct thing ties them/links them together - that’s homology&lt;/li&gt;
      &lt;li&gt;Idea: the more you get your brain going, the more you expand your consciousness&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Highly valued hings that trigger your psyche, or brain
    &lt;ul&gt;
      &lt;li&gt;So almost everything in counter-culture is designed to trigger these “higher” thoughts&lt;/li&gt;
      &lt;li&gt;Example: poster art, clothing (e.g. tye dye), drugs (“drop acids, not bombs”)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Music of Counter-culture
    &lt;ul&gt;
      &lt;li&gt;Loud
        &lt;ul&gt;
          &lt;li&gt;Sensory stimulation: music is so loud you physically feel it&lt;/li&gt;
          &lt;li&gt;You now get two sensory stimulations tied together (more impactful) rather than just one&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Longer or unusual song forms
        &lt;ul&gt;
          &lt;li&gt;Catch the brain off guard&lt;/li&gt;
          &lt;li&gt;Not 12 Bar Blues or AABA, because then you wouldn’t be caught off guard&lt;/li&gt;
          &lt;li&gt;Longer forms because experiences take a while to unfold&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Jamming: Collective improvisation
        &lt;ul&gt;
          &lt;li&gt;At the heart of the music of the counter-culture&lt;/li&gt;
          &lt;li&gt;There is no way you know what’s going to happen if they are making it up on the spot&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Lighting Shows
        &lt;ul&gt;
          &lt;li&gt;Virtually invented this idea&lt;/li&gt;
          &lt;li&gt;Psychedelic: auditory and tactile sense + visual stimulation&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;july-14-2016---lecture-11&quot;&gt;July 14, 2016 - Lecture 11&lt;/h2&gt;

&lt;p&gt;Summary: Finishing up with the 60s, then looking at fan support and money becoming the centre of the 70s, the rise of hard rock and heavy metal, and the rise of “stadium” rock&lt;/p&gt;

&lt;p&gt;The leading edge of baby boomers was changing the world once more. Majority of them have followed in their parents’ footsteps, and have gone to college. There is a percentage of Baby Boomers looking for an alternative way to go -&amp;gt; &lt;strong&gt;Counter-culture&lt;/strong&gt; (the idea that we are blinded into the reality of the world by materialism and politics).&lt;/p&gt;

&lt;p&gt;A lot of people trusted authority until then - conspiracy theorism started in the 1960s a lot with the assassination of JFK, psychedelic experience (achieving higher level of consciousness and idea). In terms of music, psychedelic = lighting shows, long waveforms, etc. Thinking there’s some other “reality”. Largely a symbolic idea, but spawned the counter-culture movement.&lt;/p&gt;

&lt;h2 id=&quot;the-grateful-dead&quot;&gt;The Grateful Dead&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Exemplifies West Coast counter-culture more than anyone&lt;/li&gt;
  &lt;li&gt;Thinkers, not doers; They think about how the world could be better&lt;/li&gt;
  &lt;li&gt;Very open, gentle fellows&lt;/li&gt;
  &lt;li&gt;Also inspired by Folk Rock, not showy, never locked anyone into playing a particular part&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Truckin’&lt;/strong&gt;, The Grateful Dead, 1970
    &lt;ul&gt;
      &lt;li&gt;Influenced by Folk Rock&lt;/li&gt;
      &lt;li&gt;Great example of both Jamming and how loose the band was&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The beginning of each song was planned, and then they just took off
    &lt;ul&gt;
      &lt;li&gt;In a live context, when the song would normally fade out they just kept on jamming
        &lt;ul&gt;
          &lt;li&gt;Jerry Garcia (Lead Vocals) starts yelling&lt;/li&gt;
          &lt;li&gt;Guitar solo (forever)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Every night the concert and content was different&lt;/li&gt;
  &lt;li&gt;The followers were known as “Dead Heads”, cult&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More aggressive sound develops, very drug-focused, less obvious folk image, more rehearsed, planned. Combining this more aggressive sound with the drug culture comes to &lt;strong&gt;Acid Rock&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Acid Rock&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Louder, more aggressive, but still focused on the ideas of the West Coast&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;White Rabbit&lt;/strong&gt;, Jefferson Airplane, 1967&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In one way, White Rabbit is not a good example of acid rock because it was a hit
    &lt;ul&gt;
      &lt;li&gt;Most acid rock, or most music to come out of the counter-culture, were not popular in the mainstream&lt;/li&gt;
      &lt;li&gt;Thus very few hits, lots of record sales, but not charted&lt;/li&gt;
      &lt;li&gt;Lots of long songs, alternative patterns, not very predictable, so not Top 40 friendly&lt;/li&gt;
      &lt;li&gt;Most of the bands weren’t even looking for Pop hits&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;White Rabbit is short (very rare in counter-culture music and acid rock)&lt;/li&gt;
  &lt;li&gt;Underlying premise of counter-culture: The world is artificial and we are being blinded by commercialism&lt;/li&gt;
  &lt;li&gt;This makes it very hard to promote commercial success in the capitalist way Top 40 tends to work&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Lyrics&lt;/strong&gt;:
    &lt;ul&gt;
      &lt;li&gt;Lots of drug use&lt;/li&gt;
      &lt;li&gt;Based off of Alice in Wonderland
        &lt;ul&gt;
          &lt;li&gt;And the amount of drug taking in it&lt;/li&gt;
          &lt;li&gt;“The world is not as we see it”&lt;/li&gt;
          &lt;li&gt;Key message from the book&lt;/li&gt;
          &lt;li&gt;Fun fact: The Matrix has many elements of the Alice in Wonderland plot (i.e. follow the white rabbit, taking pills, mirrors are doorways to other worlds)&lt;/li&gt;
          &lt;li&gt;Actually deeper than that; Part of the narrative of AiW, is the suggestion that the world we see is not all there is&lt;/li&gt;
          &lt;li&gt;The world we see is not necessarily the real world&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Form&lt;/strong&gt;:
    &lt;ul&gt;
      &lt;li&gt;Unusual, not AABA, not verse-chorus, not 12 Bar Blues&lt;/li&gt;
      &lt;li&gt;One long volume swell&lt;/li&gt;
      &lt;li&gt;Crescendo: AABCDEF form; counterculture; Crescendo: quiet -&amp;gt; loud
        &lt;ul&gt;
          &lt;li&gt;Starts quietly, spends the entire time getting louder and louder and more intense&lt;/li&gt;
          &lt;li&gt;This is representative of a drug experience, a drug rush&lt;/li&gt;
          &lt;li&gt;Ends with a huge crashing loud sound&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;This literally mimics one of the key aspects of the culture; Shows how important drug use and the experience of drugs was to this culture&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;After 1967 (Summer 1967 = Summer of Love in San Francisco)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Summer of Love: free concerts in the park/brownies for everyone&lt;/li&gt;
  &lt;li&gt;Began to dissolve, partly because of drugs
    &lt;ul&gt;
      &lt;li&gt;Where drugs go, crime follows&lt;/li&gt;
      &lt;li&gt;Drug trade and gangs spring up&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Youth culture becomes more politically active and engaged&lt;/li&gt;
  &lt;li&gt;Summer 1967: Different if you were in the inner cities: In Detroit, the “Long Hot Summer” because of the riots, burning, and demonstrations etc.&lt;/li&gt;
  &lt;li&gt;Counter-culture quickly figures out: as fascinating as its goals may be, they were changing themselves, but not the entire world. The quest for higher consciousness didn’t change anything outside the self. So to make change, Counter-culture must get more involved in mainstream culture to affect it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Youth Movements Focus: Civil Rights and The Vietnam War&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;The Civil Rights Movement&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Not quite to the extent they could have&lt;/li&gt;
      &lt;li&gt;The counter-culture is largely a movement of the white middle-class&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;The Vietnam War&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;By 1967, Vietnam has become a major shooting war (a “proxy” war)&lt;/li&gt;
      &lt;li&gt;Everyone was scared of WW3&lt;/li&gt;
      &lt;li&gt;Suddenly for the first time, USA is losing a war&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The Youth International Party (Yippies)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Jerry Rubin/Abbie Hoffman (The guy who takes Forrest Gump on stage at the anti-war rally was supposed to be Abbie Hoffman)&lt;/li&gt;
  &lt;li&gt;Still primarily white middle-class, but the awareness of civil rights means black influence&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The East Coast Counterculture music&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Music is louder, more aggressive, edgier
    &lt;ul&gt;
      &lt;li&gt;Partly due to the change in the involvement of civil protests&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Return to Blues influence -&amp;gt; Psychedelic Blues
    &lt;ul&gt;
      &lt;li&gt;Black culture finally influencing counter-culture&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Psychedelic Blues - Jimi Hendrix&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Technical virtuoso, “Guitar Hero”
    &lt;ul&gt;
      &lt;li&gt;Virtuoso: a term reserved for classical musicians&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Control of feedback
    &lt;ul&gt;
      &lt;li&gt;Taking the idea of loud volume and using it by feeding the systems wih feedback to increase volume&lt;/li&gt;
      &lt;li&gt;Hendrix realized that he could get specific tones to come out as feedback if he angled and played the guitar correctly
        &lt;ul&gt;
          &lt;li&gt;And they would last forever&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Representation of limitless power (like the organ in church)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Wah Wah Pedal
    &lt;ul&gt;
      &lt;li&gt;a type of guitar effects pedal that alters the tone of the signal to create a distinctive effect, mimicking the human voice&lt;/li&gt;
      &lt;li&gt;Have been around for a long time, but he used them like no one had ever before&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Whammy Bar (Vibrato system)&lt;/li&gt;
  &lt;li&gt;Like Robert Johnson, he didn’t invent anything, but he took existing things and used them in a way no one had ever thought could be done
    &lt;ul&gt;
      &lt;li&gt;Expanded techniques, developed the complexity far beyond anything anyone had done before&lt;/li&gt;
      &lt;li&gt;First pop musician where people started using the word “virtuoso”&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Voodoo Child (Slight Return)&lt;/strong&gt;, Jimi Hendrix, 1967
    &lt;ul&gt;
      &lt;li&gt;“Dead notes” when his hand is over the strings to mute them slightly when played&lt;/li&gt;
      &lt;li&gt;Extraordinary level of distortion, coupled with smoothness of the performance&lt;/li&gt;
      &lt;li&gt;Use of Wah pedal at the very beginning&lt;/li&gt;
      &lt;li&gt;His music became very important to soldiers in Vietnam&lt;/li&gt;
      &lt;li&gt;Tapes of Hendrix’s music became currency among soldiers&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Woodstock, NY - August 1969&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Summer: counter-culture reached its peak&lt;/li&gt;
  &lt;li&gt;A group of concert promoters decided they are going to put on a show&lt;/li&gt;
  &lt;li&gt;Became clear that the popularity of the concert was going to be so great that they would not be able to control the in-and-out, and made it free&lt;/li&gt;
  &lt;li&gt;Tremendous number of top acts agreed to appear&lt;/li&gt;
  &lt;li&gt;Held it in a farmer’s field outside of Woodstock, NY&lt;/li&gt;
  &lt;li&gt;Should have been a catastrophe. They expected about 50k people to show up, somewhere between 350k and 500k people showed up&lt;/li&gt;
  &lt;li&gt;But it was the counter-culture, so they did what they do - embraced the ideals of the counter-culture
    &lt;ul&gt;
      &lt;li&gt;When people ran out of food, people who still had some, shared&lt;/li&gt;
      &lt;li&gt;Nowhere near enough bathrooms, but people patiently waited&lt;/li&gt;
      &lt;li&gt;People looked after each other&lt;/li&gt;
      &lt;li&gt;Pouring rain on the second day -&amp;gt; People made a mud slide&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;One young man accidentally killed (feel asleep under a tractor)&lt;/li&gt;
  &lt;li&gt;Concert had been rightly criticized for performers being largely white males
    &lt;ul&gt;
      &lt;li&gt;Very few women, very few people of color&lt;/li&gt;
      &lt;li&gt;Criticism was just, but it was a remarkable success:
        &lt;ul&gt;
          &lt;li&gt;Counter-culture was providing a solid alternative to the “war-driven” society at the time&lt;/li&gt;
          &lt;li&gt;Counter-culture had put its ideas into action, and it worked&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Altamont Free Concert - December 1969&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;This was the tour the Stones were going to be on when Brian Jones was refused a visa so they fired him&lt;/li&gt;
  &lt;li&gt;Stones wanted to go to Woodstock but had other commitments; After the success, they decided they wanted to have their own one-day Woodstock fame
    &lt;ul&gt;
      &lt;li&gt;But it was December, so they had to do it somewhere south&lt;/li&gt;
      &lt;li&gt;They ended up at the Altamont Speedway in Altamont, California&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;It would have been a success, except for 2 distinct planning errors:
    &lt;ul&gt;
      &lt;li&gt;Location
        &lt;ul&gt;
          &lt;li&gt;Woodstock was on open farmland (1 field, but when people kept coming, the guy who owned the farm gave them more fields)&lt;/li&gt;
          &lt;li&gt;Altamont was in a big Nascar-like speedway, an enclosed space
            &lt;ul&gt;
              &lt;li&gt;More and more people just kept coming in with nowhere to go&lt;/li&gt;
              &lt;li&gt;By the time The Rolling Stones came on stage, there was a serious danger of audience members suffocating and rioting; Packed like sardines&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;For security, they hired Hell’s Angels Motorcycle Club and paid them with beer
        &lt;ul&gt;
          &lt;li&gt;Someone suggested that being counter-culture, being dangerous (The Rolling Stones) meant they had to do something to live up to that and make it a performance with the venue&lt;/li&gt;
          &lt;li&gt;The Hell’s Angels showed up with chains, knives, and pool cues (filled with lead)&lt;/li&gt;
          &lt;li&gt;An opening band lead singer got his face smahed by a Hell’s Angel because he tried to stop him from attacking an audience member and he got knocked out&lt;/li&gt;
          &lt;li&gt;It got worse when The Stones came out: A man approached the stage, and was stabbed to death by a Hell’s Angel&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;It was argued that all the good that counter-culture had done in the world, all thet people remembered about it was swept away by the disaster of Altamont
    &lt;ul&gt;
      &lt;li&gt;Drug overdoses, fights, and a murder&lt;/li&gt;
      &lt;li&gt;It didn’t get better&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;McCartney Leaves The Beatles - April 1970&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kent State, OH - May 1970&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;At the time, regular anti-war protests were held there against Vietnam&lt;/li&gt;
  &lt;li&gt;These protests had a well-worn script:
    &lt;ul&gt;
      &lt;li&gt;Started peaceful, and then as night fell, fights and vandalism&lt;/li&gt;
      &lt;li&gt;The police and National Guard came with tear gas&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;One protest:
    &lt;ul&gt;
      &lt;li&gt;A small group of students were broken off from the main protest into a parking lot, trying to get away from the tear gas&lt;/li&gt;
      &lt;li&gt;About 30 National Guard troops broke away from the main troops, and at the top of the hill over the parking lot, they formed 2 lines&lt;/li&gt;
      &lt;li&gt;The first dropped to their knees, raised their rifles, and opened fire&lt;/li&gt;
      &lt;li&gt;4 students dead (2 weren’t even protesting, killed by stray bullets), 10 wounded, and 1 in wheelchair for life&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The shockwave from Kent State
    &lt;ul&gt;
      &lt;li&gt;The government: “They had it coming, they were probably communists”&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;As a result, protests became far more intense and violent, but died away clearly because:
    &lt;ul&gt;
      &lt;li&gt;The establishment didn’t care what youth, what counter-culture had to say&lt;/li&gt;
      &lt;li&gt;They had an agenda, and if you got in the way, they would shoot you down in the streets&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;End of counter-culture&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;End of Counter-culture&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Three important figures in Folk Rock passed away (all at the age of 27):
    &lt;ul&gt;
      &lt;li&gt;Jimi Hendrix dies of drug overdose, September 1970&lt;/li&gt;
      &lt;li&gt;Janis Joplin dies of drug overdose, October 1970&lt;/li&gt;
      &lt;li&gt;Jim Morrison (The Doors) dies, July 1971&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;At this point, counter-culture was just on the biggest downward spiral ever&lt;/li&gt;
  &lt;li&gt;End of the 1960s as we moved on to the 1970s&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Differences between 60s and 70s&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;The shift from the sense of community/collective to the sense/celebration of the individual&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Sgt Peppers lead to the shift from Rock ‘n’ Roll to Rock, and the Hippie Aesthetic&lt;/li&gt;
  &lt;li&gt;Moving from:
    &lt;ul&gt;
      &lt;li&gt;Singles to Albums:
        &lt;ul&gt;
          &lt;li&gt;Albums became the important medium in Pop music&lt;/li&gt;
          &lt;li&gt;Growing out of TPA&lt;/li&gt;
          &lt;li&gt;An album is a single work, not a collection of singles&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Dancing to Listening:
        &lt;ul&gt;
          &lt;li&gt;Yousit down and enjoy the album&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Entertainers to Serious musicians
        &lt;ul&gt;
          &lt;li&gt;A lot of musicians no longer thought of themselves as entertainers
            &lt;ul&gt;
              &lt;li&gt;Like Chuck Berry did&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;They saw themselves now as artists&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;FM Radio to AOR (Album-Oriented Rock)
        &lt;ul&gt;
          &lt;li&gt;Pop music was primarily focused on the AM band&lt;/li&gt;
          &lt;li&gt;FM, left alone
            &lt;ul&gt;
              &lt;li&gt;But all of a sudden there were a lot of people who didn’t want to listen to singles or pop music&lt;/li&gt;
              &lt;li&gt;They wanted to listen to albums&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;So we see new radio stations on FM, far less interested in rapid fire hit songs
            &lt;ul&gt;
              &lt;li&gt;Willing to play an entire side of an album&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;We see the rise of Album-Oriented Rock (AOR) on the FM dial
            &lt;ul&gt;
              &lt;li&gt;Tremendous boost to the genre&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;A significantly better sound quality on FM
            &lt;ul&gt;
              &lt;li&gt;Huge importance for the bands who were trying to make better sounds&lt;/li&gt;
              &lt;li&gt;FM radio could broadcast in stereo&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Shift to the “Hippie Aesthetic”&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Started by The Beatles’ “Sergeant Peppers”&lt;/li&gt;
  &lt;li&gt;Marks the shift from Rock n Roll to Rock&lt;/li&gt;
  &lt;li&gt;Moving from:
    &lt;ul&gt;
      &lt;li&gt;Singles to albums&lt;/li&gt;
      &lt;li&gt;Dancing to listening&lt;/li&gt;
      &lt;li&gt;Entertainers to “serious” musicians&lt;/li&gt;
      &lt;li&gt;FM Radio (more dominant, top 40) - AOR (Album Oriented Rock)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;s&quot;&gt;1970s&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;70s were a decade of disillusionment&lt;/li&gt;
  &lt;li&gt;Lost the war in Vietnam
    &lt;ul&gt;
      &lt;li&gt;Brutal, humiliating defeat&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Impeached president - Nixon
    &lt;ul&gt;
      &lt;li&gt;A president literally driven from office because he was facing jail time&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;People stopped worrying about the war outside and turned inward&lt;/li&gt;
  &lt;li&gt;A very self-absorbed decade&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Hard Rock / Heavy Metal&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sonic development from Psychedelic Blues&lt;/li&gt;
  &lt;li&gt;To a great extent it is a &lt;strong&gt;response to the failure of Counter Culture&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Strong influence from Rhythm and Blues and The Beatles in terms of studio experimentation, bringing in external sounds you wouldn’t expect&lt;/li&gt;
  &lt;li&gt;Focus on distorted electric guitar, so strong Hendrix influence
    &lt;ul&gt;
      &lt;li&gt;Hendrix as a “transitional musician” - both the last psychedelic blues artist and the first hard rock artist&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Distinction between Hard Rock and Heavy Metal&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Better to think about them as being ends of a continuum, two ends of a spectrum&lt;/li&gt;
  &lt;li&gt;If you have a certain set of stylistic elements, you are more at the hard rock end&lt;/li&gt;
  &lt;li&gt;A different set, heavy metal&lt;/li&gt;
  &lt;li&gt;Most bands fall somewhere in he middle&lt;/li&gt;
  &lt;li&gt;When Geddy Lee of the band Rush was asked where they fall, he said “it really depends on what you like”
    &lt;ul&gt;
      &lt;li&gt;So you tend to place things as closer to the end of the spectrum you like more&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;4 Differences:
    &lt;ul&gt;
      &lt;li&gt;Quality (Tonal Character) and Levels of distortion
        &lt;ul&gt;
          &lt;li&gt;Heavy metal will have a much higher level of distortion than hard rock in the sound of the guitar&lt;/li&gt;
          &lt;li&gt;Heavy metal will also extend this distortion to both the bass and the voice&lt;/li&gt;
          &lt;li&gt;Distortion at hard rock end tends to be less extreme than at heavy metal end&lt;/li&gt;
          &lt;li&gt;More likely to find intense levels distortion on other instruments too (in hard rock, bass guitar is generally clean. In heavy metal, more and more distored)
            &lt;ul&gt;
              &lt;li&gt;Same with vocalists&lt;/li&gt;
              &lt;li&gt;Hard rock is a rough sound but heavy metal is distorted more pronounced, more exaggerated&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Tempo
        &lt;ul&gt;
          &lt;li&gt;Heavy metal tends to have extremes in tempo range (wide range)
            &lt;ul&gt;
              &lt;li&gt;Gives you much greater range of emotional intensity&lt;/li&gt;
              &lt;li&gt;It’s really hard to play quickly, and really hard to play slowly&lt;/li&gt;
              &lt;li&gt;High self-consciousness of musicianship in heavy metal&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Whereas heavy metal tends to be in the middle (good head-banging tempo)&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Heavy metal: extremes in tempo, really slow, or really slowly&lt;/strong&gt;&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Hard rock: mid range tempo, not too interested in dancing&lt;/strong&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Lyrics
        &lt;ul&gt;
          &lt;li&gt;Hard Rock: Chuck Berry model -&amp;gt; parties, girls, no school, cars, rock itself or rock n roll&lt;/li&gt;
          &lt;li&gt;Heavy Metal: religious, mythological images, fantasy, futility of war (not celebrating it), real response to the failure of the Counter Culture, states of instability of psychology (paranoia, madness, feeling isolated/left out/left behind)&lt;/li&gt;
          &lt;li&gt;Example of early heavy metal: early Metallica in its Master of Puppets era&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Founding Bands&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Black Sabbath&lt;/li&gt;
  &lt;li&gt;Deep Purple&lt;/li&gt;
  &lt;li&gt;Led Zeppelin&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All British for some reason. The Brits never recovered from the war until the late 50s. The West Coast counter-culture never really happened in Britain. They went through a series of debilitating economic issues throughout the decade so no Golden Age.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Black Sabbath&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;British&lt;/li&gt;
  &lt;li&gt;“Doomy Music”
    &lt;ul&gt;
      &lt;li&gt;Name came from: down the road from their location when they were coming up with a name; Horror movie called Black Sabbath was playing at this rundown movie theatre&lt;/li&gt;
      &lt;li&gt;Used that name to try to capture the essence of that&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Madness/Futility of war&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;War Pigs&lt;/strong&gt;, from the album Paranoid, 1970 (Heavy metal)
    &lt;ul&gt;
      &lt;li&gt;Includes an air raid siren&lt;/li&gt;
      &lt;li&gt;Very heavily instrumental
        &lt;ul&gt;
          &lt;li&gt;Big stretches when the vocals are not doing anything&lt;/li&gt;
          &lt;li&gt;The focus isn’t just on the vocals, it’s on everyone&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Tempo: tempo shifts in the beginning: moves fro slow to mid-range; more like heavy metal&lt;/li&gt;
      &lt;li&gt;Distortion: distortion gets heavier as we move toward heavy metal, but also as we get closer to modern standards; So although it seems light to today’s standards, it was kind of middle of the scale, slightly closer to heavy metal at the time&lt;/li&gt;
      &lt;li&gt;Lyrics: very anti-establishment, depressive, anti-war, so heavy metal&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Deep Purple&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Also British&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Highway Star&lt;/strong&gt;, from the album Machine Head, 1972
    &lt;ul&gt;
      &lt;li&gt;Virtuosic vocal performance during the introduction&lt;/li&gt;
      &lt;li&gt;Tempo: stable, kind of fast, but just high mid range; more like hard rock&lt;/li&gt;
      &lt;li&gt;Lyrics: girls, cars “nobody’s gonna take my car”, “Berry-style”&lt;/li&gt;
      &lt;li&gt;Distortion: this is where it’s more heavy metal, even more than Ozzy, in vocals
        &lt;ul&gt;
          &lt;li&gt;Very distorted&lt;/li&gt;
          &lt;li&gt;Use of electric organ (where distortion has historical precedence in music)
            &lt;ul&gt;
              &lt;li&gt;The notes are sustainable infinitely, like with a feedback loop as used by Jimi Hendrix&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Classical influences in musicianship and approach to solos&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Important “musicianship” to this band
        &lt;ul&gt;
          &lt;li&gt;Listen to the keyboard solo: Arpeggios (a set of notes, usually comprising a chord, playing them very quickly)&lt;/li&gt;
          &lt;li&gt;This approach to playing is found often in Bach (Baroque era, 1700s)&lt;/li&gt;
          &lt;li&gt;Keyboardists tend to study classical starting from a young age
            &lt;ul&gt;
              &lt;li&gt;John Ward, highly trained classical musician&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Led Zeppelin&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Once again, also British&lt;/li&gt;
  &lt;li&gt;Grew out the The Yardbirds (British Blues Revival)&lt;/li&gt;
  &lt;li&gt;Significant blues influence&lt;/li&gt;
  &lt;li&gt;Also strong acoustic/Celtic influence&lt;/li&gt;
  &lt;li&gt;Virtuosic musicianship/mastery of recording studio (as well as their astounding playing ability)&lt;/li&gt;
  &lt;li&gt;No interest in “editing” for singles depiste popularity
    &lt;ul&gt;
      &lt;li&gt;E.g. Stairway to Heaven
        &lt;ul&gt;
          &lt;li&gt;Steadfastly refused to edit the song&lt;/li&gt;
          &lt;li&gt;Top 40 radio eventually caved and would just play the whole 7 minute long song&lt;/li&gt;
          &lt;li&gt;Longest song in history to be in rotation on Top 40 radio&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Very hard to pin down in terms of overall leaning of hard rock or heavy metal&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Whole Lotta Love&lt;/strong&gt;, from the album Led Zeppelin II, 1969
    &lt;ul&gt;
      &lt;li&gt;Blues-riff based; Whole song based on the same riff&lt;/li&gt;
      &lt;li&gt;Sued by Willie Dixon of Chess Records (“You Need Love”, Muddy Waters, 1962)&lt;/li&gt;
      &lt;li&gt;Importance of control in studio&lt;/li&gt;
      &lt;li&gt;Very clear Blues influence, but also another style here&lt;/li&gt;
      &lt;li&gt;The Avant-garde soundscape in the middle (control in the studio)
        &lt;ul&gt;
          &lt;li&gt;A surreal dream-like world created&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;july-21-2016---lecture-12&quot;&gt;July 21, 2016 - Lecture 12&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Importance of Concerts&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The centre of experience for these genres was the &lt;strong&gt;Stadium concert&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;No radio airplay&lt;/li&gt;
      &lt;li&gt;No video/music television (next to impossible to find any coverage of rock bands on TV)&lt;/li&gt;
      &lt;li&gt;Critical rejection in music press
        &lt;ul&gt;
          &lt;li&gt;The Rolling Stones hates this music; They hated Led Zeppelin&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Rock and heavy metal are the main genres here&lt;/li&gt;
      &lt;li&gt;Stadium concerts give us a shared/collective experience&lt;/li&gt;
      &lt;li&gt;Concert is the only place to connect with the band&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;They became a focal point:
    &lt;ul&gt;
      &lt;li&gt;Form of worship&lt;/li&gt;
      &lt;li&gt;Performers have superpowers
        &lt;ul&gt;
          &lt;li&gt;“Adulation of technical mastery” (Jimmy Page video)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Each member of the band gets to play their own instrumets and show their own individual talents and the other members leave the stage -&amp;gt; virtuosic musicianship&lt;/li&gt;
      &lt;li&gt;Most band names in the 1960s had a “The” and plural, 70s don’t&lt;/li&gt;
      &lt;li&gt;60s: Collective idea; 70s: Business-oriented; Resemble corporation names; Use of logo&lt;/li&gt;
      &lt;li&gt;Fans as musicians - Want to “Be” the Band
        &lt;ul&gt;
          &lt;li&gt;More so than any other style, most of the audience are also musicians&lt;/li&gt;
          &lt;li&gt;Going to concerts was almost like doing research/homework&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;punk&quot;&gt;Punk&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;New York City, NY&lt;/li&gt;
  &lt;li&gt;People felt rejected from the corporation so they made their own songs with limited music skills&lt;/li&gt;
  &lt;li&gt;They reject the startup: anyone can be in a band and you don’t need to be good&lt;/li&gt;
  &lt;li&gt;They reject the idea of stadium rock&lt;/li&gt;
  &lt;li&gt;CBGBs (Country, Blue Grass and Blues) in New York&lt;/li&gt;
  &lt;li&gt;Example: The Talking Heads, Blondie&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The Ramones&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DIY&lt;/li&gt;
  &lt;li&gt;Three Chords/No solos&lt;/li&gt;
  &lt;li&gt;Success in Britain&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The Sex Pistols&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;God Save The Queen&lt;/strong&gt;, June 1977
    &lt;ul&gt;
      &lt;li&gt;Class-based political commentary&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;disco&quot;&gt;Disco&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Dance club based on records, not live bands&lt;/li&gt;
  &lt;li&gt;Early 1970s&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;David Mancuso&lt;/strong&gt;: “Invitation only” parties&lt;/li&gt;
  &lt;li&gt;Gay, Black, and Hispanic subcultures&lt;/li&gt;
  &lt;li&gt;Dressed as rockstars and the dance floor had mirrors to show off their look&lt;/li&gt;
  &lt;li&gt;Disco had the “dance break” where the singing would stop but the music was still going
    &lt;ul&gt;
      &lt;li&gt;A line is formed where each person show off their dance move&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Soul and Funk Records, often “remixed” using reel-to-reel tape recorders, and audio effects such as echo&lt;/li&gt;
  &lt;li&gt;Popularity grows through mid-70s&lt;/li&gt;
  &lt;li&gt;By 1972, Disco became a musical genre: Musicians focused on the tempo, the beat, the speed of the music, and seamless transition between songs, so the tempos of the songs should be similar&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Love Train&lt;/strong&gt;, The O’Jays, 1973&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Reveals many of the characteristics of Disco&lt;/li&gt;
  &lt;li&gt;120 bpm&lt;/li&gt;
  &lt;li&gt;Production is clean - no distortion&lt;/li&gt;
  &lt;li&gt;Complex arrangements over basic beat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Disco as a response to Stadium Rock&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Disco: wild fashion sense, ornate
    &lt;ul&gt;
      &lt;li&gt;dance floor is centred in clubs, everyone can see it; stage in disco is the dance floor;&lt;/li&gt;
      &lt;li&gt;mirrors in disco; rejection of stadium rock&lt;/li&gt;
      &lt;li&gt;disco embraces the star&lt;/li&gt;
      &lt;li&gt;No solos - focus on dance&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Example: &lt;strong&gt;Le Freak&lt;/strong&gt;, Chic, 1978&lt;/li&gt;
  &lt;li&gt;Popularity grows through mid-70s&lt;/li&gt;
  &lt;li&gt;Success peaks in 1977: “Saturday Night Fever”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Rock Backlash&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“Disco Sucks”: hate from stadium band fans&lt;/li&gt;
  &lt;li&gt;July 12, 1979: Comisky Park, Chicago - “Disco Demolition Night”&lt;/li&gt;
  &lt;li&gt;Popularity of disco drops sharply by the end of 1979&lt;/li&gt;
  &lt;li&gt;Racism?&lt;/li&gt;
  &lt;li&gt;Homophobia?&lt;/li&gt;
  &lt;li&gt;Musically, Disco was so counter to mainstream music. It shifts the focus from the musicians to the beat&lt;/li&gt;
  &lt;li&gt;Drum Machine: In Chicago Frankie Knuckles added bass drum -&amp;gt; Warehouse Music -&amp;gt; House music -&amp;gt; Electronic dance music&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;hip-hop&quot;&gt;Hip Hop&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Folk culture&lt;/li&gt;
  &lt;li&gt;South Bronx, New York City - 1970s&lt;/li&gt;
  &lt;li&gt;Rap/Breakdancing/Graffiti Art&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Precursors:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Signifying/The Dozens&lt;/strong&gt; - was a game, you had to be funnier and faster than the other person, or you lose the game
    &lt;ul&gt;
      &lt;li&gt;Oral word game&lt;/li&gt;
      &lt;li&gt;Ritualized insulting&lt;/li&gt;
      &lt;li&gt;Rapid, quick, rhythmic rhyming all going to be elements of rap&lt;/li&gt;
      &lt;li&gt;African origin&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Personality DJs&lt;/strong&gt; (1950s/60s)
    &lt;ul&gt;
      &lt;li&gt;Speed/rhyming/virtuosic&lt;/li&gt;
      &lt;li&gt;These developed during the transition from radio to TV&lt;/li&gt;
      &lt;li&gt;Nature of broadcasting also changed at this point&lt;/li&gt;
      &lt;li&gt;It’s not a group listening experience anymore&lt;/li&gt;
      &lt;li&gt;With private radio, DJs are now talking directly to you&lt;/li&gt;
      &lt;li&gt;The reason you choose one Top 40 station over another is the DJ&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Jamaican Toasting&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Arguably the most important precursor&lt;/li&gt;
      &lt;li&gt;Yard dances/Sound system men&lt;/li&gt;
      &lt;li&gt;Most people in Jamaica didn’t have records or even a way to play them&lt;/li&gt;
      &lt;li&gt;The only opportunity to hear RnB and other genres you had was to go to a Yard Dance&lt;/li&gt;
      &lt;li&gt;Only source of American Pop music&lt;/li&gt;
      &lt;li&gt;SSM became 1st Jamaican recording producers&lt;/li&gt;
      &lt;li&gt;Producing for Yard Dances&lt;/li&gt;
      &lt;li&gt;Same song on both sides, one without vocals&lt;/li&gt;
      &lt;li&gt;SSM would vocally improvise over the “B” side&lt;/li&gt;
      &lt;li&gt;Toasting - “toasting to themselves”&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Jazz/Militant Black Poetry&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Part of “Reafricanization” of culture during the 1960s&lt;/li&gt;
      &lt;li&gt;A blending of spoken word art (poetry) and rhythms&lt;/li&gt;
      &lt;li&gt;Is it rap? No, but it has most of the elements&lt;/li&gt;
      &lt;li&gt;Spoken word is a profound part of Black culture&lt;/li&gt;
      &lt;li&gt;Example: The Last Poets&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Prehistory&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;1973 - Kool Herc&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Jamaican immigrant&lt;/li&gt;
      &lt;li&gt;Started holding yard parties in the streets and did exactly what Sound System Men did&lt;/li&gt;
      &lt;li&gt;He had two turntables&lt;/li&gt;
      &lt;li&gt;He extended exciting moments of a song - “breaks”
        &lt;ul&gt;
          &lt;li&gt;Found moments of records people liked and repeat the peak moments again&lt;/li&gt;
          &lt;li&gt;First guy to take two turntables and re-compose music&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;“cutting and mixing”&lt;/li&gt;
      &lt;li&gt;Toasting: talked about how awesome his parties were&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;1976 - Grand Master Flash&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Developed Kool Herc’s techniques&lt;/li&gt;
      &lt;li&gt;“Quick mix”: very very quick at changing records&lt;/li&gt;
      &lt;li&gt;Variety of sources
        &lt;ul&gt;
          &lt;li&gt;Expanded the range of music he was using (rather than soul/funk records that Herc was using)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;“Sampling”: Using little bits and pieces&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;1976 - Grand Master Meli Mel&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Toaster/Rapper for Grand Master Flash
        &lt;ul&gt;
          &lt;li&gt;Grand Master Flash was too busy toasting to himself&lt;/li&gt;
          &lt;li&gt;Grand Master Meli Mel was the man to do the job&lt;/li&gt;
          &lt;li&gt;Split between the guy with the turntables and the guys who are up at the front doing all the rapping (split between DJ and rapper)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Does “full length” raps
        &lt;ul&gt;
          &lt;li&gt;He started working out narratives, telling stories and did them the same way each performance&lt;/li&gt;
          &lt;li&gt;When rappers started creating songs&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Writes them down&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;1978 - Grand Wizard Theodore&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;He invented scratching
        &lt;ul&gt;
          &lt;li&gt;He left the volume up and didn’t let go, and then manipulated it with his hand&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;He redefined technology of the turntable
        &lt;ul&gt;
          &lt;li&gt;He turned the turntable into an instrument&lt;/li&gt;
          &lt;li&gt;Technology of Production&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;First recorded hit: &lt;strong&gt;“Rapper’s Delight”&lt;/strong&gt;, Sugarhill Gang, October 1979&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Based on “Good Times” by Chic (1979 #1 Pop and RnB)&lt;/li&gt;
  &lt;li&gt;#4 RnB, #36 Pop&lt;/li&gt;
  &lt;li&gt;First time a rap song had ever been recorded&lt;/li&gt;
  &lt;li&gt;He’s telling you what he’s doing, because you have probably never heard it before (intro lyrics, “This is not a test”)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;july-31-2016---readings-for-the-final-exam&quot;&gt;July 31, 2016 - Readings for the Final Exam&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;James Brown:On The Way To Funk (p.240-246)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drugs and the Quest for Higher Consciousness (p.250-252)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Hallucinogenic drugs were essential to unlocking “the doors of perception”&lt;/li&gt;
  &lt;li&gt;LSD and Marijuana = the most important drugs&lt;/li&gt;
  &lt;li&gt;LSD was viewed as a kind of magic drug that led to a “higher consciousness”
    &lt;ul&gt;
      &lt;li&gt;Higher consciousness = essence of counterculture&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The counterculture began expanding to Eastern religions around 1965&lt;/li&gt;
  &lt;li&gt;There are two ways music might reflect a growing interest in higher consciousness:
    &lt;ul&gt;
      &lt;li&gt;Use music to enhance a drug trip; The music itself does not offer the experience&lt;/li&gt;
      &lt;li&gt;Use music as the trip itself&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;It Takes a Village to Raise a Ruckus (p.263-264)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The psychedelic scene had completely taken off by 1966, except it was still noticeably
absent on the Radio&lt;/li&gt;
  &lt;li&gt;Tom Donahue, pissed off about AM pop music radio, became the first person to make
“free-form radio” (playing tracks back to back, less chatter between songs, longer songs
allowed to be played) successful&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The Hippie Aesthetic (p.295)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A focus on musical and technological craft, combined with a distinctly artistic approach to music making, let to an aesthetic approach we call “Hippie Aesthetic”&lt;/li&gt;
  &lt;li&gt;A rock musician is an artist who has a responsibility to produce sophisticated music using whatever means are at his or her disposal, and rock music should stand up to repeated listening and the lyrics should deal with important issues or themes&lt;/li&gt;
  &lt;li&gt;Shifting focus from Singles to Albums&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Good Trip, Bad Trip (p.283-284)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Fracturing of the American Radio Audience (p.286-288)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Rise of Disco (p.355-364)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Disco had been a style for a long time, keep in mind, rock was shifting to listening and away from dancing, so what were people going to turn to if they wanted to get their boogie on? Disco.&lt;/li&gt;
  &lt;li&gt;Disco became mainstream in 1977 with the release of Saturday Night Fever&lt;/li&gt;
  &lt;li&gt;Disco represents a return to the authority of producers (They had been less influential throughout the late 60s and early 70s in popular music)&lt;/li&gt;
  &lt;li&gt;Disco used a Brill Building/Motown Model&lt;/li&gt;
  &lt;li&gt;But with Disco now mainstream, the serious rock fans and musicians themselves were pissed off. They popularized the incredible long slogan of, “Disco Sucks.”&lt;/li&gt;
  &lt;li&gt;No one is exactly sure why they were rioting about disco, but there are a few solid speculations
    &lt;ul&gt;
      &lt;li&gt;One of the best theories: It went against the Hippie Aesthetic. Disco was meant for dancing and fun. It also gave the creative elements back to the producer. They felt as though disco threatened everything they had managed to establish in music. This was the first form of “rockism” (The belief that some forms of pop music are less important because of a perceived lack of authenticity)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Key Point: Disco was a rejection of the Hippie Aesthetic, and it actually shared with another emerging style, Punk.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The Roots of Punk in the United States / The Rise of Punk in the UK, 1974-1977 (p.381-388)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Punk originally comes from the Underground scene in the US. Bands like the Velvet Underground, the Stooges, Iggy Pop, and MC5 all began confronting the hippie Aesthetic and mainstream music of the time.&lt;/li&gt;
  &lt;li&gt;New York was the national center of the scene for punk during the 70s.&lt;/li&gt;
  &lt;li&gt;Across the ocean: Punk music was the best music that represented the despair UK teenagers were facing - the crushing economic crisis had been hitting them very hard. One of the biggest bands: The Sex Pistols (A band that lasted only a few years but was absolutely surrounded by controversy)
    &lt;ul&gt;
      &lt;li&gt;They were the ones who got Punk to be associated with forbidden things/acts&lt;/li&gt;
      &lt;li&gt;They essentially spoiled the name of punk to what we think of it as today&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Again, Punk was rebelling against the Hippie Aesthetic in music (amongst other non-musical things like politics)&lt;/li&gt;
  &lt;li&gt;Punks had a “return-to-simplicity Aesthetic” just trying to play as fast and as bare-boned as possible.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The Emergence of Rap (p.448-453)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DJ Kool Herc: the “Merry-Go-Round” technique was essentially his style. He would have two copies of the same record on his turntable, and would constantly be focusing on the break of that song. He would take a five second break-down and turn it into a five minute loops. This is how dance-breaks were invented.&lt;/li&gt;
  &lt;li&gt;Russell Simmons and Rick Rubin form Def Jam records. It would become another important early hip-hop label with artists like LL Cool J, Public Enemy, and the Beastie Boys signed to them&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;End of Course. Final Exam: 12:30pm, August 3, 2016&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 02 May 2016 18:56:00 -0400</pubDate>
        <link>http://dzed.me/notes/2016/05/02/Music-140.html</link>
        <guid isPermaLink="true">http://dzed.me/notes/2016/05/02/Music-140.html</guid>
        
        
        <category>notes</category>
        
      </item>
    
      <item>
        <title>MATH 237 - Calculus 3 for Honours Mathematics</title>
        <description>&lt;pre&gt;&lt;code&gt;MATH 237 - Calculus 3 for Honours Mathematics
Instructor: Joseph J. West
Location: MC 4059
Time: Mondays, Wednesdays, Fridays 10:30am - 11:20pm
Tutorials: M3 1006 Mondays 12:30pm - 1:20pm
Term: Spring 2016
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;may-2-2016---lecture-1&quot;&gt;May 2, 2016 - Lecture 1&lt;/h2&gt;

&lt;p&gt;Midterm (25%): 4:30pm-6:15pm, June 14 (T), 2016&lt;br /&gt;
Assignments are due at 10:23am every WEDNESDAY&lt;br /&gt;
Email: jjwest@uwaterloo.ca&lt;br /&gt;
Office Hours this week: MW 11:30-12:00, 2:30-3:00&lt;/p&gt;

&lt;p&gt;MATH 138: x -&amp;gt; f(x)&lt;br /&gt;
MATH 237: (x, y) -&amp;gt; f(x, y) or (x, y, z) -&amp;gt; f(x, y, z)&lt;br /&gt;
Output: Real number&lt;/p&gt;

&lt;p&gt;Definition: A &lt;strong&gt;scalar function&lt;/strong&gt; f is a rule which assigns each ordered pair of real numbers (x, y) in a set D (called the domain) in R&lt;sup&gt;2&lt;/sup&gt; a unique real number z = f(x, y). The set is the range.&lt;/p&gt;

&lt;h2 id=&quot;may-4-2016---lecture-2&quot;&gt;May 4, 2016 - Lecture 2&lt;/h2&gt;

</description>
        <pubDate>Mon, 02 May 2016 18:56:00 -0400</pubDate>
        <link>http://dzed.me/notes/2016/05/02/Math-237.html</link>
        <guid isPermaLink="true">http://dzed.me/notes/2016/05/02/Math-237.html</guid>
        
        
        <category>notes</category>
        
      </item>
    
      <item>
        <title>CS 246 - Object-Oriented Software Development</title>
        <description>&lt;pre&gt;&lt;code&gt;CS 246 - Object-Oriented Software Development
Instructor: Brad Lushman
Section: 001
Location: MC 4045
Time: Tuesdays and Thursdays 10:00am - 11:20am
Tutorials: MC 4060 Wednesdays 1:30pm - 2:20pm
Term: Spring 2016
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Shoutout to Brian Forbes, &lt;a href=&quot;http://www.yufeiyang.me&quot;&gt;Steven Yang&lt;/a&gt;, and &lt;a href=&quot;http://ziqizhou.com&quot;&gt;Ziqi Zhou&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-3-2016---lecture-1&quot;&gt;May 3, 2016 - Lecture 1&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Grading Scheme&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Assignments - 0(A0) 7 7 7 7 12(project) = 40%&lt;/li&gt;
  &lt;li&gt;Midterm (4:30pm - 6:20pm, June 23 (Th), 2016) = 20%&lt;/li&gt;
  &lt;li&gt;Final = 40%&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This course requires you to work in Linux. There are several options:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Lab machines&lt;/li&gt;
  &lt;li&gt;Install Linux on your own machines&lt;/li&gt;
  &lt;li&gt;Make SSH connection to school machines (Use Putty (putty.exe) on Windows, winscp for file transfer, XMing for Xwindows)&lt;/li&gt;
  &lt;li&gt;Download cygwin - Linux-like environment for Windows&lt;/li&gt;
  &lt;li&gt;Get a Mac&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;4 Modules in this Course:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Linux Shell (2 weeks)&lt;/li&gt;
  &lt;li&gt;C++ Language, C++14 (10 weeks)&lt;/li&gt;
  &lt;li&gt;Tools&lt;/li&gt;
  &lt;li&gt;Software Engineering (design etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;“Homework”: Go on Piazza -&amp;gt; Linux Reference Sheet -&amp;gt; Save and print&lt;/p&gt;

&lt;h2 id=&quot;module-1-linux-shell&quot;&gt;Module 1: Linux Shell&lt;/h2&gt;

&lt;p&gt;A shell is an interface to the operating system, i.e. how we get the OS to do things (run programs, manage files etc.). There are two kinds of shells: graphical (with icons and clicking) and the command line. The shell we will use is Bash. Check if you are using Bash, login to shell and type in:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ echo $0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It should return “bash”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linux file system: working with files&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cat&lt;/strong&gt; - short for concatenate; display contents of a file (e.g. cat user/share/dict/words). In Linux, a directory is considered a special kind of file&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ls&lt;/strong&gt; - list files in the current directory (non-hidden files)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ls -a&lt;/strong&gt; - list all files (including hidden; hidden files start with a “.”)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;pwd&lt;/strong&gt; - print current directory (pwd = print working directory)&lt;/p&gt;

&lt;p&gt;What happens when we only type in “cat”? It just kind of sits there, waiting for input. It’s kinda like a parrot, repeating what you typed in. If we can capture the output into a file…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat &amp;gt; output.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It would capture the input. NOT RECOMMENDED: ^C. It would prevent cat from doing clean-up. Let it finish on its own: ^D at the beginning of a line sends an “EOF” signal to cat.&lt;/p&gt;

&lt;p&gt;One greater than sign replaces, two appends.&lt;br /&gt;
In general, command args &amp;gt; file
executes command args + captures the output in file -&amp;gt; called &lt;strong&gt;output redirection&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Using less than sign, takes in input from the file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat &amp;lt; output.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The line above displays the file. Seems to be equivalent to what we have before. Are these two things the same? NO. The reason is very important:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;cat input.txt -&amp;gt; passes the NAME input.txt to cat as an argument. Cat opens input.txt and displays its contents&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;cat &amp;lt; input.txt -&amp;gt; the shell opens the file and passes the contents to cat IN PLACE of keyboard input&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;wc&lt;/strong&gt; - word count, displays numbers of lines, words, and characters of a file&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cat *.txt&lt;/strong&gt; - *.txt globbing pattern -&amp;gt; matches any sequence of characters (the shell finds all files that mathch the pattern)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cat &amp;lt; *.txt&lt;/strong&gt; - ERROR! The shell will only attach one file to cat’s input stream&lt;/p&gt;

&lt;p&gt;Many (but not all) commands take both kinds of inputs:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cat &amp;lt; input.txt &amp;gt; output.txt&lt;/strong&gt; - sends chars from input.txt to output.txt; effectively a copy-paste action&lt;/p&gt;

&lt;p&gt;Every process is attached to 3 streams. Stdin goes into the program, stdout and stderr come out of the program. Stdin -&amp;gt; program -&amp;gt; stdout and stderr. By default, stdin = keyboard, stdout, stderr = screen.
&amp;lt; connects stdin to file, &amp;gt; connects stdout to file, 2&amp;gt; stdrr. Stderr separates output stream from error messages, so that output error messages can go to different places, and that error messages don’t cut/block output files.&lt;/p&gt;

&lt;p&gt;Also, stdout may be &lt;strong&gt;buffered&lt;/strong&gt;. System may assemble characters before displaying. However, stderr isn’t buffered, because user needs to see error messages immediately.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pipes&lt;/strong&gt;: Make one program’s output(stdout) another program’s input(stdin). Example: How many words occur in the first 20 lines of sample.txt?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;head -n file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;gives the first n lines of file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wc -w
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;counts words (just print the word count)&lt;/p&gt;

&lt;p&gt;so&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;head -20 sample.txt | wc -w
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Here,&lt;/td&gt;
      &lt;td&gt;(the pipe symbol) makes the output of the command before it the input of the command after it.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-4-2016---tutorial-1&quot;&gt;May 4, 2016 - Tutorial 1&lt;/h2&gt;

&lt;p&gt;To zip your assignment files, do:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zip (directory where your files are).zip *
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;in the directory where the files are.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;marmoset_submit cs246 (question, e.g a0) (file you want to submit, zipped)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;is how you submit assignments to Marmoset.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-5-2016---lecture-2&quot;&gt;May 5, 2016 - Lecture 2&lt;/h2&gt;

&lt;p&gt;Suppose we have files words1.txt, words2.txt…, and each of them has one word per line. We want: A duplicate-free list of all the words used in any of these files&lt;/p&gt;

&lt;p&gt;We need the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;sort - sorts lines (man: Write sorted concatenation of all FILES(s) to standard output)&lt;/li&gt;
  &lt;li&gt;uniq - remove consecutive duplicate lines from input (man: filter adjacent matching lines from INPUT, writing to OUTPUT)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One possibility:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat words*.txt | uniq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What’s the problem with this? We must sort our input first, because for aabaacd, it would produce abacd, with duplicates.&lt;/p&gt;

&lt;p&gt;This should work:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat words*.txt | sort | uniq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sort it first, then call uniq. But there’s still a problem: it’s way too inefficient, beacuse it cat(s) all the files together FIRST, and then sorts it.&lt;/p&gt;

&lt;p&gt;This is better:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sort words*.txt | uniq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Q: Is it possible to use the output onf one program as a &lt;strong&gt;parameter&lt;/strong&gt; to another?&lt;/p&gt;

&lt;p&gt;Yes. E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &quot;Today is $(date) and I am $(whoami)&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The shell executes date and whoami, and subsitutes the results into the command line.&lt;/p&gt;

&lt;p&gt;WARNING:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &#39;Today is $(date) and I am $(whoami)&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will print the &lt;strong&gt;LITERAL&lt;/strong&gt; interpretation, i.e. Today is $(date) and I am $(whoami)&lt;br /&gt;
Single quotes do not execute the substitution.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &quot;$(ls words*.txt)&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;prints a list of names of the text files:&lt;br /&gt;
words1.txt&lt;br /&gt;
words2.txt&lt;br /&gt;
…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pattern Matching in Text Files&lt;/strong&gt;&lt;br /&gt;
Use egrep (extended global regular expression print) = grep -E&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;egrep pattern file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;returns all lines that contain the pattern.&lt;/p&gt;

&lt;p&gt;E.g. print lines that contain “cs246”&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;egrep cs246 index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What about “cs246” OR “CS246”?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;egrep &quot;cs246|CS246&quot; index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The vertical bar (|) means “OR”, and the double quotes prevent the shell from interpreting the bar as a pipe.&lt;/p&gt;

&lt;p&gt;We can use parentheses to group subexpressions together:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;egrep &quot;(cs|CS)246&quot; index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The patterns that egrep understands are called &lt;strong&gt;regular expressions&lt;/strong&gt;. NOT globbing patterns.&lt;/p&gt;

&lt;p&gt;“(c|C)(s|S)246” is equivalent to “[cC][sS]246”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[…]&lt;/strong&gt; syntax says to match any SINGLE character in he square brackets. (a|1|c|2) is equivalent to [a1c2].&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[^…]&lt;/strong&gt; matches any 1 character not in the square brackets.&lt;/p&gt;

&lt;p&gt;“[cC][sS] ?246” allows for an optional space before the 246. ? syntax says to match 0 or 1 occurrences of the preceding expression.&lt;/p&gt;

&lt;p&gt;* syntax which matches 0 or more of the preceding expression. So (cs)*246 -&amp;gt; 246, cs246, cscs246, cscscs246…&lt;br /&gt;
cs(cs)*246 matches at least one cs at the front (eliminating the zero case)&lt;/p&gt;

&lt;p&gt;(cs)+246 is equivalent to cs(cs)*246. The + syntax matches 1 or more of the preceding expression.&lt;/p&gt;

&lt;p&gt;.* will match any sequence of characters&lt;/p&gt;

&lt;p&gt;.+ will match any non-empty sequence of characters&lt;/p&gt;

&lt;p&gt;“cs *246” matches any string starting with cs, followed by any string, followed by 246.&lt;/p&gt;

&lt;p&gt;^ matches beginning of line&lt;/p&gt;

&lt;p&gt;$ matches the end of line&lt;/p&gt;

&lt;p&gt;^cs246 line starts with cs246&lt;/p&gt;

&lt;p&gt;cs246$ line ends with cs246&lt;/p&gt;

&lt;p&gt;Want all lines of even length&lt;/p&gt;

&lt;p&gt;^(..)*$&lt;/p&gt;

&lt;h1 id=&quot;the-other-section&quot;&gt;The Other Section&lt;/h1&gt;

&lt;p&gt;Pipes allow us to hook the stdin of one program to the stdout of another. This is done using the pipe character | between commands&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cmd1 args1 | cmd2 args2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Regex Rules&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Can use parentheses for a sub-pattern&lt;/li&gt;
  &lt;li&gt;Can use square brackets to match any one character in the square brackets&lt;/li&gt;
  &lt;li&gt;[^…] matches any one character EXCEPT those in the square brackets&lt;/li&gt;
  &lt;li&gt;A ? after a pattern or character represents 0 or 1 of that pattern/character&lt;/li&gt;
  &lt;li&gt;A * after a pattern/character represents 0 or more of that pattern/character&lt;/li&gt;
  &lt;li&gt;A + “1 or more”&lt;/li&gt;
  &lt;li&gt;. matches any SINGLE character&lt;/li&gt;
  &lt;li&gt;^ and $ match the start and end of line respectively&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;E.g.&lt;br /&gt;
.* - anything&lt;br /&gt;
.+ - non-empty string&lt;br /&gt;
^.+$ - all non-empty lines&lt;br /&gt;
^.*$ - all lines&lt;/p&gt;

&lt;p&gt;^(..)*$ - grabs all lines with even number of characters&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Permissions&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ls -l gives the long form listing of the files in the current directory&lt;/li&gt;
  &lt;li&gt;First 3 bits: Owner r-read w-write x-execute&lt;/li&gt;
  &lt;li&gt;Middle 3 bits: Group&lt;/li&gt;
  &lt;li&gt;Last 3 bits: Others&lt;/li&gt;
  &lt;li&gt;r: ordinary files-&amp;gt; can be read, directories-&amp;gt; contents can be read, globbing workds, ls works&lt;/li&gt;
  &lt;li&gt;w: ordinary files-&amp;gt;can be modified, directories-&amp;gt; contents can be modified, add/remove&lt;/li&gt;
  &lt;li&gt;x: file’s contents can be executed as a program, directories-&amp;gt;directories can be navigated (can cd into the directory)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Changing Permissions&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;to change permissions use chmod&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  chmod mode file
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;mode is broken up to 3 parts - user, operator, and permissions&lt;/li&gt;
  &lt;li&gt;user is either u (owner), g (group), o (other), or a (all)&lt;/li&gt;
  &lt;li&gt;operator is either + (add), - (remove), = (set exactly)&lt;/li&gt;
  &lt;li&gt;permissions are r, w, x&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod o+r filename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;gives other group read access to the file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod o-r filename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;is the reverse&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod a-r filename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;then nobody can read it&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod u=rwx filename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;then the owner can do anything with it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shell Scripts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A shell script is a file containing sequences of shell commands execueted as a program. For example if we wanted to print the date, current user, current dir.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash (this header tells the OS that this is a Bash script; allows the OS to interpret it the following as bash commands)
date
whoami
pwd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;.sh is the standard extension of a bash script, but you can put whatever you want. Don’t forget permissions. Needs to be executable. Use chmod to give it executation rights.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Variables&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Variables can be assigned with single equals.&lt;/li&gt;
  &lt;li&gt;x=1 (NO SPACES!!!)&lt;/li&gt;
  &lt;li&gt;use echo &amp;amp;{x} to grab the value of the variable x (parentheses run what’s inside it in a “subshell”) (curly braces are important: good practice)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Shell Script Example&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Write a script that takes in a string to check if it is BAD. A string that can be found in a dict is bad.
General format of conditional statements in bash:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if [ cond ]; then // the square brackets cannot &quot;touch&quot; what&#39;s inside
...
elif [ cond ]; then
...
else
...
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;$?&lt;/strong&gt; contains the return value of the last-run command.
&lt;strong&gt;$1&lt;/strong&gt; retrieves the first parameter&lt;/p&gt;

&lt;p&gt;Create a .sh script as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

egrep &quot;^$1$&quot; /usr/share/dict/words &amp;gt; /dev/null  # /dev/null is where data goes to DIE

if [ $? -eq 0 ]; then //-eq compares
echo Bad password
else
echo Maybe not the worst
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And before you run it,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod u+x goodpass.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In bash, the pound symbol (#) starts a comment.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-10-2016---lecture-3&quot;&gt;May 10, 2016 - Lecture 3&lt;/h2&gt;

&lt;p&gt;Review:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;egrep pattern file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;prints all lines in file that contain a match to pattern&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shell Scripts Review&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash  #&quot;Shebang line&quot;  
date  
whoami  
pwd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To run the script in the current directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./myscript
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Variables&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x=1 #NO SPACES  
echo $x #Use $ when fetching the value of a variable
# No $ when setting a var ($ = &quot;fetch the value of&quot;)
# Good practice: ${x} - brace brackets, good style
# All vars contain strings, e.g. x is the STRING 1, not the number/int
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E.g.&lt;br /&gt;
    dir = ~/cs246
    echo ${dir}
    /u/bmlushma/cs246 # get the absolute path
    ls ${dir} # contents of cs246&lt;/p&gt;

&lt;p&gt;There are some global variables:&lt;br /&gt;
    env # environment variables
    echo ${PATH} # list of directories (where the shell looks for programs)&lt;/p&gt;

&lt;p&gt;When you type a command, the shell searches the list in order for a matching program.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo * # prints all files in the current directory
echo &quot;*&quot; - suppresses globbing pattern
echo &#39;*&#39; - suppresses globbing pattern
echo &quot;$PATH&quot; # expands the quotes, $-expansion happens
echo &#39;$PATH&#39; # absolutely literally
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Special Variables for Scripts&lt;/strong&gt;&lt;br /&gt;
    $1, $2, … # command-line arguments&lt;/p&gt;

&lt;p&gt;E.g. check whether a word is in the dictionary&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./isItAWord hello

#!/bin/bash

egrep &quot;^$1$&quot; /usr/share/dict/words # prints the word if found, prints nothing if not
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E.g. a good password is not in the dictionary&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;egrep &quot;^$1$&quot;/usr/share/dict/words &amp;gt; /dev/null # to black hole, suppress output
# we could store the out in a variable
x=$egrep ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: every program returns a status code when finished: egrep returns 0 if found, 1 if not found (general convention in UNIX: 0 means success, non-0 means failure)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$? # status of the most recently executed command

if [ $? -eq 0]; then # the first square bracket is the name of a program, and what&#39;s inside the square brackets are its arguments
    echo Bad password
else
    echo Maybe a good password
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We want to verify that the user has inputted the correct number of arguments, and print a usage message if it’s wrong&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

usage() {
    echo &quot;usage: $0 password&quot; # $0 is the name of the script/program as it was typed
}

if [ $# -ne 1 ]; then # $# is the number of arguments
    usage
    exit 1
fi

egrep ... # as established above
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now this is a good program that can also check if the input is valid.&lt;/p&gt;

&lt;p&gt;The general structure of conditional statements is as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if [ cond ]; then
    ...
elif [ cond ]; then
    ...
else
    ...
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Comparisons to other conditions: Check the Linux reference sheet&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Loops&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Loops: print the numbers from 1 to $1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
x=1
while [ $x -le $1 ], do
    echo $x
    x=$((x+1)) # $(()) for arithmetic
done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looping over a list, e.g. rename all .cpp to .cc&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
for name in \*.cpp; do # for ... in sets the variable to each word in the given list
    mv ${name} ${name%cpp}cc # value of name, without trailing cpp
done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;e.g. how many times does word $1 occur in the file $2?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
x=0
for word in $(cat &quot;$2&quot;); do #good idea - enclose vars in double quotes, prevent bad input
    if [ $word == $1 ]; then #String equality == instead of -eq
        x=$((x+1))
    fi
done
echo $x
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;e.g. Payday is the last Friday of the month. When is this month’s payday?&lt;/p&gt;

&lt;p&gt;2 tasks here: compute date and fomat the answer&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cal | awk &#39;{print $6}&#39; | egrep &quot;[0-9]&quot; | tail -1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-11-2016---tutorial-2&quot;&gt;May 11, 2016 - Tutorial 2&lt;/h2&gt;

&lt;p&gt;Want: stdout and stderr in the same file&lt;/p&gt;

&lt;p&gt;printer » out 2&amp;gt; out # works
  printer &amp;gt; out 2» out #doesn’t work&lt;/p&gt;

&lt;p&gt;#Alternatives
  printer &amp;amp;&amp;gt; out
  printer &amp;gt; out 2&amp;gt;&amp;amp;1
  printer 2&amp;gt;out 1&amp;gt;&amp;amp;2&lt;/p&gt;

&lt;p&gt;Want: Give the top 10 most commonly used words&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;sort wordCollection&lt;/td&gt;
      &lt;td&gt;uniq -c&lt;/td&gt;
      &lt;td&gt;head # problem&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sort wordCollection&lt;/td&gt;
      &lt;td&gt;uniq -c&lt;/td&gt;
      &lt;td&gt;sort&lt;/td&gt;
      &lt;td&gt;tail # works&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sort wordCollection&lt;/td&gt;
      &lt;td&gt;uniq -c&lt;/td&gt;
      &lt;td&gt;sort -k1,1rn -k2,2&lt;/td&gt;
      &lt;td&gt;head # sort takes in arguments -k as key; 1,1 = first character r = reverse order(descending) n = sort in numerical order, 2 break ties&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sort wordCollection&lt;/td&gt;
      &lt;td&gt;uniq -c&lt;/td&gt;
      &lt;td&gt;sed ‘s_6&lt;em&gt;12&lt;/em&gt;’&lt;/td&gt;
      &lt;td&gt;sort&lt;/td&gt;
      &lt;td&gt;tail # Use sed to replace 6s with 12s and then sort lexigraphically&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sort wordCollection&lt;/td&gt;
      &lt;td&gt;uniq -c&lt;/td&gt;
      &lt;td&gt;sed ‘s_6&lt;em&gt;12&lt;/em&gt;’&lt;/td&gt;
      &lt;td&gt;sort -k1,1nr -k2,2&lt;/td&gt;
      &lt;td&gt;head&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;egrep:&lt;/p&gt;

&lt;p&gt;^ - match beginning of line&lt;br /&gt;
$ - match end of a line&lt;br /&gt;
^$, ^a$&lt;br /&gt;
. - matches any single character&lt;br /&gt;
? - matches preceeding pattern 0 or 1 times&lt;br /&gt;
* - 0 or more&lt;br /&gt;
+ - 1 or more&lt;/p&gt;

&lt;p&gt;Note: abc* != (abc)*
ab, abccc, abcccccc, in comparison to abc, abcabc, abcabcabc&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-12-2016---lecture-4&quot;&gt;May 12, 2016 - Lecture 4&lt;/h2&gt;
&lt;p&gt;Recall: compute payday (last Friday of the month); report nicely&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

answer() {
  if [ $1 -eq 31 ]; then # inside a fn - $1, $2 etc are the args to the function
    echo &quot;This month: the 31st&quot;
  else
    echo &quot;This month: the ${1}th&quot;
  fi
}

answer $(cal | awk &#39;{print $6}&#39; | egrep &quot;[0-9]&quot; | tail -1) # the whole thing after the dollar sign is ${1}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generalize to any month:&lt;/p&gt;

&lt;p&gt;cal June 2016 # gives calendar for June 2016&lt;br /&gt;
Want: let payday June 2016 gives June 2016’s payday&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

answer() {
  if [ $2 ]; then
    preamble=${2}
  else
    preamble=&#39;This month&#39;
  fi

  if [ $1 -eq 31 ]; then
    echo &quot;${preamble}&#39;s payday is on the 31st.&quot;
  else
    echo &quot;${preamble}&#39;s payday is on the ${1}th.&quot;
  fi
}

answer $(cal $1 $2 | awk &#39;{print $6}&#39; | egrep &quot;[0-9]&quot; | tail -1) $1 # if $1 and $2 are supplied, revert back to previous behaviour
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;software-engineering-testingsaka-qa-lmao&quot;&gt;Software Engineering: Testings(aka QA lmao)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;essential part of program development&lt;/li&gt;
  &lt;li&gt;ongoing, not just at the end
    &lt;ul&gt;
      &lt;li&gt;begins &lt;strong&gt;BEFORE&lt;/strong&gt; coding&lt;/li&gt;
      &lt;li&gt;test suites - expected behaviour&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;NOT debugging - cannot debug without first testing&lt;/li&gt;
  &lt;li&gt;cannot guarantee correctness, can only prove wrongness&lt;/li&gt;
  &lt;li&gt;ideally, developer + tester should be different people&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Human Testing&lt;/strong&gt; - Humans look over code, find flaws, code inspection, walkthroughs&lt;br /&gt;
&lt;strong&gt;Machine Testing&lt;/strong&gt; - Run the program on selected input, check against spec, can’t test everything - choose test cases carefully&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Black/White/Grey Box Testing&lt;/strong&gt;: no/full/some knowledge of program implementation&lt;br /&gt;
Start with black box, supplement with white box&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;various classes of input, e.g. numerical ranges, positive/negative&lt;/li&gt;
  &lt;li&gt;Boundaries of valid ranges (edge cases)&lt;/li&gt;
  &lt;li&gt;Multiple simulatenous boundaries (corner cases)&lt;/li&gt;
  &lt;li&gt;Intuition/Experience (“Ayy I’ve seen programs like that before, better try blah lmao”)&lt;/li&gt;
  &lt;li&gt;Extreme cases (e.g. integer overflow; how large can the integer get before it breaks)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;White box - executes all logical paths through the program&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;run through the true part and false branch of conditional statements&lt;/li&gt;
  &lt;li&gt;every way you can go from start to finish should be tested&lt;/li&gt;
  &lt;li&gt;make sure every function you write actually gets called&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Performance Testing&lt;/strong&gt; - Is the program fast enough?&lt;br /&gt;
&lt;strong&gt;Regression Testing&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Make sure new changes to the program don’t break old tests&lt;/li&gt;
  &lt;li&gt;test suites (ALWAYS ADD TESTS; NEVER SUBTRACT), testing scripts&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;module-2-c-ayy&quot;&gt;Module 2: C++ (ayy)&lt;/h2&gt;

&lt;p&gt;Hello World in C:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;

int main() {
  printf(&quot;Hello World!\n&quot;);
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hello World in C++:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;

int main() {
  cout &amp;lt;&amp;lt; &quot;Hello World&quot; &amp;lt;&amp;lt; endl;
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;main MUST return int in C++&lt;/li&gt;
  &lt;li&gt;stdio.h, printf still available in C++&lt;/li&gt;
  &lt;li&gt;preferred C++ I/O: header &lt;iostream&gt;&lt;/iostream&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;std::cout &amp;lt;&amp;lt; ___ &amp;lt;&amp;lt; ____ &amp;lt;&amp;lt; ____  
std::endl = end-of-line
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using namespace std lets you say cout and endl instead of std::cout and std::endl&lt;/p&gt;

&lt;p&gt;Return statement - returns status code to the shell ($?). If left out, main returns 0&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Compiling C++ Programs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On the school Linux environment:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    g++-5 -std=c++14 program.cc -o program
    (-o program is the name of the executable binary (if not specified: a.out))
    // OR
    g++14 program.cc -o program // if you have done A0 and made the alias
    // Run the program by
    ./program
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Input/Output&lt;/strong&gt;&lt;br /&gt;
  3 IO streams: cout - for printing to stdout, cin - for reading from stdin, cerr - for writing to stderr&lt;/p&gt;

&lt;p&gt;Operators: « “put to” - Output, » “get from” - input&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  cerr &amp;lt;&amp;lt; x // x flows to cerr
  cin &amp;gt;&amp;gt; x // input flows to x
  // The operator points in the direction of information flow
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E.g. Add 2 numbers&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;

int main() {
  int x, y;
  cin &amp;gt;&amp;gt; x &amp;gt;&amp;gt; y; // cin ignores whitespace; gets two integers, ignoring whitespace
  cout &amp;lt;&amp;lt; x+y ;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If the input doesn’t contain an integer next - statement fails, value of the var is undefined&lt;/p&gt;

&lt;p&gt;What if the input is exhaustive, before we get two ints? - Same as above&lt;/p&gt;

&lt;p&gt;If the read failed: cin.fail() will be TRUE&lt;br /&gt;
If we got an EOF: cin.fail() and cin.eof() will be both TRUE; cin.eof() not until the attempted read fails&lt;/p&gt;

&lt;p&gt;E.g. Read all ints from stdin, echo one per line to stdout. Stop on bad input or EOF&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int main() {
  int i;
  while(true) {
    cin &amp;gt;&amp;gt; i;
    if (cin.fail()) break;
    cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-17-2016---lecture-5&quot;&gt;May 17, 2016 - Lecture 5&lt;/h2&gt;

&lt;p&gt;E.g. Read all ints from stdin + echo, one per line, to stdout, stop on bad input of EOF&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int main() {
	int i;
	while (true) {
		cin &amp;gt;&amp;gt; i;
		if (cin.fail()) {
			break;
		}
		cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recall: if read fails, cin.fail() will be true; if EOF: cin.fail() and cin.eof() both true, but not until the attepted read fails&lt;/p&gt;

&lt;p&gt;Note: there is an implicit conversion from cin to bool, so cin can be used as a condition. The conversion is that it’s true if fail/bad/eof bits are clear, or false if fail/bad/eof set&lt;/p&gt;

&lt;p&gt;E.g. v2.0&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;int main() {
	int i;
	while (true) {
		cin &amp;gt;&amp;gt; i;
		if (!cin) { // using cin as the condition, means the same thing as the other program
			break;
		}
		cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;
		}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: » is C’s right bitshift operator; a » b shifts a’s bits to the right by b spots&lt;/p&gt;

&lt;p&gt;E.g. 21 » 3; 21 in binary is 10101, push the last 3 digits off the cliff, so it becomes 10 in binary, which is 2; equivalent to dividing by 2 to the b-th power, ignoring remainders&lt;/p&gt;

&lt;p&gt;But when the left hand side is cin, this is the “get from” operator&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;operator &amp;gt;&amp;gt;
 	// inputs: LHS cin (istream), RHS data (variety of types); output: return cin (istream)
 	// This is why we can write: cin &amp;gt;&amp;gt; x &amp;gt;&amp;gt; y &amp;gt;&amp;gt; z; cin &amp;gt;&amp;gt; x produces cin, x gets populated, and now we get cin &amp;gt;&amp;gt; y &amp;gt;&amp;gt; z, and so on.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E.g. v3.0&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;int main() {
  int i;
  while (true) {
    if (!(cin &amp;gt;&amp;gt; i)) { // using it as both a condition and populating i
      break;
    }
    cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E.g. v4.0&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;int main() {
  int i;
  while(cin &amp;gt;&amp;gt; i) { // changing the break statement into a single while loop
    cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E.g. read and echo ints until EOF, skip non-integer input&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;int main() {
  int i;
  while (true) {
    if (!(cin &amp;gt;&amp;gt; i)) {
      if (cin.eof()) {
        break;
      }
      cin.clear(); // clears the fail bit, so that cin is ready to read again
      cin.ignore(); // throws away the next character
    } else {
      cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E.g. Reading strings: type std::string (#include &lt;string&gt;)&lt;/string&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;int main() {
  string s;
  cin &amp;gt;&amp;gt; s;
  cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; endl;
}
// skips leading white space;
// stops at whitespace (reads one word)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What if we want the hvitespace? Use getline(cin, s), it reads from the current position to next newline, into s.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;cout &amp;lt;&amp;lt; 95 &amp;lt;&amp;lt; endl; // prints 95
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What if we want to print a number in hexadecimal?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;cout &amp;lt;&amp;lt; hex &amp;lt;&amp;lt; 95 &amp;lt;&amp;lt; endl;
// this will print 95 in hex, 5f
// hex is std::hex, is the I/O manipulator, reconfigures the
// output string, all subsequent ints are printed in hex
// (FOR THE REST OF ETERNITY, nah jkjk till the program terminates); A bit of an overkill?
cout &amp;lt;&amp;lt; dec; // goes back to decimal

// Other manipulator, SEE NOTES, don&#39;t forget #include &amp;lt;iomanip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Stream abstraction applies to other fsources of data&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Files&lt;/strong&gt; - Read from a file instead of stdin&lt;br /&gt;
	std::ifstream reads from a file&lt;br /&gt;
	std::ofstream writes to a file&lt;/p&gt;

&lt;p&gt;File access in C:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
int main() {
	char s[256];
	FILE *file = fopen(&quot;suite.txt&quot;, &quot;r&quot;); // r = read mode; file is a handle
	while (true) {
		fscanf(file, &quot;%255s&quot;, s);
		if (feof(file)) break;
		printf(&quot;%s\n&quot;, s);
	}
	fclose(file);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;File access in C++:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;fstream&amp;gt;
using namespace std;

int main() {
	ifstream file{&quot;suite.txt&quot;}; // creating and initializing an ifstream opens the file
	string s;
	while (file &amp;gt;&amp;gt; s) {
		cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; endl;
	}
	// IMPORTANT: the file is closed when the variable (in this case, file), goes out of scope; when the program stops, it&#39;s popped of the runtime stack, it then closes.
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Anything you can do do with cin and cout, you can do with an ifstream or an ofstream. ANYTHING.&lt;/p&gt;

&lt;p&gt;E.g. string - attach a stream to a string and read/write it&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;sstream&amp;gt;
// std::istringstream and std::ostringstream
// read from/write to a string

int hi = ..., lo = ...;
ostringstream ss; // think of it as a sock
ss &amp;lt;&amp;lt; &quot;Enter a # between&quot; &amp;lt;&amp;lt; lo &amp;lt;&amp;lt; &quot;and&quot; &amp;lt;&amp;lt; hi; // stuffing the sock with string
string s = ss.str(); // cuts open the sock and gets the string
cout &amp;lt;&amp;lt; s &amp;lt;&amp;lt; endl;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E.g. convert a string to a #&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;int n;
while (true) {
  cout &amp;lt;&amp;lt; &quot;Enter a number&quot; &amp;lt;&amp;lt; endl;
  string s;
  cin &amp;gt;&amp;gt; s;
  istringstream ss {s};
  if (ss &amp;gt;&amp;gt; n) break; // stop if you get int
  cout &amp;lt;&amp;lt; &quot;I said,&quot;;
}
cout &amp;lt;&amp;lt; &quot;You entered&quot; &amp;lt;&amp;lt; n &amp;lt;&amp;lt; endl;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example revisited - echo numbers, skip non-numbers&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;int main() {
  string s;
  while (cin &amp;gt;&amp;gt; s) {
    istringstream ss {s};
    int n;
    if (ss &amp;gt;&amp;gt; n) {
      cout &amp;lt;&amp;lt; n &amp;lt;&amp;lt; endl;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;strings&quot;&gt;Strings&lt;/h2&gt;

&lt;p&gt;In C, array of char (char* or char[]), terminated by IO. Must manage own memory: get morememory when strings grow; Easy to overwrite IO and corrupt program&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In C++, strings grow as needed, and are thus safer.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;string s{&quot;Hello&quot;}; // it&#39;s still an array (C-style string);
// C++ string created from C string on initialization
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;String Operations:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Equality Inequality, s1 == s2, s1 != s2&lt;/li&gt;
  &lt;li&gt;Comparison: s1 &amp;lt;= s2 (lexicographical comparison)&lt;/li&gt;
  &lt;li&gt;Length: s.length()&lt;/li&gt;
  &lt;li&gt;Extract individual characters: s[0], s[1] etc.&lt;/li&gt;
  &lt;li&gt;Concatenation: s3 = s1 + s2, s3 += s4&lt;/li&gt;
  &lt;li&gt;More details: SEE NOTES&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Default Function Parameters&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void printSuiteFile(String name = &quot;suite.txt&quot;) {
  // default value, must be last
  ...
}

printSuiteFile(&quot;suite2.txt&quot;);
printSuiteFile(); // prints from suite.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: optional params must be last; if you leave out two parameters, they have to be the last two; 3,3 etc.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-18-2016---tutorial-2&quot;&gt;May 18, 2016 - Tutorial 2&lt;/h2&gt;

&lt;h2 id=&quot;shell-scripting&quot;&gt;Shell Scripting&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Exit codes are important; non-zero return/exit value = ERROR&lt;/li&gt;
  &lt;li&gt;Write to the correct stream&lt;/li&gt;
  &lt;li&gt;Scoping for subroutines, anything defined befored a subroutine is visible(and modifiable) in the subroutine, except positional arguments ($1, $2, …)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;testing&quot;&gt;Testing&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Don’t have to worry about invalid inputs&lt;/li&gt;
  &lt;li&gt;Testing is hard&lt;/li&gt;
  &lt;li&gt;Try sanity checks (“No one could make this mistake”)&lt;/li&gt;
  &lt;li&gt;Good coverage: boundary/edge and corner cases, equivalence classes, weird cases&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Possible Test Cases&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Equivalence courses: small, medium, and large values of the target&lt;/li&gt;
  &lt;li&gt;Boundary/edge cases: test containing 0 as target&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;c-io&quot;&gt;C++ I/O&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;DO NOT USE C I/O&lt;/li&gt;
  &lt;li&gt;3 default streams: cout, cerr, cin&lt;/li&gt;
  &lt;li&gt;If a read from cin fails, &lt;strong&gt;all subsequent reads will fail&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;make-io-more-robust&quot;&gt;Make I/O More Robust&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Reading from cin could fail in two ways
    &lt;ul&gt;
      &lt;li&gt;EOF&lt;/li&gt;
      &lt;li&gt;got unexpected input&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;When a read fails, a flag goes up in cin
    &lt;ul&gt;
      &lt;li&gt;cin.fail() will be true&lt;/li&gt;
      &lt;li&gt;Only cin.fail() will be true if it was an error&lt;/li&gt;
      &lt;li&gt;Both cin.fail() and cin.eof() will be true if it was EOF&lt;/li&gt;
      &lt;li&gt;How to clear: cin.clear() -&amp;gt; put all cin flags down and turn it into a valid state&lt;/li&gt;
      &lt;li&gt;How to continue: cin.ignore(); order is important: clear then ignore&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;If you want the entire line, use getline(cin, s)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;strings-1&quot;&gt;Strings&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Encapsulates something like char* in C&lt;/li&gt;
  &lt;li&gt;Has length, insert, delete, search methods&lt;/li&gt;
  &lt;li&gt;Can be accessed like an array&lt;/li&gt;
  &lt;li&gt;include&lt;string&gt;&lt;/string&gt;&lt;/li&gt;
  &lt;li&gt;at(index): checks for bounds and throws an exception if out of bounds&lt;/li&gt;
  &lt;li&gt;[index]: does not check for bounds&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-19-2016---lecture-6&quot;&gt;May 19, 2016 - Lecture 6&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Overloading&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;C: Functions with different parameter lists cannot share the same name&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;int negInt(int n) { return -n; }
int negBool(bool b) { return !b; }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;C++: Functions with different parameter lists can share the same name&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;int neg(int n) { return -n; }
int neg(bool b) { return !b; }
// example of overloading
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Compiler uses number of types of arguments to decide which neg is being called.&lt;/p&gt;

&lt;p&gt;Overloads must differ in number of type of arguments, not just on the return type. We’ve seen this before: », « (operators, could be right shift/left shift, or could be input and output; the behaviour depends on types of args)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Structs&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Node {
  int data;
  Node *next;
}; // don&#39;t forget the semicolon

Node n1{5, nullptr}; // nullptr is the syntax for a null pointer in C++.
// Do not say NULL or 0 in this class!!!!!!!
// 0 will be always treated as a number, not pointer

const Node n2 = n1; // constant struct means that its fields
// cannot be changed; n2 is an immutable copy of n1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Parameter Passing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Recall:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void inc(int n) {
  n = n + 1;
  // ...
}
int x = 5;
inc(x);
cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; endl; // prints 5; call-by-value
// inc gets a copy of x and modifies the copy, not the original
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sol’n: If a function needs to modify its arugument - pass a pointer&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void inc(int n) {
  *n = *n + 1;
  // ...
}
int x = 5;
inc(&amp;amp;x); // x&#39;s address passed by value, inc changes value at that address, visible to caller
cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; endl; // prints 6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Question: Why cin » x and not cin » &amp;amp;x?&lt;br /&gt;
Answer: C++ has another pointer-like type: references&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References (IMPORTANT!!!)&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;int y = 10;
int &amp;amp;z = y; // NEW. Ampersand after int.
// z is an lvalue reference to int (which is y)
// Reference is like a constant pointer, similar to int *const z = &amp;amp;y;
// (z is a constant pointer to an int; z will always point to y implied by const)
// (but y is not constant; you can change y however you like)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;References are like constant pointers with automatic dereferencing.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;z = 12; // NOT *z = 12
int \*p = &amp;amp;z; // &amp;amp;z gives the address of y.
// No matter what you do to z, you do it y.
// In all cases, z behaves exactly like y. z is an alias for y.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Things you CANNOT do with lvalue references&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;leave them uninitialized, because they are constant, cannot assign later
    &lt;ul&gt;
      &lt;li&gt;must be initialized with something that actually has an address (an lvalue) since references are pointers&lt;/li&gt;
      &lt;li&gt;E.g.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;int &amp;amp;x = 3; // WRONG: WONT COMPILE!
// because 3 is not an address, it&#39;s a constant literal
int &amp;amp;x = y + z; // WRONG!
int &amp;amp;x = y; // GOOD
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;create pointer to a reference: int &amp;amp;* x; // WRONG
    &lt;ul&gt;
      &lt;li&gt;reference to a pointer is legal: int *&amp;amp; x;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;create a reference to a reference: int &amp;amp;&amp;amp; x = …; // means something different (will discuss later)&lt;/li&gt;
  &lt;li&gt;create an array of references: int &amp;amp;a[] = {x, x, x}; // given the similarity between arrays and pointers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Things you CAN do with lvalue references&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pass as function parameters:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void inc(int &amp;amp;n) { // const pointer to the argument (x), thus changes to n affect x
  n = n + 1; // no pointer dereferencing
}
int x = 5;
inc(x);
cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; endl; // prints 6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Why does cin » x work? It takes x by reference&lt;/p&gt;

&lt;p&gt;istream &amp;amp;operator » (istream &amp;amp;in, int &amp;amp;n);&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pass-by-value&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;int f(int n) {...} // copies the argument
// if the argument is big, copying is expensive

struct ReallyBig{}; // Massive struct with thousands of fields
int f(ReallyBig rb) {...} // copying would be slow

int g(ReallyBig &amp;amp;rb) {...} // pass as reference, no copy, it&#39;s an alias, fast
// this could change rb in the caller, in contrast to pass by value, which guarantees
// no changes to rb itself after calling

int h(const ReallyBig &amp;amp;rb) {...} // pass constant reference, no copy, fast, and the parameter cannot be changed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Advice: prefer pass-by-const-reference over pass-by-value for anything larger than an int, unless the function needs to make a copy anyway - then maybe pass by value. DEFAULT SHOULD BE PASS-BY-CONST-REF. Sizeof reference is same as size of a pointer&lt;/p&gt;

&lt;p&gt;Also:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;int f(int &amp;amp;n) {...}
int g(const int &amp;amp;n) {...}

f(5); // LMAO FAILS WON&#39;T COMPILE, because 5 does not have an address;
// can&#39;t initialize an lvalue reference (n) to a literal value;
// if n changes, can&#39;t change the literal 5

g(5); // OK; since n can never be changed, the compiler will allow this
// How though? The compiler creates a temporary location to hold 5, so that n has something to point at
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That’s why const ref is so CRITICALLY IMPORTANT.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dynamic Memory Allocation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;C:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;int *p = malloc(n * sizeof(int));
free(p);
// Don&#39;t use these in this course though
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;C++: new/delete&lt;/p&gt;

&lt;p&gt;E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Node {
  int data;
  Node *next;
}

Node *np = new Node; // allocates a Node on the heap and np points to it
// ...
delete np;
// all local variables reside on the stack
// deallocated (popped) when their scope ends
// Allocated memory is on the heap, it stays there until you get rid of it
// Remains allocated until delete is called
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you don’t delete - MEMORY LEAK&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Arrays on the heap&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Node *myArray = new Node[10];
// ...
delete [] myArray; // The square brackets have to be there
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Node getMeANode() {
  // copy to caller&#39;s frame, expensive
    Node n;
    return n;
}

Node &amp;amp;getMeANode() {
  // WORST. Returns a ref (essentially a pointer) to
  // stack-allocated data, which is dead on return
    Node n;
    return n;
}

Node *getMeANode() {
  // fast-ish and safe, not returning pointer to dead data
  // caller responsible for delete when done
    Node *np = new Node;
    return np;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Considering all options, do No.1.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Operator Overloading&lt;/strong&gt;&lt;br /&gt;
Give our own meanings to C++ operators for types we create&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Vec {
    int x, y;
}

Vec operator+(const Vec &amp;amp;v1, const Vec &amp;amp;v2) {
  Vec v{v1.x+v2.x, v1.y+v2.y}
  return v;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-24-2016---lecture-7&quot;&gt;May 24, 2016 - Lecture 7&lt;/h2&gt;

&lt;h2 id=&quot;preprocessor-variables&quot;&gt;Preprocessor Variables&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We can also define preprocessor symbols via the compiler; with gcc, syntax is -Dvname or -Dvname=val (-DX)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ifdef&lt;/strong&gt; and &lt;strong&gt;ifndef&lt;/strong&gt; directives: these check if a preprocessor variable has been defined (a use for simply defining variables); can be used to debug; #ifdef DEBUG to conditionally print stuff out to debug code; can offload run time to compile time
    &lt;ul&gt;
      &lt;li&gt;syntax:
  &lt;code&gt;
  g++14 -DDEBUG program.cpp // set DEBUG
 &lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;separate-compilation&quot;&gt;Separate Compilation&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;To help readability and create modularity we can split our programs into composable modules. Each module consist of &lt;strong&gt;interface&lt;/strong&gt; (type definitions and prototypes for functions, .h file, contains declarations, won’t allocate space for the variables) and &lt;strong&gt;implementation&lt;/strong&gt; (full details, allocates space for variables/functions, .cpp file, contains definitions)&lt;/li&gt;
  &lt;li&gt;Example: Let’s take the vector struct and overloaded addition operator we created and put in a module so that it can be used by other files; create vec.h and vec.cpp&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;// vec.h
struct Vec {
  int x, y;
};

Vec operator+(const Vec &amp;amp;v1
              const Vec &amp;amp;v2); // constant reference to vectors, do not modify the originals

// ---------------------------------------
// vec.cpp
#include &quot;vec.h&quot;
// to get the struct definition from the interface file

Vec operator+(const Vec &amp;amp;v1, const Vec &amp;amp;v2) {
  return {v1.x + v2.x, v1.y + v2.y};
}

// main.cpp
#include &quot;vec.h&quot;
using namespace std;

int main() {
  Vec x {1,2};
  Vec y {3,4};
  Vec v = x + y;
  cout &amp;lt;&amp;lt; v.x &amp;lt;&amp;lt; &quot;, &quot; &amp;lt;&amp;lt; v.y &amp;lt;&amp;lt; endl;
  return 0;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;when compiling:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;g++14 -c vec.cpp // -c oppresses linking, creates .o (object) file
g++14 -c main.cpp
g++14 vec.o main.o -o main
./main
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;global-variables&quot;&gt;Global Variables&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Consider we want to want to define a global variable in a module&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;// abc.h
int globalNum; // Wrong - definition and declaration
// This won&#39;t work, every file that includeds abc.h
// defines a SEPARATE globalNum and the program will not link
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Solution: put the variable in the .cpp file&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;// abc.h
extern int globalNum; // Correct, just declaration
// extern keyword
// -------------------------
// abc.cpp
int globalNum;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;multiple-includes&quot;&gt;Multiple Includes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Always put #include guards in .h files (ifdef, define, endif)&lt;/li&gt;
  &lt;li&gt;Never put using namespace std in .h files; DO NOT USE ANY NAMESPACES WHATSOEVER!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;classes&quot;&gt;Classes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;The big innovation of OOP - we can put functions inside of structs&lt;/li&gt;
  &lt;li&gt;A class is some struct that can contain functions&lt;/li&gt;
  &lt;li&gt;An object is an instance of a class&lt;/li&gt;
  &lt;li&gt;Member functions (aka Methods) are functions inside a class&lt;/li&gt;
  &lt;li&gt;this = pointer to the object a member function is called on; syntax: this-&amp;gt;var; s.grade() is like calling grade(&amp;amp;s)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-26-2016---lecture-8&quot;&gt;May 26, 2016 - Lecture 8&lt;/h2&gt;

&lt;h2 id=&quot;classes-continued&quot;&gt;Classes Continued&lt;/h2&gt;
&lt;p&gt;Recall: student.cpp, implemented as struct&lt;br /&gt;
This class:&lt;/p&gt;

&lt;h2 id=&quot;initializing-objects&quot;&gt;Initializing Objects&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;When creating an object typicaly the class will have data members that need to be assigned values - initialized&lt;/li&gt;
  &lt;li&gt;As shown in the student example we could use curly braces to initialize our class, and in C++ this is true for most types - this is called &lt;strong&gt;Uniform Initialization&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Ex. Student bob {60, 70, 80} in the student.cpp example&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;constructors&quot;&gt;Constructors&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Without defining how your class should be constructed C++ just takes those values and assigns them to each field in the order they were declared - this is okay, but has limitations&lt;/li&gt;
  &lt;li&gt;A better idea is to include in your class a method that does the initialization - called a &lt;strong&gt;constructor&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ex. in the student.cpp example&lt;/p&gt;

    &lt;p&gt;Student(int assns, int mt, int final) {
    // Debug statement here
    this-&amp;gt;assns = assns;
    this-&amp;gt;mt = mt;
    this-&amp;gt;final = final;
  }
  // default value given
  Student(int assns=0, int mt=0, int final=0) {
      // …
  }&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;notes-on-initialization&quot;&gt;Notes on Initialization&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Sometimes variables are initialized with the assignment operator&lt;/p&gt;

    &lt;p&gt;int x = 5;
  string s = “hello”;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;And sometimes with (), especially when invoking Constructors&lt;/p&gt;

    &lt;p&gt;int x(5);
string s(“Hello”)
Student bob(60, 70, 80)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;An exception to this: std::vector&lt;/p&gt;

    &lt;p&gt;std::vector B{1,3,5} // contains elements 1,3,5
std::vector V(5) // of size 5
std::vector G{1} // actually contains element 1; curly brackets -&amp;gt; element rather than size&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Also,&lt;/p&gt;

    &lt;p&gt;int x = 2.0; // the decimal will get chopped off
int x {2.0} // COMPILER ERROR&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A class is a struct itself, an object is an actual variable of that type&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;default-constructor&quot;&gt;Default Constructor&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Every class comes with a default (zero-argument) constructor which calls: you can create an object but set its values later&lt;/li&gt;
  &lt;li&gt;As soon as you declare your own constructor, you lose the default&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section&quot;&gt;#&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;What about if our class contains a constant field or a reference field?&lt;/li&gt;
  &lt;li&gt;For example let’s consider adding an ID field to our student class, this should be a const value that never changes but is different for each initialized student object&lt;/li&gt;
  &lt;li&gt;Where to initialize them though? Struct definition (i.e. create an ID field in the struct; const int id = 0;)? In the body of the constructor?&lt;/li&gt;
  &lt;li&gt;Problem: const int should be initialized&lt;/li&gt;
  &lt;li&gt;Solution:&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;object-creation-steps&quot;&gt;Object Creation Steps&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Space is allocated&lt;/li&gt;
  &lt;li&gt;Fields are constructed&lt;/li&gt;
  &lt;li&gt;Constructor body runs&lt;/li&gt;
  &lt;li&gt;The moddile step is the missing piece of the puzzle where our initialization must go!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mil&quot;&gt;MIL&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;The member initialization list is part of our constructor that specifies how to initialize object and non-static data members of our class&lt;/li&gt;
  &lt;li&gt;Can be used for any non-static memebers&lt;/li&gt;
  &lt;li&gt;Initialized in order of declaration in struct&lt;/li&gt;
  &lt;li&gt;Is more efficient, when the constructor is doing the same thing as the MIL, when there is a class inside a class (school class in student class)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ex.&lt;/p&gt;

    &lt;p&gt;Student(): assns{assns}, mt{mt}, final{final}, id{id} {&lt;/p&gt;

    &lt;p&gt;}&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;copy-constructor&quot;&gt;Copy Constructor&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;What happens when you use the assignment opeartor to instantiate an object?&lt;/li&gt;
  &lt;li&gt;Ex.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Student a {60,70,80}
Student b = a;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;b will be initialized via the copy constructor&lt;/li&gt;
  &lt;li&gt;All classes have an implicit copy constructor that just copies all regular data fields and calls copy constructors on all object fields&lt;/li&gt;
  &lt;li&gt;Ex.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &quot;Node.h&quot;
Node::Node(const Node &amp;amp;in) : data(in.data) {
  if (in.next) {
    next = new Node(*in.next);
  } else {
    next = nullptr;
  }
}
// recursively copies the nodes
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;implicit-methods&quot;&gt;Implicit Methods&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Every class comes with
    &lt;ul&gt;
      &lt;li&gt;A default constructor&lt;/li&gt;
      &lt;li&gt;A copy constructor (just copies all fields)&lt;/li&gt;
      &lt;li&gt;A copy assignment operator&lt;/li&gt;
      &lt;li&gt;A destructor&lt;/li&gt;
      &lt;li&gt;A move constructor&lt;/li&gt;
      &lt;li&gt;A move assignmenet operator&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;notes-on-copy-constructor&quot;&gt;Notes on Copy Constructor&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;The copy constructor (implicit or otherwise) is called when
    &lt;ul&gt;
      &lt;li&gt;An object is initialized by another object&lt;/li&gt;
      &lt;li&gt;When an object is passed by value&lt;/li&gt;
      &lt;li&gt;When an object is returned by a function&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;implicit-conversion&quot;&gt;Implicit conversion&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Be careful with a constructor that takes only one parameter - this will create an implicit conversion&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;destructor&quot;&gt;Destructor&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Necessary if your class has any memory allocated on the heap&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-31-2016---lecture-9&quot;&gt;May 31, 2016 - Lecture 9&lt;/h2&gt;

&lt;h2 id=&quot;recall&quot;&gt;Recall&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Copy constructor&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Node *n = new Node {1, new Node {2, new Node {3, nullptr}}};
Node m = *n; // copy ctor
Node *p = new Node {*n}; // copy ctor
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Simple copy of fields -&amp;gt; only the first node actually copied (shallow copy)&lt;/li&gt;
  &lt;li&gt;If you want a deep copy (copy the whole list), must write your own copy constructor&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Node {
	// ...
	Node (const Node &amp;amp;other) :
    data {other.data},
    next {other.next? new Node {*other.next} : nullptr};
    // recursively copies the rest of the list
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The copy constructor is called:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;When an object is initialized with another object (same class)&lt;/li&gt;
  &lt;li&gt;When an object is passed by value&lt;/li&gt;
  &lt;li&gt;When an object is return ed by a function&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are exceptions to all 3.&lt;/p&gt;

&lt;p&gt;Note: Careful with chars that can take ONE argument&lt;/p&gt;

&lt;p&gt;E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Node {
  Node (int d): data {d}, next {nullptr} {}
  // ...
};

//Single-argument ctors create implicit conversions

Node n(4);
Node n{4};
// but also
Node n = 4;
// You can also do this now
int f (Node n) {...}
f(4);
// You can do this because 4 is implicitly converted to Node
// How converting C string to C++ string makes sense; generally not a good idea though
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Danger: accidentally pass an int to a function expecting a Node
  + Compiler does not signal an error
  + Potential errors not caught&lt;/p&gt;

&lt;p&gt;Good idea: disable the implicit conversion&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Node {
  // ...
  explicit Node (int d): data {d}, next {nullptr} {}
};

// Now these are still fine
Node n(4);
Node n{4};
// But these are not
Node n = 4;
int f (Node n) {...}
f(4);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;destructors&quot;&gt;Destructors&lt;/h2&gt;

&lt;p&gt;When an obect is destroyed a method called the destructor runs
  + Stack-allocated: goes out of scope
  + Heap-allocated: is deleted&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Specifically&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The destructor body runs&lt;/li&gt;
  &lt;li&gt;Destructor is called on all the fields (called in reverse declaration order; if declared from top to bottom, then destroyed from bottom to top)&lt;/li&gt;
  &lt;li&gt;Space is deallocated&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Class comes with a destructor (just calls destructors for all fields that are objects)&lt;/p&gt;

&lt;p&gt;When do we need to write one?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Node *np = new Node {1, new Node {2, new Node {3, nullptr}}};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If np goes out of scope, the pointer is reclaimed (it was on the stack), the memory is leaked.&lt;/p&gt;

&lt;p&gt;If we say delete np; it calls *np’s destructor, which doesn’t do anything (it only frees the very first node (1), 2, 3 are leaked)&lt;/p&gt;

&lt;p&gt;Write a destructor to ensure the whole list is freed:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Node {
  // ...
  ~Node() { // tilda has the connotation of negation; NOT; opposite of constructor

    delete next; // recursively calls
    // *next&#39;s destructor, thus the whole list is deallocated*
    // do not need to check nullptr
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;copy-assignment-operator&quot;&gt;Copy Assignment Operator&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Student billy {60, 20, 80};
Student jane {billy}; // copy constructor
Student joey; // default constructor
joey = billy; // copy, but not construction
// Above is copy assignment operator, uses compiler-supplied default
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You need to write your own copy assignmennt operator when there is heap-allocated memory&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Node {
  // ...
  Node &amp;amp;operator=(const Node &amp;amp;other) {
    // returns Node &amp;amp; so that cascading works
    data = other.data;
    // next = other.next would be wrong (shallow copy)
    // because that&#39;s what the default one does
    delete next; // otherwise it leaks, because the old object could point to real data
    // in order to replace the old data, need to delete old data
    next = other.next? new Node {*other.next} : nullptr;
    return *this;
    // DANGEROUS STILL //*
  }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Very dangerous.&lt;br /&gt;
Why?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Node n {1, new Node {2, new Node {3, nullptr}}};
n = n; // deletes n, then tries to copy n to n, UNDEFINED BEHAVIOUR

// For example:
*p = *q; // where p and q points to the same address
a[i] = a[j]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When writing operator=, ALWAYS watch for self-assignment&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Node &amp;amp;operator=(const Node &amp;amp;other) {
  if (this == &amp;amp;other) {
    return *this;  //*
  }
    data = other.data;
    delete next;
    next = other.next? new Node {*other.next} : nullptr; //*
    return *this;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Better:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Node &amp;amp;operator=(const Node &amp;amp;other) {
  if (this == &amp;amp;other) {
    return *this;
  }

  Node *tmp = next;
  next = other.next ? {new Node{*other.next} : nullptr};
  data = other.data;
  delete tmp;
  return *this;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Above works even if other is in my list, if new fails, Node will still be ain a valid state&lt;/p&gt;

&lt;h2 id=&quot;alternative---idiom&quot;&gt;Alternative - idiom&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;utility&amp;gt;

struct Node {
  // ...
  void swap(Node &amp;amp;other) {
    using std::swap;
    swap(data, other);
    swap(next, other.next);
  }

  Node &amp;amp;operator=(const Node &amp;amp;other) {
    Node tmp = other; // copy other
    swap(tmp); // swap with my old data
    return *this; // tmp deallocated, frees my old data
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Rvalues + Rvalue references&lt;/p&gt;

&lt;p&gt;Recall: an levalue is anything an address, an lvalue reference (&amp;amp;) is always initialized by an lvalue&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Node n{1, new Node{2, nullptr}};
Node m = n; // copy ctor
Node m2;
m2 = n; // copy assignment operator

Node plusOne(Node n) {
  for (Node *p = &amp;amp;n; p; p=p-&amp;gt;next) {
    ++p-&amp;gt;data;
  }
  return n;
}

Node m3 = plusOne(n); // What runs? What is other here?
// Compiler creates a temporary object to hold the result of plusOne, so other has something to point at
// copy ctor deep copies data drom the temp object
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-2-2016---lecture-10&quot;&gt;June 2, 2016 - Lecture 10&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Need to be able to tell whether other is a reference to a temporary object or a standalone object&lt;/li&gt;
  &lt;li&gt;C++: rvalue reference Node&amp;amp;&amp;amp; is a reference be a temporary object (aka rvalue) of type Node&lt;/li&gt;
  &lt;li&gt;Version of the ctor that takes a Node&amp;amp;&amp;amp;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Node {
    // ...
    Node(Node &amp;amp;&amp;amp;other) { }
    // ... called a move ctor
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What should it do? Steal other’s data.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;...
Node (Node &amp;amp;&amp;amp;other):
    data{other.data},
    next{other.next} { // steal data
        other.next = nullptr; // other will be destroyed, so point to null so that the Nodes it points to won&#39;t get destroyed
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Similarly:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Node m;
m = addOne(n); // Assignment from temporary
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;More assignment operator:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Node &amp;amp;operator=(Node &amp;amp;&amp;amp;other) {
    // steal other&#39;s data
    // destroy my old data
    // so we can just swap without copy

    using std::swap;
    swap(data, other.data);
    swap(next, other.next);
    return *this;

    // temp object will be destroyed and take our old data with it
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you don’t define move ctor/move assignment operator, copy versions will be used.&lt;br /&gt;
If the move ctor/move assignment operator is defined, it will replace calls to the copy ctor/copy assignment operator where the argument is a temporary (an rvalue).&lt;/p&gt;

&lt;h2 id=&quot;copymove-elision&quot;&gt;Copy/Move Elision&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Vec makeAVec() {
    return {0,0}; // invokes basic ctor
}

Vec v = makeAvec(); // what operations run here? copy ctor? move ctor?
// Not sure, in g++: just the basic ctor, no cpy ctor, no move ctor
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In some circumstances, the compiler is allowed to skip calling copy/move ctors (but doesn’t have to). In the example above, makeAVec writes its result ({0,0}) directly into the space occupied by v in the caller, rather than copy it later&lt;/p&gt;

&lt;p&gt;Example:
```c++
void doSomething(Vec v) { // pass-by-value copy ctor&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;doSomething(makeAVec());
```&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;result of makeAVec() written directly into the parameter - no copy&lt;/li&gt;
  &lt;li&gt;This is allowed, even if dropping ctor calls would change the behaviour of the program (e.g. if the ctors print something)&lt;/li&gt;
  &lt;li&gt;In this course, you are not expect edt oknow the eact circumstances under which copy/move elision is allowed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you need all of the ctors to run:
&lt;code&gt;
g++14 -fno-elide-constructors
&lt;/code&gt;
But this can slow down your program considerably.&lt;/p&gt;

&lt;p&gt;In summary: &lt;strong&gt;Rule of 5 (Big 5)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you need a custom version of any one of:
    1. copy ctor
    2. copy assignment operator
    3. destructor
    4. move ctor
    5. move assignment operator
Then you usually need a custom version of all 5. Because the circumstances you need to create one of them, will probably mean that these also apply to the other 4.&lt;/p&gt;

&lt;p&gt;Notice: operator= is a member function, not a standalone function. When an operator is a member, “this” plays the role of the LHS argument.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Vec {
    int x, y;
    // ...
    Vec operator+(const Vec &amp;amp;other) {
        return {x+other.x, y+other.y};
    }
    Vec operator*(const int k) {
        return {k*x, k*y}; // implements v*k
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;How do we do k*v? Can’t be a member-first arg not vec. Must be a non-member (as before)&lt;/p&gt;

&lt;p&gt;I/O operators:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Vec {
    // ...
    ostream &amp;amp;operator&amp;lt;&amp;lt; (ostream &amp;amp;out) {
        return out &amp;lt;&amp;lt; x &amp;lt;&amp;lt; &#39;&#39; &amp;lt;&amp;lt; y;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What’s wrong? It makes Vec the LHS and ostream the RHS. Use as v « cout&lt;/p&gt;

&lt;p&gt;So define «, » as standalone functions.&lt;/p&gt;

&lt;p&gt;Certain operators must be members:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;operator=&lt;/li&gt;
  &lt;li&gt;operator[]&lt;/li&gt;
  &lt;li&gt;operator()&lt;/li&gt;
  &lt;li&gt;operator-&amp;gt;&lt;/li&gt;
  &lt;li&gt;operatorT (where T is a type)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;arrays-of-objects&quot;&gt;Arrays of Objects&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Vec {
    int x, y;
    Vec (int x, int y):
    x{x}, y{y}
    {

    }
};

Vec *vp = new Vec[10]; // ERROR
Vec moreVectors[15]; // ERROR
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These want to call the default ctor on each item, but there isn’t one. Thus cannot initialize.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Options:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Provide a default ctor&lt;/li&gt;
  &lt;li&gt;For stack arrays:&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Vec moreVecs[3] = {...};
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;For heap arrays, create an array of pointers&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Vec **vp = new Vec*[5];
vp[0] = new Vec{0,0};
vp[1] = new Vec{1,3}; // etc...
// then delete

for (int i = 0; i &amp;lt; 5; ++i) {
    delete vp[i];
}

delete [] vp;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;separate-compilation-for-classes&quot;&gt;Separate Compilation for Classes&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;// Node.h

#ifndef _NODE_H_
#define _NODE_H_

struct Node {
    int data;
    Node *next;
    explicit Node(int data, Node *next=nullptr);
    Node(const Node &amp;amp;other);
}
#endif

// Node.cc

#include &quot;Node.h&quot;

// Prefix with Node::
// Double colon :: = scope resolution operator

Node::Node(int data, Node *next): data{data}, next{next} {}
Node::Node(const Node &amp;amp;other): data{other.data}, next{} {}

// Node::___ means ____ in the context of struct Node
// :: is like . for classes
// . where LHS is a class (or namespace), not an object

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;const-objects&quot;&gt;Const Objects&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;int f(const Node &amp;amp;n) {...}    
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Const objects arise often, especially in params.&lt;br /&gt;
What is a const object? - Fields cannot change.&lt;/p&gt;

&lt;p&gt;Can we call methods on a const object?&lt;br /&gt;
Issue: method might change fields (violate const)&lt;/p&gt;

&lt;p&gt;A: Yes. We can call methods that promise not to mofidy fields&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Student {
    int assns, mt, final;
    float grade() const; // doesn&#39;t modify fields, so declare it const
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Compiler checks that const methods don’t modify fields. Only const methods can be called on const objects.&lt;/p&gt;

&lt;p&gt;Now consider: Want to collect usage stats on Student obj&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Student  {
    // ...
    int numMethodCalls = 0;
    float grade () { // now can&#39;t call on const Students
        ++numMethodCalls;
        return ;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But mutating numMethod calls affect only the &lt;strong&gt;physical constness&lt;/strong&gt; of the object (actual bit pattern), not its &lt;strong&gt;logical constness&lt;/strong&gt; (whether it acts like a constant).&lt;/p&gt;

&lt;p&gt;Want to update numMethodCalls, even if the object is const.
Solution: Declare the field mutable&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Student {
    // ...
    mutable int numMethodCalls = 0;
    // can be changed, even if the object is const

    float grade () {
        ++numMethodCalls;
        return 100;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-7-2016---lecture-11&quot;&gt;June 7, 2016 - Lecture 11&lt;/h2&gt;

&lt;h2 id=&quot;static-fields-and-methods&quot;&gt;Static Fields and Methods&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Student {
  mutable int nCalls = 0;
  float grade() const {
    ++nCalls;
    return 0; // blah blah blah
  }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nCalls tracks the number of times a method was called on a &lt;strong&gt;particular object&lt;/strong&gt;. What if we want the number of calls over all Student objects? Or what if we want to know how many Students were created?&lt;/p&gt;

&lt;h3 id=&quot;static-members&quot;&gt;Static Members&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Associated with the class itself, NOT any particular object&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Student {
  // ...
  static int numInstances;
  Student() {
    ++numInstances;
  }
};

// in .cc file
int Student::numInstances = 0;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Static fields MUST be defined external to the class&lt;/p&gt;

&lt;h3 id=&quot;static-member-functions&quot;&gt;Static Member Functions&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Don’t depend on any particular instance (no “this” parameter) (not methods)&lt;/li&gt;
  &lt;li&gt;Can only access static fields and call other static member functions&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Student {
  // ...
  static int numInstances;
  static void printNumInstances() {
    cout &amp;lt;&amp;lt; numInstances &amp;lt;&amp;lt; endl;
  }
};

// main
Student billy {};
Student jane {};
Student::printNumInstances(); // prints 2
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;invariants-and-encapsulation&quot;&gt;Invariants and Encapsulation&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Node {
  int data;
  Node *next;
  Node(int d, Node *n);
  ~Node() {
    delete next;
  }
};

// main

Node n1{1, new Node{2, nullptr}};
Node n2{3, nullptr};
Node n3{4, &amp;amp;n2};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What happens when these go out of scope? n3’s destructor tries to delete &amp;amp;n2, which is on the stack, not on the heap! Thus, UNDEFINED BEHAVIOUR!&lt;/p&gt;

&lt;p&gt;Class Node relies on an assumption, called an &lt;strong&gt;invariant&lt;/strong&gt;, a statement that shold always be true. In this case, the invariant is that next is either:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a nullptr, or&lt;/li&gt;
  &lt;li&gt;a valid pointer to the heap&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But we cannot guarantee this invariant. Because we cannot control the user, we cannot guarantee any invariant because the user can interfere. For example, in a stack implementation, the invaraint is: last item pushed is the first item popped. If you cannot rely on variants, it would be hard to reason about programs&lt;/p&gt;

&lt;p&gt;To solve: Encapsulation - we want clients to treat objects as “black boxes” (or capsules)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Implementation details are sealed away&lt;/li&gt;
  &lt;li&gt;Can only interact via the provided methods&lt;/li&gt;
  &lt;li&gt;Can create an abstraction, regain us control&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Vec {
  Vec(int x, int y); // by default, public
private:
  int x, y; // can only be accessed from inside Vec
public:
  vec Operator+(const Vec &amp;amp;v); // anyone can access
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In general, we want fields to be private, and only methods should be public. Introducing class:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Vec { // constructors etc are public
  int x, y; // private by default now
public:
  Vec(int x, int y);
  Vec operator+(const Vec &amp;amp;v);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Only difference between struct and class: default visibility, otherwise completely identical&lt;/p&gt;

&lt;p&gt;Now we fix the linked list class&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;// list.h

class List {
  struct Node; // private nested class
  Node *theList = nullptr;
public:
  void addToFront(int n);
  int ith(int i);
  ~List();
  // ... etc etc
};

// list.cc
#include &quot;list.h&quot;
struct List::Node {
  // nested class
  int data;
  Node *next;
  Node(int d, Node *n): { // MIL

  }
  ~Node() {
    delete next;
  }
};

void List::addToFront(int n) {
  theList = new Node(n, theList);
}

int List::ith(int i) {
  Node *cur = theList;
  for (int j = 0; j &amp;lt; i; j++) {
    cur = cur-&amp;gt;next;
  }
  return cur-&amp;gt;data;
}

List::~List() {
  delete theList;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Only List can create/manipulate Node objects, thus we can guarantee the invariance that next is either a nullptr or a valid pointer to the heap. BUT, now we can’t traverse the entire list in linear time. Repeated calling ith(int i) to traverse the whole list -&amp;gt; O(n&lt;sup&gt;2&lt;/sup&gt;) time. On the other hand, we can’t expose the Nodes or we will lose encapsulation&lt;/p&gt;

&lt;h2 id=&quot;se-topic-design-patterns&quot;&gt;SE Topic: Design Patterns&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Certain problems arise frequently&lt;/li&gt;
  &lt;li&gt;Keep track of good solutions and use them in similiar situations&lt;/li&gt;
  &lt;li&gt;Good Solutions Hall of Fame&lt;/li&gt;
  &lt;li&gt;If you have a situation like this, then this technique may solve it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this case, we use the &lt;strong&gt;Iterator Pattern&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a class that manages access to nodes (abstraction of a pointer)&lt;/li&gt;
  &lt;li&gt;Walk through the list without exposing the next pointers&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class List {
  struct Node; // nested inner class
  Node *theList;
public:
  class Iterator {
    Node *p;
  public:
    explicit Iterator(Node *p): p{p} {}

    int &amp;amp;operator*() { // reference because might want to modify data
      return p-&amp;gt;data;
    }

    Iterator &amp;amp;opeartor++() {
      p = p-&amp;gt;next;
      return *this;
    }

    bool operator==(const Iterator &amp;amp;other) {
      return (p == other.p);
    }

    bool operator!=(const Iterator &amp;amp;other) {
      return !(*this == other);
    }
  };

  // standalone functions
  Iterator begin() {
    return Iterator(theList);
  }

  Iterator end() {
    return Iterator(nullptr);
  }

  // ... other list functions follow

};

// client

int main() {
  List l;
  l.addToFront(1);
  l.addToFront(2);
  l.addToFront(3);
  for (List::Iterator it = l.begin(); it != l.end(); ++it) {
    cout &amp;lt;&amp;lt; *it &amp;lt;&amp;lt; endl;
  }
  // prints 1 2 3
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Shortcut when writing the Iterator for loop: we can use automatic type deduction&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;auto x = y; // auto gives x y&#39;s type

for (auto it = l.begin(); it != l.end(); it++) {
  cout &amp;lt;&amp;lt; *it &amp;lt;&amp;lt; endl;
}

// &quot;shortercut&quot; - Range-based for loop
for (auto n : l) {
  cout &amp;lt;&amp;lt; n &amp;lt;&amp;lt; endl;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Range-based for loop: available for all classes with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Methods begin, end that produce Iterators&lt;/li&gt;
  &lt;li&gt;Iterator must support !=, prefix ++, unary *&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we want to modify list items(or save copying):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;for (auto &amp;amp;n : l) { // use reference
  ++n;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-9-2016---lecture-12&quot;&gt;June 9, 2016 - Lecture 12&lt;/h2&gt;

&lt;p&gt;But List client can create Iterators directly by doing the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;auto it = List::Iterator{nullptr};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This violates encapsulation as the client should be calling begin and end, which we provide.&lt;/p&gt;

&lt;p&gt;We could preserve encapsulation by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Making Iterator’s constructor private
    &lt;ul&gt;
      &lt;li&gt;Then client cannot call List::Iterator&lt;/li&gt;
      &lt;li&gt;But then neither can List&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Solution&lt;/strong&gt;: give list privileged access to Iterator -&amp;gt; make it a &lt;strong&gt;friend&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class List {
  // ...
public:
  class Iterator {
    Node *p;
    explicit Iterator(Node *p);
  public:
    // ... Iterator functions
    // friend
    friend class List; // List now has access to all members of Iterator
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, List can still create Iterators, but client can only create Iterators by calling begin and end.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Give your classes as few friends as possible, because it weakens encapsulation. Once again, we want to keep fields private.&lt;/p&gt;

&lt;p&gt;What if you want to give clients access to fields? “Getters” and “Setters” methods&lt;/p&gt;

&lt;p&gt;E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Vec {
  int x, y;
public:
  int getX() const { return x; }
  void setY(int newY) { y = newY; }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What about operator «? It needs x and y, but it cannot be a member function&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If getX, getY are defined, then we are ok&lt;/li&gt;
  &lt;li&gt;But if you don’t want to provide getX and getY, make operator« a friend function that is standalone&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;// .h file

class Vec {
  // ...
public:
  // ...
  friend std::ostream &amp;amp;operator&amp;lt;&amp;lt;(std::ostream &amp;amp;out, const Vec &amp;amp;v);
};

// .cc file

ostream &amp;amp;operator&amp;lt;&amp;lt;(ostream &amp;amp;out, const Vec &amp;amp;v) {
  return out &amp;lt;&amp;lt; v.x &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; v.y;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;tools-topic-make&quot;&gt;Tools Topic: Make&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Separate Compilation&lt;/strong&gt;: lectures/c++/tools/example1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;g++14 -c list.cc
g++14 -c node.cc
g++14 -c iter.cc
g++14 -c main.cc
g++14 main.o iter.o node.o list.o -o myprogram
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Why do we do this? So we don’t have to recompile files that haven’t changed.&lt;/p&gt;

&lt;p&gt;But how do we keep track of what’s changed and what hasn’t? Let Linux help you with &lt;strong&gt;make&lt;/strong&gt;. We can create a Makefile that says which files depend on which other files. Refer to /lectures/c++/tools/example1/Makefile&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;myprogram: main.o list.o node.o iter.o # (myprogram depends on these)
  g++-5 -std=c++14 main.o list.o node.o iter.o -o myprogram # (tab in the beginning)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then from the command line:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;make # builds the whole project
# Now change iter.cc
make # recompiles iter.cc and then relinks myprogram
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Command &lt;strong&gt;make&lt;/strong&gt;: builds the first target (myprogram) in the Makefile. And what does myprogram depend on? main.o, list.o, node.o, iter.o. So make recursively builds these if necessary. Make uses a dependency graph.&lt;/p&gt;

&lt;p&gt;For example, iter.cc changes, then iter.cc is now newer than iter.o (by checking the last modified date and time). Thus make rebuilds iter.o. Now iter.o is newer than myprogram, thus make rebuilds myprogram&lt;/p&gt;

&lt;p&gt;Make can also build specific targets, for example make node.o&lt;/p&gt;

&lt;p&gt;Common practice: put a target clean: at the bottom of the Makefile to remove all binaries&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.PHONY: clean # (to avoid a file called clean if present)
clean:
  rm *.o myprogram
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To do a full rebuild:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;make clean
make
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can generalize with variables. In the Makefile:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CXX = g++-5
CXXFLAGS = -std=c++14 -Wall # (turns on all warnings)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;iter.o: iter.cc iter.h
${CXX} ${CXXFLAGS} -c iter.cc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Shortcut: for any make of the form&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x.o: x.cc a.h b.h
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can leave out the build command and make would guess that the build command is ${CXX} ${CXXFLAGS}, so we can just write&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;-c x.cc -o x.o
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Biggest problems:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Writing dependencies&lt;/li&gt;
  &lt;li&gt;Maintaining them if they change&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Can get help from g++:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;g++14 -MMD -c iter.cc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This creates iter.o &lt;strong&gt;and&lt;/strong&gt; iter.d, and iter.d contains:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;iter.o: iter.cc list.h node.h
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now just include iter.d in the Makefile:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CXX = g++-5
CXXFLAGS = -std=c++14 -Wall -MMD
OBJECTS = main.o list.o iter.o node.o
DEPENDS = ${OBJECTS:.o=.d}
EXEC = myprogram

${EXEC}:${OBJECTS}
  ${CXX} ${CXXFLAGS} ${OBJECTS} -o ${EXEC}

-include ${DEPENDS}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As the project expands, just add .o files to the Makefile&lt;/p&gt;

&lt;h2 id=&quot;system-modelling&quot;&gt;System Modelling&lt;/h2&gt;

&lt;p&gt;Building an object-oriented system involves identifying abstractions and formalizing the relationships among items. It helps to map out relationships. A popular standard is the Unified Modelling Language (UML). Modelling a class, write its name, fields (optional), and methods (optional), and use + to denote public and - to denote private&lt;/p&gt;

&lt;h3 id=&quot;relationship-composition&quot;&gt;Relationship: Composition&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Vec {
  int x, y;
public:
  Vec(int x, int y);
};

class Basis {
  Vec v1, v2;
};

// client
Basis b;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will not compile because Basis cannot initialize v1, v2, because the default constructor for b calls default constructors for v1, v2, which do not exist.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Basis {
  Vec v1, v2;
public:
  Basis(): v1{1, 0}, v2{0, 1} {} // default constructor, now it will compile
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Embedding one object (v1) into another (b), called &lt;strong&gt;composition&lt;/strong&gt;. The relationship between Basis and Vec is called “owns-a”, as a Basis “owns a” two Vecs.&lt;/p&gt;

&lt;p&gt;If A owns a B, then typically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;B has no identity outside of A&lt;/li&gt;
  &lt;li&gt;If A is destroyed, then B is destroyed&lt;/li&gt;
  &lt;li&gt;If A is copied, then B is copied (deep copy)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-14-2016---lecture-13&quot;&gt;June 14, 2016 - Lecture 13&lt;/h2&gt;

&lt;p&gt;A car owns 4 wheels&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A wheel is a part of a car&lt;/li&gt;
  &lt;li&gt;Destroy the car -&amp;gt; Destroy the wheels&lt;/li&gt;
  &lt;li&gt;Copy the car -&amp;gt; Copy the wheels&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Implementation: Composition of classes&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;UML: A -&amp;gt; B  (filled arrow), means A owns some number of B’s, can annotate with multiplicities&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;relationship-aggregation&quot;&gt;Relationship: Aggregation&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Compare parts in a car (“owns a”) vs. car parts in a catalogue&lt;/li&gt;
  &lt;li&gt;A “has a” relationship (aggregation): the catalogue contains the partsm but the parts have an independent existence&lt;/li&gt;
  &lt;li&gt;If “A has B”, then typically:
    &lt;ul&gt;
      &lt;li&gt;B has an existence apart from its association with A&lt;/li&gt;
      &lt;li&gt;If A is destroyed, then B lives on&lt;/li&gt;
      &lt;li&gt;If A is copied, B is not (shallow copy) - copies of A share the same B&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Implementation: Pointer fields&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;E.g. Parts in a catalogue, ducks in a pond; UML: Pond -&amp;gt; Duck (hollow arrow)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Pond {
  Duck *ducks[maxDucks];
};

class Car {
  Person *driver;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;specializationgeneralization-inheritance&quot;&gt;Specialization/Generalization (Inheritance)&lt;/h2&gt;

&lt;p&gt;Suppose you want to track your collection of books&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Book {
  string title, author;
  int numPages;
public:
  Book(...); // ctor
  // other functions
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For textbooks, we also want the &lt;strong&gt;topic&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Text {
  string title, author;
  int numPages;
  string topic;
public:
  Text(...); // Text ctor
  // other functions
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For comic books, we want the &lt;strong&gt;hero&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Comic {
  string title, author;
  int numPages;
  string hero;
public:
  Comic(...); // Comic ctor
  // other functions
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is okay, but it doesn’t capture relationships among Book, Text, and Comic. And how do we create an array (or other collection) with a mix of these?&lt;/p&gt;

&lt;p&gt;We could:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Use a union - *BAD (subverts the type system)**&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;union BookTypes{Book *b; Test *t; Comic *c;};
BookTypes myBooks[20];
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;Array of void * &lt;strong&gt;BAD (pointer to anything)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Rather, observe that Text and Comic are kinds of Books - Books with extra features.&lt;/p&gt;

&lt;p&gt;C++ - model with Inheritance&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;// Base class (superclass)
class Book {
  string title, author;
  int numPages;
public:
  Book(...);
  // ...
};

// derived classes (or subclasses)
class Text : public Book {
  string topic;
public:
  Text(...);
  // ...
};

class Comic : public Book {
  string hero;
public:
  Comic(...);
  // ...
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Derived classes &lt;strong&gt;inherit&lt;/strong&gt; fields and methods from the base class, so Text, Comic get title, author, numPages fields. Any method that can be invoked on Book can be called on Text and Comic.&lt;/p&gt;

&lt;p&gt;Who can see these members?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;title, author, numPages - private in Book; Text and Comic cannot see them, even subclasses can’t see them&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How do we initialize Text? Need title, author, numPages (these are needed to initialize the Book part) and topic (specific to Text)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Text : public Book {
  string topic;
public:
  Text(string title, string author, int numPages, string topic) :
  title{title}, author{author}, numPages{numPages}, topic{topic} {}
  // WRONG!!!
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Wrong for 2 reasons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;title etc are not accessible to Text&lt;/li&gt;
  &lt;li&gt;Once again, when an object is constructed:
    &lt;ol&gt;
      &lt;li&gt;space is allocated&lt;/li&gt;
      &lt;li&gt;superclass part is constructed (NEW!)&lt;/li&gt;
      &lt;li&gt;fields constructed&lt;/li&gt;
      &lt;li&gt;constructor body runs&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And in this case, superclass cannot be constructed because Book has no default constructor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fix:&lt;/strong&gt; invoke Book’s constructor in Text’s MIL&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Text : public Book {
  string topic;
public:
  Text(string title, string author, int numPages, string topic):
  Book{title, author, numPages}, topic{topic} {}
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If a superclass has no default constructor, subclass must invoke a superclass constructor in its MIL. Good reasons to keep superclass’s fields inaccessible to subclasses. If you want to give subclasses access to certain members, use &lt;strong&gt;protected&lt;/strong&gt; access:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Book {
  protected:
    string title, author;
    int numPages; // accessible to Book and its subclasses
  public:
    Book(...);
    // ...
};

// subclasses
class Text: public Book {
  // ...
  public:
    // ...
    void addAuthor(string newAuthor) {
      author += newAuthor;
    }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: Not a good idea to give subclasses unlimited access to fields; &lt;strong&gt;Better&lt;/strong&gt; - make fields private, but provide protected accessors&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Book {
  string author, title;
  int numPages;
protected:
  string getTitle() const;
  void setAuthor(string newAuthor);
public:
  Book(...); // ctor
  bool isItHeavy() const;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Relationship among Book, Text, and Comic is called “is a”: A Text is a Book; A Comic is a Book. UML: Text-&amp;gt;(hollow)Book&amp;lt;-(hollow)Comic. Implement “is a” by public inheritance.&lt;/p&gt;

&lt;p&gt;Now consider the method isItHeavy. When is a Book heavy?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For ordinary Books, &amp;gt; 200 pages&lt;/li&gt;
  &lt;li&gt;For Texts, &amp;gt; 500 pages&lt;/li&gt;
  &lt;li&gt;For Comics, &amp;gt; 30 pages&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Book {
  // ...
public:
  // ...
  bool isItHeavy() const {
    return numPages &amp;gt; 200;
  }
};

class Text {
  // ...
public:
  // ...
  bool isItHeavy() const {
    return numPages &amp;gt; 500;
  }
};

class Comic {
  // ...
public:
  // ...
  bool isItHeavy() const {
    return numPages &amp;gt; 30;
  }
};

// =====================
// client
Book b {&quot;A small book&quot;, &quot;1Q84&quot;, 50};
Comic c {&quot;A big comic&quot;, &quot;Waterloo Memers&quot;, 40, &quot;Mr Paninos&quot;};
cout &amp;lt;&amp;lt; b.isItHeavy(); // false, it&#39;s a small Book as 50 &amp;lt; 200
cout &amp;lt;&amp;lt; c.isItHeavy; // true, it&#39;s a big comic as 40 &amp;gt; 30
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since public inheritance means “is a”, we can do:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Book b = Comic{&quot;A big comic&quot;, &quot;Balkan Chevaps&quot;, 40, &quot;We Deliver&quot;};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt; Is b heavy? b.isItHeavy() returns true or false? Which isItHeavy() run, Book::isItHeavy or Comic::isItHeavy?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; No, it is not heavy. Book::isItHeavy is what runs. Why? Book contains 3 fields: title, author, numPages, while Comic contains 4 fields: title, author, numPages, and hero. Thus,&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Book b = Comic {...};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;tries to create a Comic object when there’s only space for a Book. Comic is then &lt;strong&gt;sliced (“hero” field is chopped off)&lt;/strong&gt;. Comic is coerced (forced) into a Book. Basically, Book b = Comic {…} converts a Comic into a Book and Book::isItHeavy runs.&lt;/p&gt;

&lt;p&gt;When accessing objects through pointers, &lt;strong&gt;slicing is unnecessary and does not occur&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Comic c {&quot;friend5ever&quot;, &quot;Sedra Smith&quot;, 40, &quot;RealisticAFMStudent&quot;};
Book *pb = &amp;amp;c;
Comic *pc = &amp;amp;c;
cout &amp;lt;&amp;lt; pc-&amp;gt;isItHeavy(); // true; 40 &amp;gt; 30, heavy Comic
cout &amp;lt;&amp;lt; pb-&amp;gt;isItHeavy(); // false, 40 &amp;lt; 200, not heavy Book
// same behaviour as the slicing example, Book::isItHeavy runs as pointer is Book
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Still, Book::isItHeavy runs when we access pb-&amp;gt;isItHeavy(). Some objects behaves differently, depending on what type of pointer points to it.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-16-2016---lecture-14&quot;&gt;June 16, 2016 - Lecture 14&lt;/h2&gt;

&lt;p&gt;Compiler uses the type of the pointer (or type of the reference) to decide which isItHeavy to run. It does not consider the actual type of the object. So a Comic is a Comic only if a comic pointer points to it. Pointer »&amp;gt; Actual object.&lt;/p&gt;

&lt;p&gt;Then, how do you make Comic act like a Comic, even when pointed at by a Book pointer? &lt;strong&gt;Solution: declare the method virtual&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Book {
  // ... fields
protected:
  int numPages;
public:
  Book(...);
  virtual bool isItHeavy() const; // use of virtual here
};

class Comic : public Book {
  // ...
public:
  bool isItHeavy() const override; // override keyword in virtual function
};

// =================
// client
Comic c {&quot;RealisticMathStudent&quot;, &quot;UWGo&quot;, 40, &quot;Quest God&quot;};
Book *pb = &amp;amp;c;
Book *rb = c;
Comic &amp;amp;pc = &amp;amp;c;
Book b = c;

cout &amp;lt;&amp;lt; pb-&amp;gt;isItHeavy(); // true, Comic::isItHeavy
cout &amp;lt;&amp;lt; rb.isItHeavy(); // true, Comic::isItHeavy
cout &amp;lt;&amp;lt; pc-&amp;gt;isItHeavy(); // true, Comic::isItHeavy
cout &amp;lt;&amp;lt; b.isItHeavy(); // FALSE, Book::isItHeavy
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;virtual-and-polymorphism&quot;&gt;Virtual and Polymorphism&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Virtual Methods&lt;/strong&gt;: chosen based on the actual types of the object at &lt;strong&gt;runtime&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;Dynamic Dispatch&lt;/strong&gt;: the process of virtual methods being resolved to the correct one at runtime is known as dynamic dispatch. It is the process of chossing which method to call at runtime based on the type of a value. We use this by putting &lt;strong&gt;virtual&lt;/strong&gt; in the superclass.&lt;/p&gt;

&lt;p&gt;E.g. My book collection&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Book *myBooks[20];
for (int i = 0; i &amp;lt; 20; i++) {
  cout &amp;lt;&amp;lt; myBooks[i]-&amp;gt;isItHeavy &amp;lt;&amp;lt; endl;
  // This uses Book::isItHeavy for Books, Text::isItHeavy for Texts
  // and Comic::isItHeavy for Comics
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It accommodates multiple types under one abstraction -&amp;gt; &lt;strong&gt;Polymorphism&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Note: This is why a function&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void f(istream &amp;amp;in);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;can be passed an ifstream, because ifstream is a subclass of istream.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DANGER&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class One {
  int x, y;
public:
  One(int x = 0, int y = 0): x{x}, y{y} {}
};

class Two : public One {
  int z;
public:
  Two(int x = 0, int y = 0, int z = 0): One{x, y}, z{z} {}
};

void f(One *a) {
  a[0] = {6, 7};
  a[1] = {8, 9};
}

// ===============
// clientdas
Two myArray[] = [{1, 2, 3}, {4, 5, 6}];
f(myArray);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Data Misaligned&lt;/strong&gt;: MyArray is originally [1 2 3][4, 5, 6]; after calling f, it becomes [6 7 8][9 5 6].&lt;/p&gt;

&lt;p&gt;Note: NEVER use arrays of objects polymorphically. If you want polymorphism, use an array of pointers&lt;/p&gt;

&lt;h3 id=&quot;destructor-revisited&quot;&gt;Destructor Revisited&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class X {
  int *x;
public:
  X(int n): x{new int[n]} {}
  ~X() {
    delete [] x;
  }
}

class Y : public X {
  int *y;
public:
  Y(int m, int n): X{n}, y{new int[m]} {}
  ~Y() {
    delete [] y;
  }
}

// =================
// client
X *myX = new Y{5, 10};
delete myX; // LEAKS!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Why?&lt;/strong&gt; The last line calls ~X, not ~Y, so only x, but not y, is freed.&lt;br /&gt;
To ensure that deletion through a superclass pointer calls the subclass destructor, &lt;strong&gt;declare the destructor virtual&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class X {
  // ...
public:
  // ...
  virtual ~X();
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;ALWAYS&lt;/strong&gt; make the destructor virtual in classes that are meant to have subclasses, even if the virtual destructor does nothing. If a class is NOT meant to have subclassses, declare the destructor &lt;strong&gt;final&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;pure-virtual-methods-and-abstract-classes&quot;&gt;Pure Virtual Methods and Abstract Classes&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Student { // there are 2 kinds of Students, regular and co-op
protected:
  int numCourses;
public:
  // ...
  virtual int fees() const;
};

class Regular : public Student {
public:
  int fees() const override; // virtual - override
  // regular fees
};

class Coop : public Student {
public:
  int fees() const override; // virtual - override
  // coop fees
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What do we put for Student::fees? We don’t know, because every Student should be either regular or co-op.&lt;/p&gt;

&lt;p&gt;We can explicitly given Student::fees &lt;strong&gt;NO implementation&lt;/strong&gt; -&amp;gt; &lt;strong&gt;pure virtual method&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Student {
  // ...
public:
  virtual int fees() const = 0; // =0, NO IMPLEMENTATION
  // Called pure virtual method = no implementation
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A class with a &lt;strong&gt;pure virtual method cannot be instantiated&lt;/strong&gt;, and the class is called an &lt;strong&gt;abstract class&lt;/strong&gt;. Its purpose is to organize subclasses.&lt;/p&gt;

&lt;p&gt;Subclasses of abstract classes are abstract as well, &lt;strong&gt;unless they implement ALL pure virtual methods.&lt;/strong&gt; Non-abstract classes are called &lt;strong&gt;concrete classes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;UML: virtual and pure virtual methods: italics; abstract class: class name in italics; protected: #&lt;/p&gt;

&lt;h3 id=&quot;inheritance-and-copymove&quot;&gt;Inheritance and Copy/Move&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Book {
  // ...
public:
  // Defines all copy/move operators here
};

class Text : public Book {
  // ...
public:
  // DOES NOT define copy/move operators
};

// ===============
// client
Text t {&quot;Algorithms&quot;, &quot;CLRS&quot;, 500, &quot;CS&quot;};
Text t2 = t; // No copy ctor in Text, what happens?
// calls Book&#39;s copy ctor,
// then goes field by field (i.e. default behaviour) for the Text part
// same for other opeartors
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To write your own:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;// copy ctor
Text::Text(const Text &amp;amp;other) : Book{other}, topic{other.topic} {}

// copy assignment opor
Text &amp;amp;Text::operator=(const Text &amp;amp;other) {
  Book::operator=(other); // superclass copy assignment
  topic = other.topic; // assign field
  return *this;
}

// move ctor
Text::Text(Text &amp;amp;&amp;amp;other): Book{std::move(other)}, topic{std::move(other.topic)} {

}

// move assignment opor
Text &amp;amp;Text::operator=(Text &amp;amp;&amp;amp;other) {
  Book::operator=(std::move(other));
  topic = std::move(other.topic);
  return *this;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Even though other “points” at an rvalue, other itself is an lvalue. std::move(x) forces lvalue x to be treated as an rvalue, so that move versions of operators can run&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-21-2016---lecture-15&quot;&gt;June 21, 2016 - Lecture 15&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Text t1{...};
Text t2{...};
Book *pb1 = &amp;amp;t1;
Book *pb2 = &amp;amp;t2;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What if we do&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;*pb1 = *pb2; // ?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then Book::operator= runs, &lt;strong&gt;partial assignment&lt;/strong&gt; - copies only the Book part. How do we fix this? Try making operator= virtual.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Book {
  // ...
public:
  // ...
  virtual Book &amp;amp;operator=(const Book &amp;amp;other); // make the copy assignment opor virtual
};

class Text : public Book {
  // ...
public:
  Text &amp;amp;operator=(const Book &amp;amp;other) override; // override - virtual in subclass
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: different return types, but parameter types must be the same or it’s not an override, and thus WILL NOT COMPILE.&lt;/p&gt;

&lt;p&gt;Thus assignment of a Book object to a Text variable would be allowed.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Text t {...};
Book b {...};
Text *pt = &amp;amp;t;
Book *pb = &amp;amp;b;
*pt = *pb; // uses a book to assign to a text, BAD

// ALSO
Comic c {...};
Comic *pc = &amp;amp;c;
*pt = *pc; // BAD
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If operator= is non-virtual -&amp;gt; partial assignment through base class pointers -&amp;gt; BAD&lt;br /&gt;
If operator= is virtual -&amp;gt; compiler allows mixed assignment -&amp;gt; BAD&lt;/p&gt;

&lt;p&gt;Recommendation: All superclasses should be &lt;strong&gt;abstract&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class AbstractBook {
  string title, author;
  int numPages;
protected:
  AbstractBook &amp;amp;opeartor=(const AbsratctBook &amp;amp;other);
  // prevents assignment through base class pointers from compiling
  // but implementation still available to subclasses
public:
  AbsratctBook(...);
  virtual ~AbsratctBook() = 0; // &quot;be abstract&quot;
  // need at least one pure virtual method to make it abstract
  // if you don&#39;t have any, make dtor pure virtual
};

class NormalBook : public AbstractBook {
public:
  NormalBook(...);
  ~NormalBook();
  NormalBook &amp;amp;operator=(const NormalBook &amp;amp;other) {
    AbstractBook::operator=(other);
    return *this;
  }
};

// ============
// client
*pb1 = *pb2; // DOES NOT COMPILE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Prevents mixed &amp;amp; partial assignment&lt;/strong&gt;.&lt;br /&gt;
Note: virtual destructor must always be implemented, even if it is pure virtual.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;AbsratctBook::~AbstractBook() {}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;templates&quot;&gt;Templates&lt;/h2&gt;

&lt;p&gt;Huge topic - just the highlights here&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class List {
  struct Node;
  Node *theList;
  // ...
};

struct List::Node {
  int data;
  Node *next;
  // ...
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt; what if you want to store something else? Whole new class? Nah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Templates&lt;/strong&gt;: class parameterized by a type&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;template &amp;lt;typename T&amp;gt; class Stack {
  int size;
  int cap;
  T *data;
public:
  // ...
};

Stack(){...}
void push(T x){...}
T top(){...}
void pop(){...}

template &amp;lt;typename T&amp;gt; class List {
  struct Node {
    T data;
    Node *next;
  };
  Node *theList;
public:
  class Iterator {
    Node *p;
    explicit Iterator(Node *p): p{p} {}
  public:
    T &amp;amp;operator*() {
      return p-&amp;gt;data;
    }
    // ...
  };

  T ith(int i) {
    // ...
  }

  void addToFront(T n) {
    // ...
  }
};

// ==================
// client
List &amp;lt;int&amp;gt; l1;
List &amp;lt;List&amp;lt;int&amp;gt;&amp;gt; t2;
t1.addToFront(3);
t2.addToFront(l1);

for (List&amp;lt;int&amp;gt;::Iterator it = l1.begin(); it != l1.end(); it++) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Compiler specializes template at the source code level, before compilation begins. Refer to /string/istream/ostream templates.&lt;/p&gt;

&lt;h2 id=&quot;the-standard-template-library-stl&quot;&gt;The Standard Template Library (STL)&lt;/h2&gt;

&lt;p&gt;Large number of useful templates&lt;/p&gt;

&lt;p&gt;E.g. dynamic length arrays: vectors&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;vector&amp;gt;
using namespace std;

vector&amp;lt;int&amp;gt; v {4, 5}; // vector&amp;lt;int&amp;gt; v(4,5) = {5,5,5,5};
v.emplace_back(6); // {4,5,6}
v.emplace_back(7); // {4,5,6,7}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looping over vectors:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;for (int i = 0; i &amp;lt; v.size(); i++) {
  cout &amp;lt;&amp;lt; v[i] &amp;lt;&amp;lt; endl;
}

// OR
for (vector&amp;lt;int&amp;gt;::iterator i = v.begin(); i != v.end(); i++) {
  cout &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; endl;
}

// To iterate in reverse
for (vector&amp;lt;int&amp;gt;::reverse_iterator = v.rbegin(); it != v.end(); it++) {
  // ...
}

// To remove last element
v.pop_back();

// Use iterators to remove items from inside the vector
auto it = v.erase(v.begin()); // erase element 0
it = v.erase(v.begin() + 3); // erase element 3
// returns an iterator to first item after the erase

it = v.erase(it); // erase item pointed to by it
it = v.erase(v.end() - 1); // erase last item

v[i]; // i-th element of v; unchecked: out of bounds -&amp;gt; undefined behaviour
v.at(i); // checked version of v[i], what happens if i is out of bounds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Question&lt;/strong&gt;: What should happen?&lt;/p&gt;

&lt;p&gt;Problem: Vector can detect the error, but doesn’t know whatto do about it&lt;/p&gt;

&lt;p&gt;C Solution: function returns a status code, or set the global variable errno; encourages programmers to ignore error checks&lt;/p&gt;

&lt;p&gt;C++ Solution: when an error condition occurs, the function raises an exception&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-23-2016---lecture-16&quot;&gt;June 23, 2016 - Lecture 16&lt;/h2&gt;

&lt;h2 id=&quot;exceptions&quot;&gt;Exceptions&lt;/h2&gt;

&lt;p&gt;What happens? By default, execution stops. But we can write &lt;strong&gt;handler&lt;/strong&gt; to &lt;strong&gt;catch&lt;/strong&gt; exceptions and deal with them. vector &lt;T&gt;::at throws exception out_of_range.&lt;/T&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;stdexcept&amp;gt;
// ...
try {
  cout &amp;lt;&amp;lt; v.at(1000) &amp;lt;&amp;lt; endl; // statements that may raise an exception
  // go in the try block
} catch (out_of_range) {
  cerr &amp;lt;&amp;lt; &quot;range error\n&quot;;  
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Consider:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void f() {
  throw out_of_range {&quot;f&quot;}; // raise an exception
}

void g() {
  f();
}

void h() {
  g();
}

int main() {
  try {
    h();
  } catch (out_of_range) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What happens?&lt;/p&gt;

&lt;p&gt;main calls h, h calls g, g calls f, f throws, g has no handler for out_of_range, control goes back through the call chain (unwinds the stack) until a handler is found. Control goes all the way back to main, main handles the exception.&lt;/p&gt;

&lt;p&gt;If no one handles the exception, program terminates.&lt;/p&gt;

&lt;p&gt;What is out_of_range? It’s a class.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;throw out_of_range {&quot;f&quot;}; // invokes a ctor with arg &quot;f&quot; and throws it
// &quot;f&quot; is auxiliary information
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To examine auxiliary information:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;try {
  // ...
} catch (out_of_range ex) {
  cout &amp;lt;&amp;lt; ex.what() &amp;lt;&amp;lt; endl; // prints &quot;f&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A handler might do part of the recovery job - execute some corrective code and raise another exception:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;try {
  // ...
} catch (someErrorType s) {
  // ...
  throw someOtherError(...);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or throw the same exception:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;try {
  // ...
} catch (someErrorType s) {
  // ...
  throw;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The difference between throw and throw s. Throw is used when an actual type of s is retained (most cases), it rethrows the same exception object it caught; throw s: s may be a subtype of someErrorType, throw rethrows a new exception of type someErrorType.&lt;/p&gt;

&lt;p&gt;A handler can act as a catch-all:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;try {
  // ...
} catch (...) { // catches all exceptions
  // ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can throw anything you want - doesn’t have to be objects&lt;/p&gt;

&lt;p&gt;Define your own classes (or use appropriate existing ones) for errors. E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class BadInput();

try {
  int n;
  if (!(cin &amp;gt;&amp;gt; n)) {
    throw BadInput{};
  }
} catch (BadInput &amp;amp;) { // catch by ref to prevent slicing
  cerr &amp;lt;&amp;lt; // ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class BaseExn{};
class DerivedExn : public BaseExn{};

void f() {
  DerivedExn d;
  BaseExn &amp;amp;b = d; // BaseExn type
  throw b;
}

try {
  // ...
  f();
  // ...
} catch (DerivedExn &amp;amp;) {
  // ... DerivedExn handler
} catch (BaseExn &amp;amp;) {
  // ... BaseExn handler
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which handler runs? BaseExn handler runs, as the type of the reference (i.e. the static type of the object) determines the handler.&lt;/p&gt;

&lt;p&gt;Some standard exceptions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;length_error - attempting to resize strings/vectors that are too long&lt;/li&gt;
  &lt;li&gt;bad-alloc - new fails&lt;/li&gt;
  &lt;li&gt;ios::failure - I/O streams fail; refer to lectures/c++/exceptions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;NEVER NEVER NEVER let a destructor throw an exception&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If the dtor was executed during stack unwinding while dealing with another exception, you now have two active unhandled exceptions, and the program will terminate immediately&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;design-patterns-continued&quot;&gt;Design Patterns (Continued)&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Guiding Principle&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Program with interfaces not implementations&lt;/li&gt;
  &lt;li&gt;Abstract base classes define the interface&lt;/li&gt;
  &lt;li&gt;Work with pointers to an abstract base class and call their methods&lt;/li&gt;
  &lt;li&gt;Concrete subclasses can be swapped in and out&lt;/li&gt;
  &lt;li&gt;Abstracting over a variety of behaviours&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class List {
  // ...
public:
  class Iterator : public AbstractIterator {
    // ...
  };
};

class Set {
  // ...
public:
  class Iterator : public AbstractIterator {
    // ...
  };
};

class AbstractIterator {
public:
  virtual int &amp;amp;operator*() = 0;
  virtual AbstractIterator &amp;amp;operator++() = 0;
  virtual bool operator==(...) = 0;
  virtual ~AbstractIterator();
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then you can write code that operates over iteartors:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;template &amp;lt;typename T&amp;gt;
void foreach(AbstractIterator start, AbstractIterator end, T f) {
  while (start != end) {
    f(*start); // f must be a callible entity
    ++start;
  }
}
// this works over both Lists and Sets

List l;
foreach(l.begin(), l.end(), someFunction);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-28-2016---lecture-17&quot;&gt;June 28, 2016 - Lecture 17&lt;/h2&gt;

&lt;h2 id=&quot;observer-design-pattern&quot;&gt;Observer Design Pattern&lt;/h2&gt;

&lt;p&gt;aka &lt;strong&gt;publish-subscribe model&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Publisher/Subject - source of data, generates data; Subscribers/Observers - receive data and react to it.&lt;/p&gt;

&lt;p&gt;Sequence of the model calls:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Subject’s state is updated()&lt;/li&gt;
  &lt;li&gt;Subject::notifyObservers() -&amp;gt; calls each observer’s notify();&lt;/li&gt;
  &lt;li&gt;Each observer calls ConcreteSubject::getState() to react accordingly&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;E.g. horse races; subject publishes winners, observers (individual betters) declare victory when their horse wins.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Subject {
  vector &amp;lt;Observers *&amp;gt; observers;
public:
  void attach(Observer *ob) {
    observers.emplace_back(ob); // add to observers
  }

  void detach(Observer *ob) {
    // remove
  }

  void notifyObservers() {
    for (auto &amp;amp;ob; observers) {
      ob-&amp;gt;notify();
    }
  }

  virtual ~Subject() = 0; // make class abstract
};

Subject::~Subject() {} // dtor must have user-defined implementation (since declared pure virtual)

class Observer {
public:
  virtual notify() = 0;
  virtual ~Observer() = 0;
}

class Horserace : public Subject {
  ifstream in; // get data from that file
  string winner;
public:
  Horserace(string source) : in{source};
  bool race(); // true if there was a race, false if EOF
  string getState() {
    return winner;
  }
}

class Bettor : public Observer {
  Horserace *subject;
  string name, myHorse;
public:
  Bettor(...) ... {
    subject-&amp;gt;attach(this);
  }

  void notify() {
    string winner = subject-&amp;gt;getState();
    cout &amp;lt;&amp;lt; (winner == myHorse ? &quot;Win&quot; : &quot;Lose&quot;) &amp;lt;&amp;lt; endl;
  }
}

// main
Horserace hr;
Bettor Larry(hr, &quot;Larry&quot;, &quot;Pig4&quot;);

while (hr.race()) {
  hr.notifyObservers();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Simplifications&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;If only one type of subject, could merge Subject and ConcreteSubject&lt;/li&gt;
  &lt;li&gt;If state is trivial (so that just let notify tells you all you need to know), then don’t need getState()&lt;/li&gt;
  &lt;li&gt;If subject = observer (e.g. cell in a grid in a spreadsheet), could merge these classes&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;decorator-pattern&quot;&gt;Decorator Pattern&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Want to add features to an object at runtime&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;E.g. Operating System: basic window, then add menu, then add scrollbar, and we want to change these at runtime&lt;/p&gt;

&lt;p&gt;class component - interface - operations&lt;/p&gt;

&lt;p&gt;You will provide&lt;/p&gt;

&lt;p&gt;ConcreteComponent - implements the interface&lt;/p&gt;

&lt;p&gt;Decorators all inherit from Decorator, which inherits Component. Thus every Decorator is a Component and every Decorator has a Component&lt;/p&gt;

&lt;p&gt;A window with a scrollbar is a window, and has a pointer to the underlying plain window. Windw with scrollbar and menu is a window and has a pointer to a pointer to a window with scrollbar, which has a pointer to a plain window&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-29-2016---tutorial&quot;&gt;June 29, 2016 - Tutorial&lt;/h2&gt;

&lt;p&gt;protected: acts like private, but subclasses can access superclass fields; within the hierarchy&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct Computer {
  void makeCall() {
    cout &amp;lt;&amp;lt; &quot;Making call&quot; &amp;lt;&amp;lt; endl;
  }
  void test() {
    cout &amp;lt;&amp;lt; &quot;Testing&quot; &amp;lt;&amp;lt; endl;
  }
};

struct Smartphone : public Computer {
  void makeCall() {
    cout &amp;lt;&amp;lt; &quot;Mobile&quot; &amp;lt;&amp;lt; endl;
  }
};

void testCall(Computer&amp;amp; c) {
  c.test();
  c.makeCall();
}

int main() {
  Smartphone lmao;
  testCall(lmao);
  Computer *laptop = new Smartphone;
  laptop-&amp;gt;makeCall();
  lmao.makeCall();
  lmao.test();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;june-30-2016---lecture-18&quot;&gt;June 30, 2016 - Lecture 18&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Midterm got curved&lt;/strong&gt;: Original average 49%, avergae after adjustment 66%&lt;/p&gt;

&lt;h2 id=&quot;design-pattern-template-method-pattern&quot;&gt;Design Pattern: Template Method Pattern&lt;/h2&gt;

&lt;p&gt;We want subclasses to override superclass behaviour, but some aspects must stay the same&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A design pattern where we override some behaviour from a superclass, but not all of it - the superclass is used as a template for the subclass&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;E.g. There are red and green turtles.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;// superclass
class Turtle {
public:
  void draw() { // method to draw turtle and its components
    drawHead();
    drawShell();
    drawFeet();
    // note not virtual as the class is not abstract
    // thus not open for overriding
    // subclasses cannot change the fact that draw must
    // draw head, shell, and feet
  }

private:
  void drawHead(); // not virtual, cannot override
  void drawFeet(); // not virtual, cannot override
  virtual void drawShell() = 0; // pure virtual
  // enables subclasses to override this method
  // gives subclasses a little bit of control
  // but not total control
};

// subclass
class RedTurtle {
  void drawShell() override; // virtual - override
  // draw red shell
};

class GreenTurtle {
  void drawShell() override; // draw green shell
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Class Turtle is like a boilerplate or a template, a fill-in-the-blank form. Has absolutely nothing to do with standard template library (STL). Subclasses cannot change the way a turtle is drawn, i.e. head, shell, feet, but they &lt;strong&gt;can&lt;/strong&gt; change the way the shell is drawn.&lt;/p&gt;

&lt;p&gt;Note: In the Turtle class, drawShell() is a private virtual function, but it is perfectly legal to override, not to call. Subclasses have to call their own drawShell().&lt;/p&gt;

&lt;p&gt;Extension: The Non-Virtual Interface (NVI) Idiom&lt;/p&gt;

&lt;p&gt;A public virtual method is really two things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;public: thus an interface to the client
    &lt;ul&gt;
      &lt;li&gt;indicates provided behaviour with pre/post conditions&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;virtual: thus an interace to subclasses
    &lt;ul&gt;
      &lt;li&gt;a “hook” to insert specialized behaviour&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hard to separate these ideas if they are tied to the same function&lt;/p&gt;

&lt;p&gt;What if you later want to separate the customizable behaviour into 2 functions, maybe with some unchanging code in between? Without changing the public interface?&lt;/p&gt;

&lt;p&gt;How can you make sure overriding functions respect pre/post conditions?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The NVI idiom says:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;All public methods should be non-virtual&lt;/li&gt;
  &lt;li&gt;All virtual methods should be private, or at least, protected&lt;/li&gt;
  &lt;li&gt;Exception: Destructor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class DigitalMedia {
public:
  virtual void play() = 0;
};

// In NVI:
// doPlay is a pass through function
class DigitalMedia {
public:
  void play() {
    // so we can control what happens here
    doPlay();
    // and here
    // and not gonna be any slower, because the compiler will optimize as it sees fit
  }
private:
  virtual void doPlay() = 0;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So now we can add before and after code.&lt;/p&gt;

&lt;p&gt;E.g. Check copyright so I don’t get sued, update play count after the function call, or add another hook: showArt() = 0;&lt;/p&gt;

&lt;p&gt;Extends Template Method - puts &lt;strong&gt;EVERY&lt;/strong&gt; virtual function inside a template method.&lt;/p&gt;

&lt;h2 id=&quot;stl---maps--dictionaries&quot;&gt;STL - Maps = Dictionaries&lt;/h2&gt;

&lt;p&gt;E.g. “Arrays” that map string sto ints&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;map&amp;gt;

std::map&amp;lt;string, int&amp;gt; m;
m[&quot;abc&quot;] = 1;
m[&quot;def&quot;] = 4;
cout &amp;lt;&amp;lt; m[&quot;ghi&quot;] &amp;lt;&amp;lt; endl; // prints 0
// if key not present, it is inserted
// and value is default-constructed (for ints: 0)
cout &amp;lt;&amp;lt; m[&quot;abc&quot;] &amp;lt;&amp;lt; endl; // prints 1

m.erase(&quot;abc&quot;);

if (m.count(&quot;def&quot;)) { // the number is either 0 or 1
  // 0 means not found, and 1 means found
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Iterating over a map: sorted key order&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;for (auto &amp;amp;p : m) {
  cout &amp;lt;&amp;lt; p.first &amp;lt;&amp;lt; &#39; &#39; &amp;lt;&amp;lt; p.second &amp;lt;&amp;lt; endl;
  // first is key, second is value
  // p&#39;s type is std::pair&amp;lt;string, int&amp;gt;&amp;amp; (&amp;lt;utility&amp;gt;)
  // also, p.first and p.second are fields, not methods
  // not private fields?
  // Because no invariant, we can just expose the fields
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;tools-debugger-gdb&quot;&gt;Tools: Debugger GDB&lt;/h2&gt;

&lt;p&gt;To use: compile with -g (enable debugging information)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;g++14 -g myfile.cc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To run the debugger:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gdb ./a.out
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Commands:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;r (run):
    &lt;ul&gt;
      &lt;li&gt;runs the program&lt;/li&gt;
      &lt;li&gt;if the program crashes, it tells you the error&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;bt (backtrace): prints the chain of functions that got you here&lt;/li&gt;
  &lt;li&gt;l (list): lists the source surrounding the current point of execution; gives you context&lt;/li&gt;
  &lt;li&gt;p (print): prints the value of a variable or expression&lt;/li&gt;
  &lt;li&gt;q (quit)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Not all bugs are segfaults though.&lt;/p&gt;

&lt;p&gt;Breakpoints: tell gdb to stop the program so you can see what is going on.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;break f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This says break when entering function f. Or,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;break myfile.cc:15
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This says break on line 15.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;s (step): runs one line&lt;/li&gt;
  &lt;li&gt;c (continue): runs until the next breakpoint&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;design-pattern-visitor-pattern&quot;&gt;Design Pattern: Visitor Pattern&lt;/h2&gt;

&lt;p&gt;For implementing &lt;strong&gt;double dispatch&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Virtual method - chosen based on the actual type (at runtime) of the receiving object.&lt;/p&gt;

&lt;p&gt;What if we want to choose based on two objects?&lt;/p&gt;

&lt;p&gt;UML: Turtle -&amp;gt; (hollow) Enemy &amp;lt;-(hollow) Bullet&lt;br /&gt;
Stick -&amp;gt; (hollow) Weapon &amp;lt;-(hollow) Rock&lt;/p&gt;

&lt;p&gt;We want something like virtual void(Enemy, Weapon)::strike(); (not C++ though)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Enemy {
  virtual void beStruckBy(Weapon &amp;amp;w);
};

class Weapon {
  virtual void strike(Enemy &amp;amp;e);
};

// each of these only does half the job
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Trick to get dispatch on both:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Combine overriding with overloading&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Override&lt;/strong&gt; the virtual beStruckBy function:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Enemy {
public:
  virtual void beStruckBy(Weapon &amp;amp;w) = 0; // pure virtual
};

class Turtle : public Enemy {
public:
  void beStruckBy(Weapon &amp;amp;w) override {
    w.strike(*this); // compiler knows *this is a Turtle
  }
};

class Bullet : public Enemy {
public:
  void beStruckBy(Weapon &amp;amp;w) override {
    w.strike(*this); // compiler knows *this is a Bullet
  }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now &lt;strong&gt;overload&lt;/strong&gt; strike that takes in both Turtle ref and a Bullet ref:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Weapon {
public:
  virtual void strike(Turtle &amp;amp;t) = 0;
  virtual void strike(Bullet &amp;amp;b) = 0;
};

class Stick : public Weapon {
public:
  void strike(Turtle &amp;amp;t) {
    // strike a Turtle with a Stick
  }

  void strike(Bullet &amp;amp;b) {
    // strike a Bullet with a Stick
  }
};

class Rock : public Weapon {
public:
  void strike(Turtle &amp;amp;t) {
    // strike a Turtle with a Rock
  }

  void strike(Bullet &amp;amp;b) {
    // strike a Turtle with a Rock
  }
};

// ===================
// client
Enemy *e = new Bullet;
Weapon *w = new Rock;
e-&amp;gt;beStruckBy(*w); // strike a Bullet with a Rock
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;beStruckBy is a &lt;strong&gt;virtual method&lt;/strong&gt;, so Bullet::beStruckBy() runs. That calls Weapon::strike, and *this is bullet, so Bullet version gets chosen by compiler. The virtual method resolves to Rock::strike(Bullet &amp;amp;).&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;july-5-2016---lecture-19&quot;&gt;July 5, 2016 - Lecture 19&lt;/h2&gt;

&lt;p&gt;Recall: &lt;strong&gt;Visitor Pattern&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Enemy {
public:
  virtual void beStruckBy(Weapon &amp;amp;w) = 0;
  // ...
};

class Turtle : public Enemy {
public:
  void beStruckBy(Weapon &amp;amp;w) override {
    w.strike(*this);
  }
};

class Weapon {
public:
  virtual void strike(Turtle &amp;amp;t) = 0;
  virtual void strike(Bullet &amp;amp;b) = 0;
};

class Stick : public Weapon {
public:
  void strike(Turtle &amp;amp;t) override {
    // strike Turtle with Stick
  }

  void strike(Bullet &amp;amp;b) override {
    // strike Bullet with Stick
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Visitor can be used to add functionality to existing classes without changing or recompiling the classes themselves.&lt;/p&gt;

&lt;p&gt;E.g. Add a visitor to the Book hierarchy&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Book {
public:
  virtual void accept(BookVisitor &amp;amp;bv) {
    bv.visit(*this);
  }
};

class Text : public Book {
  // ...
public:
  void accept(BookVisitor &amp;amp;bv) override {
    bv.visit(*this);
  }
};

class Comic : public Book {
  // ...
public:
  void accept(BookVisitor &amp;amp;bv) override {
    bv.visit(*this);
  }
};

// BookVisitor

class BookVisitor {
public:
  virtual void visit(Book &amp;amp;b) = 0;
  virtual void visit(Text &amp;amp;t) = 0;
  virtual void visit(Comic &amp;amp;c) = 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;In this example&lt;/strong&gt;, accept is beStruckBy, visit is strike, Book is Enemy, and BookVisitor is Weapon.&lt;/p&gt;

&lt;p&gt;Application: Track how many of each kind of book I have: Books (by author), Texts (by topic), and Comics (by hero). Use a &lt;strong&gt;map&amp;lt;string, int&amp;gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Could add virtual void updateMap(…) to each class. Valid.&lt;/p&gt;

&lt;p&gt;Or write a visitor:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Catalogue : public BookVisitor {
  map&amp;lt;string, int&amp;gt; theCat;
public:
  map&amp;lt;string, int&amp;gt; getCatalogue() {
    return theCat;
  }
  void visit(Book &amp;amp;b) override {
    ++theCat[b.getAuthor()];
  }
  void visit(Text &amp;amp;t) override {
    ++theCat[t.getTopic()];
  }
  void visit(Comic &amp;amp;b) override {
    ++theCat[c.getHero()];
  }
}

// Won&#39;t compile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Won’t compile! Why?&lt;/p&gt;

&lt;p&gt;Book includes BookVisitor -&amp;gt; includes Text -&amp;gt; includes Book&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Circular include dependency&lt;/li&gt;
  &lt;li&gt;Book has an #include guard - won’t be included&lt;/li&gt;
  &lt;li&gt;Text doesn’t know what Book is&lt;/li&gt;
  &lt;li&gt;Are these includes really needed?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;compilation-dependencies&quot;&gt;Compilation Dependencies&lt;/h2&gt;

&lt;p&gt;When does a compilantion dependency exist? (i.e. when do you need an include?)&lt;/p&gt;

&lt;p&gt;Consider:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class A {
  // ...
};

class B : public {
  // ...
};

class C {
  // ...
  A myA;
};

class D {
  // ...
  A *myA;
};

class E {
  A f(A x);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;IMPORTANT DISCUSSION&lt;/strong&gt;: Which of them requires an include? Which of them can get away with a forward declaration?&lt;/p&gt;

&lt;p&gt;Answer: B and C need an include (#include “a.h”), D and E do not. Compiler needs to know how big A is to know how big B and C is (B has an A inside it, C also has an A inside it).&lt;/p&gt;

&lt;p&gt;For B and C, there is a compilation dependency. We need to know how big A is to know how big B and C are.&lt;/p&gt;

&lt;p&gt;For D, you can forware declare (class A;), because all pointers are the same size. The compiler knows how big D is, it does not need to know how big A is.&lt;/p&gt;

&lt;p&gt;For E, you can forward declare (class A;). Functions don’t contribute to the size of E. The function declaration is good enough for type checking. A is just mentioned for type checking.&lt;/p&gt;

&lt;p&gt;If there is no compilation dependency necessitated by the code, then do not create one with extra #includes.&lt;/p&gt;

&lt;p&gt;When class A changes, only A, B, C need to recompile.&lt;/p&gt;

&lt;p&gt;Different story when you look at .cc implementation files. In the implementations of D and E:&lt;/p&gt;

&lt;p&gt;d.cc&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &quot;a.h&quot;

void D::g() {
  myA-&amp;gt;someMethod();
  // need to know about class A here - a true compilation dependency
  // needs to include a.h here, but not in E&#39;s header.
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Do the #include in the .cc, not in .h, where possible. Because including .h files in .cc, there would never be a cycle, because you never include .cc files. Reduces compilation cycle errors.&lt;/p&gt;

&lt;p&gt;Now we will fix the visitor.&lt;/p&gt;

&lt;p&gt;Now consider the XWindow class:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class XWindow {
  Display *d;
  Window w;
  int s;
  GC gc;
  unsigned long colours[10];

  // private data above
  // Yet we can look at it
  // Do we know what it all means? Nei.
  // Do we care? Nei.

public:
  //...
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What if I add or change a private member? Then all clients would have to recompile. That’s cumbersome! Would be better to hide these details away.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; pimpl idiom (pointer to implementation): create a second class XWindowImpl.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;// XWindowImpl.h
#include &amp;lt;X11/Xlib.h&amp;gt;

struct XWindowImpl {
  Display *d;
  Window w;
  int s;
  GC gc;
  unsigned long colours[10];
};


// window.h
class XWindowImpl; // forward declare the Impl class

class XWindow {
  // No need to include Xlib or X11
  XWindowImpl *pImpl; // No compilation dependency on XWindowImpl.h
  // and clients also don&#39;t depend on XWindowImpl.h
public:
  // ... no change
};


// window.cc
#include &quot;window.h&quot;
#include &quot;XWindowImpl.h&quot;

XWindow::XWindow(...) : pImpl{new XWindowImpl} {
  // MIL: need to allocate space for the pointer
  // Also need to destroy pImpl in the dtor
  // Other methods: replace fields (d, w, s, etc.) with pImpl-&amp;gt;d, pImpl-&amp;gt;w, pImpl-&amp;gt;s, etc.
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you confine all private fields to XWindowImpl, then only window.cc needs to recompile if you change XWindow’s implementation.&lt;/p&gt;

&lt;p&gt;Generalization: What if there are several possible window implementations? Say XWindows and YWindows. Then make Impl struct a class.&lt;/p&gt;

&lt;p&gt;Window (solid diamond) (pointer)-&amp;gt; WindowImpl &amp;lt;- (hollow diamond) XWindowImpl, YWindowImpl&lt;/p&gt;

&lt;p&gt;pImpl idiom with hierarchy of implementations&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;called the &lt;strong&gt;Bridge pattern&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;july-7-2016---lecture-20&quot;&gt;July 7, 2016 - Lecture 20&lt;/h2&gt;

&lt;h2 id=&quot;measure-of-design-quality&quot;&gt;Measure of Design Quality&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Coupling and cohesion&lt;/li&gt;
  &lt;li&gt;Coupling: The degree to which distinct program modules depend on each other&lt;/li&gt;
  &lt;li&gt;Low: Modules communicate via function clalls with basic params/results
    &lt;ul&gt;
      &lt;li&gt;Modules pass arrays/structs back and forth&lt;/li&gt;
      &lt;li&gt;Modules affect each other’s control flow&lt;/li&gt;
      &lt;li&gt;Modules share global data&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;High: modules have access to each other’s implementation (friends)
    &lt;ul&gt;
      &lt;li&gt;High: changes to one module require greater changes to other modules&lt;/li&gt;
      &lt;li&gt;Harder to reuse individual modules&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cohesion: how closely elements of a module are related to each other
    &lt;ul&gt;
      &lt;li&gt;Low
        &lt;ul&gt;
          &lt;li&gt;arbitrary grouping of unrelated elements (e.g. &lt;utility&gt;)&lt;/utility&gt;&lt;/li&gt;
          &lt;li&gt;Elements share a common theme, otherwise unrelated&lt;/li&gt;
          &lt;li&gt;Perhaps share the sane base code (e.g. &lt;algorithm&gt;)&lt;/algorithm&gt;&lt;/li&gt;
          &lt;li&gt;Elements manipulate state over the lifetime of an object (e.g. open/read/close a file)&lt;/li&gt;
          &lt;li&gt;Elements pass data to each other&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;High
        &lt;ul&gt;
          &lt;li&gt;Elements cooperate to perform exactly one task&lt;/li&gt;
          &lt;li&gt;Perfect cohesion: put every single function in its separate module&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Low cohesion -&amp;gt; poorly organized code -&amp;gt; hard to understand and maintain&lt;/p&gt;

&lt;p&gt;Goal: Low coupling, high cohesion&lt;/p&gt;

&lt;h2 id=&quot;decoupling-the-interface-mvc&quot;&gt;Decoupling the Interface (MVC)&lt;/h2&gt;

&lt;p&gt;Your primary program classes should not be printing things&lt;/p&gt;

&lt;p&gt;E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Chessboard {
  // ...
  // there&#39;s a line of code like this
  cout &amp;lt;&amp;lt; &quot;Your move&quot;;
  // BAD DESIGN
  // inhibits code reuse
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What if we want to reuse ChessBoard, but not have it communicate via stdout?&lt;/p&gt;

&lt;p&gt;One solution: give the class &lt;strong&gt;stream&lt;/strong&gt; objects, where it can perform input and output (I/O)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Chessboard {
  istream &amp;amp;in;
  ostrema &amp;amp;out;
public:
  ChessBoard(istream &amp;amp;in, ostream &amp;amp;out) :
    in{in}, out{out} {}
  // and now we will have this code instead:
  out &amp;lt;&amp;lt; &quot;Your move&quot;;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What if we don’t want to use streams at all?&lt;/p&gt;

&lt;p&gt;But ChessBoard shouldn’t be talking or doing any communication at all. Its job is to play chess.&lt;/p&gt;

&lt;h2 id=&quot;single-responsiblity-principle&quot;&gt;Single-Responsiblity Principle&lt;/h2&gt;

&lt;p&gt;“A class should have only one reason to change”&lt;/p&gt;

&lt;p&gt;In the above example, game state AND communication are &lt;strong&gt;TWO&lt;/strong&gt; reasons to change.&lt;/p&gt;

&lt;p&gt;Better solution: Communication with the ChessBoard via parameters and results, and occasionally via exceptions.&lt;/p&gt;

&lt;p&gt;Confine user communication to outside the game class.&lt;/p&gt;

&lt;p&gt;Question: Should main do all the communication, and then call ChessBoard methods?&lt;/p&gt;

&lt;p&gt;Answer: NO. Hard to reuse if it’s in main. Should have a class to manage interaction that is separate from the game state class&lt;/p&gt;

&lt;h2 id=&quot;pattern---model---view---controller-mvc&quot;&gt;Pattern - Model - View - Controller (MVC)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Separate the distinct notions of the data (or state), the presentation of the data, and the controll of the data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example: ChessBoard&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Model: the main data you are manipulating (e.g. game state)&lt;/li&gt;
  &lt;li&gt;View: how the model is displayed to the user&lt;/li&gt;
  &lt;li&gt;Controller: how the model is manipulated&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Model -&amp;gt; Controller &amp;lt;- View&lt;/p&gt;

&lt;p&gt;Model:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Can have multiple views (e.g. text and graphics, or several graphics)&lt;/li&gt;
  &lt;li&gt;Doesn’t need to know about their details&lt;/li&gt;
  &lt;li&gt;Classic observer pattern (or could communicate through controller)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Controller:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mediates control flow between the model and view&lt;/li&gt;
  &lt;li&gt;Might encapsulate turn-taking, or full game rules&lt;/li&gt;
  &lt;li&gt;May communicate with user for input (or this could be the view)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By decoupling presentation and control, MVC promotes reuse.&lt;/p&gt;

&lt;h2 id=&quot;exception-safety&quot;&gt;Exception Safety&lt;/h2&gt;

&lt;p&gt;Consider:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void f() {
  MyClass *p = new MyClass;
  MyClass mc;
  g();
  delete p;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;No leaks.&lt;/strong&gt; But what if g raises an exception?&lt;/p&gt;

&lt;p&gt;What is guaranteed?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;During stack unwinding, all stack-allocated data is cleaned up - dtors run, memory reclaimed&lt;/li&gt;
  &lt;li&gt;Heap-allocated memory is not freed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Therefore, if g throws, *p is leaked, mc is not.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example Revisited&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void f() {
  MyClass *p = new MyClass;
  MyClass mc;
  try {
    g();
  } catch (...) {
    delete p;
    throw;
  }
  delete p;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Tedious, error-prone, duplication code&lt;/strong&gt;. How else can we guarantee that something (e.g. delete p) happens no matter f exits now or exits due to an exception?&lt;/p&gt;

&lt;p&gt;In some languages, “finally” clauses (in Java) guarantee certain final actions. NOT IN C++.&lt;/p&gt;

&lt;p&gt;The only thing you can count on in C++ is that destructors for stack-allocated data will run.&lt;/p&gt;

&lt;p&gt;Thus, use stack-alocated data with dtors as much as possible. Use the guarantee to your advantage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C++ Idiom: RAII - Resource Acquisition Is Initialization&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Every resource should be wrapped in a stack-allocated object whose dtor destroys it.&lt;/p&gt;

&lt;p&gt;E.g. Files&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void h() {
  ifstream f(&quot;file&quot;); // acquiring the resource, (&quot;file&quot;)
  // initializing the object
  // ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;File is guaranteed to be closed when f is popped from the stack (f’s dtor runs).&lt;/p&gt;

&lt;p&gt;The same can be done with dynamic memory.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class std::unique.ptr&amp;lt;T&amp;gt;; // takes a T* in ctor
// dtor will free the pointer
// In-between - can dereference just like a pointer

#include &amp;lt;memory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fix f():&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void f() {
  auto p = std::make_unique&amp;lt;class&amp;gt;(); // allocate MyClass on the heap
  MyClass mc;
  g();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will not leak and is also safer. Also shorter.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;july-12-2016---lecture-21&quot;&gt;July 12, 2016 - Lecture 21&lt;/h2&gt;

&lt;p&gt;Recall:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void f() {
  MyClass *p = new MyClass;
  MyClass mc;
  g(); // a function that may throw
  delete p; // might leak
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;To fix using RAII&lt;/strong&gt; with unique pointer:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void f() {
  auto p = make_unique&amp;lt;MyClass&amp;gt;();
  // type is std::unique_ptr&amp;lt;MyClass&amp;gt;
  g(); // might throw
  // won&#39;t leak as stack destructor is called
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class C {
  //...
};

unique_ptr&amp;lt;C&amp;gt; p {new C {...}};
unique_ptr&amp;lt;C&amp;gt; q = p;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What happens when a unique pointer is copied?&lt;/p&gt;

&lt;p&gt;We don’t want to delete the same pointer twice! Segmentation fault.&lt;/p&gt;

&lt;p&gt;Instead - copying is disabled for unique_ptrs.&lt;/p&gt;

&lt;p&gt;So the truth is: The code above WILL NOT COMPILE. Unique_ptrs can only be moved, not copied.&lt;/p&gt;

&lt;p&gt;We can write our own unique_ptr:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;template&amp;lt;typename T&amp;gt; class unique_ptr {
  T *ptr;
public:
  unique_ptr(T *p): ptr{p} {} // ctor
  ~unique_ptr() { // dtor
    delete ptr;
  }

  unique_ptr(const unique_ptr&amp;lt;T&amp;gt; &amp;amp;other) = delete;
  // disable copy ctor

  unique_ptr&amp;lt;T&amp;gt;&amp;amp;operator=(const unique_ptr&amp;lt;T&amp;gt; &amp;amp;other) = delete;
  // disable copy assignment

  // but move ctor and assignment should be implemented
  // just like how it is usually done
  // as they don&#39;t affect the uniqueness

  // move ctor
  unique_ptr(unique_ptr&amp;lt;T&amp;gt; &amp;amp;&amp;amp;other): ptr{other.ptr} {
    other.ptr = nullptr; // free other&#39;s data
  }

  // move assignment opor
  unique_ptr&amp;lt;T&amp;gt;&amp;amp;opeartor=(unique_ptr&amp;lt;T&amp;gt; &amp;amp;&amp;amp;other) {
    using std::swap;
    swap(ptr, other.ptr);
    return *this;
  }

  // dereference operator
  T &amp;amp;operator*() {
    return *ptr;
  }

  // operator arrow
  T *operator-&amp;gt;() {
    return ptr;
  }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to be able to &lt;strong&gt;copy&lt;/strong&gt; pointers, use std::shared_ptr&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void h() {
  auto p1 = make_shared&amp;lt;MyClass&amp;gt;();
  if (...) {
    auto p2 = p1;
  } // p2 popped, pointer is NOT deleted
} // p1 popped, pointer IS deleted
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What is this magic? Shared pointers maintain a &lt;strong&gt;reference count&lt;/strong&gt; (keep track among themselves the number of pointers pointing to the same object; reference count is a count of all shared_ptrs pointing at the same object). If the pointer realizes that itself is the only pointer pointing to an object, it will delete. i.e. Memory is freed when the last shared_ptr pointing at that object is freed.&lt;/p&gt;

&lt;p&gt;Therefore, use shared_ptrs and unique_ptrs instead of raw pointers as much as possible! They solve the garbage collection problem. This means dramatically fewer opporitunities for leaks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3 levels of exception safety for a function f:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Basic guarantee - if an exception occurs, the program will be in a valid state
    &lt;ul&gt;
      &lt;li&gt;nothing is leaked, class invariants maintained&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Strong guarantee - if an exception is raised while executing f, the state of the program will be as if f had not been run&lt;/li&gt;
  &lt;li&gt;No-throw guarantee - f will never throw or propagate an exception, because f will always succeed (it will always accomplish its task)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class A {...};
class B {...};

class C {
  A a;
  B b;
  void f() {
    a.method1(); // may throw - strong guarantee
    b.method2(); // may throw - strong guarantee
  }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Is the function f in class C (C::f) exception safe?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If a.method1() throws - nothing has happened (OK) (f does propagate method1’s exception)&lt;/li&gt;
  &lt;li&gt;If b.method2() throws - effects of method1 must be undone to offer the strong performance
    &lt;ul&gt;
      &lt;li&gt;Very hard or even imposible (what if method1 modified a global variable? Printed something to the screen? Launched a rocket?)&lt;/li&gt;
      &lt;li&gt;Hard to undo method1 if method1 has non-local side-effects&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Therefore, C::f is NOT exceotion safe.&lt;/p&gt;

&lt;p&gt;But can we make it exception safe? That will require us to make an assumption: These methods do not have non-local side-effects.&lt;/p&gt;

&lt;p&gt;If A::method1, B::method2 do not have non-local side effects, we can use copy and swap:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class C {
  // ...
  void f() {
    // make temporary copies of a and b
    A aTemp = a;
    B bTemp = b;

    // operate on copies
    aTemp.method1(); // If these methods throw, what happens to the overall picture?
    bTemp.method2(); // a and b will still be intact

    a = aTemp; // assign back
    b = bTemp;
    // But what if copy assignment throws?
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Better if the swap was nothrow. Assigning/Copying/Moving/Swapping pointers will never and cannot throw!&lt;/p&gt;

&lt;p&gt;So we can rephrase the code above, using the PImpl idiom.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;struct CImpl {
  A a;
  B b;
};

class C {
  unique_ptr&amp;lt;CImpl&amp;gt; pImpl;
  void f() {
    auto temp = make_unique&amp;lt;CImpl&amp;gt;(*pImpl); // construct unique_ptr
    temp-&amp;gt;a.method1(); // if it throws, original object still intact
    temp-&amp;gt;b.method2(); // if it throws, original object still intact

    std::swap(temp, pImpl); // no throw, guaranteed
    // same if you use move assignment, in the case of using an unique_ptr
  }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If either A::method1 or B::method2 offers &lt;strong&gt;no&lt;/strong&gt; exception safety guarantee, then &lt;strong&gt;neither can f&lt;/strong&gt;. It is impossible to construct a safe function out of unsafe pieces.&lt;/p&gt;

&lt;h2 id=&quot;exception-safety-and-the-stl-vectors&quot;&gt;Exception Safety and the STL: Vectors&lt;/h2&gt;

&lt;p&gt;How does exception safety apply to the most used thing in STL, vectors?&lt;br /&gt;
Vectors:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;encapsulate a heap-allocated array&lt;/li&gt;
  &lt;li&gt;Follows &lt;strong&gt;RAII&lt;/strong&gt; - When a stack-allocated vector goes out of scope, the internal heap-allocated memory is freed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void f() {
  vector&amp;lt;MyClass&amp;gt; v;
  // ...
  // At the end of the function, v goes out of scope
  // array is freed, MyClass dtor runs on all objects in the array
}

void g() {
  vector&amp;lt;MyClass *&amp;gt; v; // what if we have a vector of pointers?
  // ...
  // Array is freed, pointers don&#39;t have dtors
  // so any objects pointed at by pointers in v are NOT deleted
  // v doesn&#39;t know whether the pointers in the array own the objects they point at
  // e.g. ducks and pond analogy

  // note it&#39;s not hard to delete
  for (auto &amp;amp;x : v) {
    delete x;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But we don’t want to do cleanup ourselves!
&lt;strong&gt;Solution&lt;/strong&gt;: use shared_ptrs!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void h() {
  vector&amp;lt;shared_ptr&amp;lt;MyClass&amp;gt;&amp;gt; v;
  // ...
  // array is freed, shared_ptr dtors run,
  // so objects are deleted if no other shared_ptr points at them
  // don&#39;t have to do any explicit deallocation
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Another topic: emplace_back&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Offers the &lt;strong&gt;strong guarantee&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;If the array is full (i.e. size == cap),
        &lt;ul&gt;
          &lt;li&gt;allocate new array&lt;/li&gt;
          &lt;li&gt;copy the objects over (copy construction using copy ctor)
            &lt;ul&gt;
              &lt;li&gt;If a copy ctor throws, destroy the new array, old array is still intact, thus we can offer strong guarantee&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;delete old array&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;But copying an array is expensive and the old data will be thrown away! What a waste!&lt;/li&gt;
      &lt;li&gt;Why don’t we &lt;strong&gt;move&lt;/strong&gt; instead of &lt;strong&gt;copy&lt;/strong&gt;?
        &lt;ul&gt;
          &lt;li&gt;allocate new array&lt;/li&gt;
          &lt;li&gt;move objects over (move ctor)
            &lt;ul&gt;
              &lt;li&gt;&lt;strong&gt;BUT! If move ctor throws, can’t offer strong guarantee, since the original is no longer intact&lt;/strong&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;delete old array&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Therefore, if objects have a no-throw move, emplace_back will use move, else it will use copy (which is slower)&lt;/li&gt;
      &lt;li&gt;So your move ops should be no-throw if possible&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example: Add keyword &lt;strong&gt;noexcept&lt;/strong&gt; to tell vector that your move operators are no-throw&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class MyClass {
public:
  MyClass(MyClass &amp;amp;&amp;amp;other) noexcept {
    // ...
  }

  MyClass&amp;amp;operator=(MyClass &amp;amp;&amp;amp;other) noexcept {
    // ...
  }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is the end of the exception safety topic.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;july-14-2016---lecture-22&quot;&gt;July 14, 2016 - Lecture 22&lt;/h2&gt;

&lt;p&gt;Recall: emplace_back uses move ctor and assignment operator if they are no-throw, copy ctor if it throws. So make your move ctors and assignment operators no-throw if possible.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class MyClass {
public:
  MyClass(MyClass &amp;amp;&amp;amp;other) noexcept {
    //...
    // use the &quot;noexcept&quot; keyword to indicate no-throw
  }

  MyClass &amp;amp;operator=(MyClass &amp;amp;&amp;amp;other) noexcept {
    //...
  }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At minimum: Moves and swaps should be noexcept (no-throw)&lt;/p&gt;

&lt;h2 id=&quot;casting&quot;&gt;Casting&lt;/h2&gt;

&lt;p&gt;Some C code!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;Node n;
int *ip = (int*) &amp;amp;n; // cast
// cast forces C++ to treat a Node* as an int*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Casting: Forcing an object to be treated as another type. C-style casts should be avoided in C++.&lt;/p&gt;

&lt;p&gt;Advantages of C++ casts:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;C++ casts are easier to search and spot (C casts are hard to locate)&lt;/li&gt;
  &lt;li&gt;Different categories of casts make code more readable (explicit); Also different casts have different intended usages&lt;/li&gt;
  &lt;li&gt;Compiler would give warnings if you are doing something dumb (provides compiler and runtime errors, expose issues)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you &lt;strong&gt;must&lt;/strong&gt; cast, use a C++ cast. There are 4 kinds of casting:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;static_cast - “sensible casts”&lt;/li&gt;
  &lt;li&gt;reinterpret_cast&lt;/li&gt;
  &lt;li&gt;const_cast&lt;/li&gt;
  &lt;li&gt;dynamic_cast&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;static_cast&lt;/strong&gt; - relatively safe, sensible&lt;/p&gt;

&lt;p&gt;E.g. static_cast: double-&amp;gt;int&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void f(double x);
void f(int x);

double d = 3.0;
f(d); // the first one runs

// now what if we want to run the second one?
f(static_cast&amp;lt;int&amp;gt;(d)); // cast the double to int
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Superclass pointer -&amp;gt; subclass pointer&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Book *b = new Text {...};
Text *t = static_cast&amp;lt;Text*&amp;gt;(b);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You are taking responsibility that b actually points at a Text.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;reinterpret_cast&lt;/strong&gt; - unsafe, implementation-specific, “weird” conversions&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Student s;
Turtle *t = reinterpret_cast&amp;lt;Turtle*&amp;gt;(&amp;amp;s);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It’s like making a bet. The only guaranteed thing: when you try to revert back to the old object, it will succeed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;const_cast&lt;/strong&gt; - for converting between const and non-const; the only C++ cast that can “cast away const”&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void g(int *p); // g doesn&#39;t promise not the change *p
// but suppose g doesn&#39;t actually change *p (assumption)

void f(const int *p) { // f promises not to change *p
  // ...
  g(p); // WRONG
  g(const_cast&amp;lt;int*&amp;gt;p); // CORRECT
  // casting the constness away
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;dynamic_cast&lt;/strong&gt; - Is it safe to convert a Book* to a Text*?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Book *pb = ...; // don&#39;t know the right side
static_cast&amp;lt;Text*&amp;gt;(*pb)-&amp;gt;getTopic(); // safe?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Is it safe?&lt;/p&gt;

&lt;p&gt;Depends on what pb actually points at. Better to do a tentative cast, try it and see if it succeeds.&lt;/p&gt;

&lt;p&gt;Use dynamic_cast:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Book *pb = ...;
Text *pt = dynamic_cast&amp;lt;Text*&amp;gt;(pb);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If the cast works(i.e. pb points at a Text or a subclass of Text), then pt points at the object. If the cast fails, pt will be a nullptr. So we can check if the cast is successful by:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Book *pb = ...;
Text *pt = dynamic_cast&amp;lt;Text*&amp;gt;(pb);

if (pt) {
  cout &amp;lt;&amp;lt; pt-&amp;gt;getTopic();
} else {
  cout &amp;lt;&amp;lt; &quot;Not a Text&quot;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;static_cast is always faster. Sometimes static_cast costs very little, while using dynamic_cast costs a lot more during runtime.&lt;/p&gt;

&lt;p&gt;But all of the above operates on raw pointers. We talked about smart pointers last class, should we use casts on smart pointers? Raw pointers are more integrated into the C++ type system. But the type system doesn’t know the relationship between a shared_ptr to Book and a shared_ptr to Text (these are our own classes). But smart pointers classes have their own versions.&lt;/p&gt;

&lt;p&gt;The following cast shared_ptrs to shared_ptrs:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;static_pointer_cast
const_pointer_cast
dynamic_pointer_cast
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can use dynamic casting to make decisions at runtime based on an object’s run-time type (&lt;strong&gt;RTTI = runtime type information&lt;/strong&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void whatIsIt(shared_ptr&amp;lt;Book&amp;gt; b) {
  if (dynamic_pointer_cast&amp;lt;Text&amp;gt;(b)) {
    cout &amp;lt;&amp;lt; &quot;Text&quot;;
  } else if (dynamic_pointer_cast&amp;lt;Comic&amp;gt;(b)) {
    cout &amp;lt;&amp;lt; &quot;Comic&quot;;
  } else {
    cout &amp;lt;&amp;lt; &quot;Book&quot;;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: dynamic casting isn’t available for everybody. It only works on classes with at least one virtual method. A superclass should always have a virtual destructor (thus a virtual method), and as dynamic casting requires to know the entire class hierarchy, it only works on classes with a virtual method.&lt;/p&gt;

&lt;p&gt;Note: Code like this is highly coupled to the Book class hierarchy and may indicated bad design. If I invent a new class (a subclass of Book), I have to update whatIsIt. So if whenever I add a subclass to an already existing class, I need to have knowledge of its implementation, that’s bad design.&lt;/p&gt;

&lt;p&gt;Better 1 - write a virtual method, so when we add a new subclass of Book (say, CookBook), and override the whatIsIt method.&lt;/p&gt;

&lt;p&gt;Better 2 - if the new subclass is a rare exception (i.e. not universally applicable), write a Visitor pattern. But visitor requries knowledge of the full implementation as well.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;virtual void visit(Book &amp;amp;b) = 0;
virtual void visit(Text &amp;amp;t) = 0;
virtual void visit(Comic &amp;amp;c) = 0;

// say if we want to add CookBook, we need to add this
virtual void visit(CookBook &amp;amp;cb) = 0;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So visitor is still tightly coupled, but it’s a little bit better than dynamic casting.&lt;/p&gt;

&lt;p&gt;Dynamic casting also works on references.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Text t {...};
Book &amp;amp;b = t;
Text &amp;amp;t2 = dynamic_cast&amp;lt;Text &amp;amp;&amp;gt;(b);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If b “points to” a Text, then t2 is a reference to the same Text. If not, (no such thing as a null reference) raises exception bad_cast.&lt;/p&gt;

&lt;p&gt;With dynamic reference casting, we can solve the polymorphic assignment problem (think back: a week after we introduced inheritance: what happens to the Big 5 when we have inheritance?)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;*pb1 = *pb2; // when we don&#39;t have virtual methods
// we never wrote an assignment operator
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can write an assignment operator that takes in any Book and assign it to a Text:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Text &amp;amp;Text::opeartor=(const Book &amp;amp;other) { // virtual
  Text *textOther = dynamic_cast&amp;lt;Text &amp;amp;&amp;gt;(other);
  if (this == &amp;amp;textOther) { // check for self-assignment
    return *this;
  }
  Book::operator=(other);
  topic = other.topic;
  return *this;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;How do I assign Text to any Book&lt;/strong&gt; - solved.&lt;/p&gt;

&lt;p&gt;What if other isn’t a Text? Exception bad_cast raised, the opeartion doens’t happen, the function goes back to the caller, and the caller deals with the inappropriate use.&lt;/p&gt;

&lt;h2 id=&quot;how-virtual-methods-work&quot;&gt;How Virtual Methods Work&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Vec {
  int x, y;
public:
  int doSomething() {
    // ...
  }
};

class Vec2 {
  int x, y;
public:
  virtual int doSomething() {
    // ...
  }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The two classes are virtually the same (pun intended), the only difference is the word “virtual”. What’s the actual difference?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Vec v {1, 2};
Vec2 w {1, 2};
// Do they look the same in memory?
cout &amp;lt;&amp;lt; sizeof(v) &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; sizeof(w);
// prints
// 8 16
// v has size 8
// w has size 16
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Not quite the same.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;july-19-2016---lecture-23&quot;&gt;July 19, 2016 - Lecture 23&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Book *pb = new {Book Text Comic};
pb-&amp;gt;isItHeavy();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The choice of which version to run is based on the type of the actual object - not known until runtime&lt;/p&gt;

&lt;p&gt;For each class with virtual methods, the compiler creates a table of function pointers (the &lt;strong&gt;vtable&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;virtual table&lt;/strong&gt; (vtable) is a lookup table of functions used to resolve functions in a dynamic/late binding manner. The table is a static array that the compiler sets up at compile time. It contains one entry for each virtual function that can be called by objects of the class. Each entry is a function pointer that points to the most-derived function accessible by that class.&lt;/p&gt;

&lt;p&gt;How it works:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Every class that uses virtual functions (or is derived from a class that has virtual functions) is given its own vtable&lt;/li&gt;
  &lt;li&gt;The compiler adds a hidden pointer to the base class, which is the &lt;strong&gt;vptr&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class C {
  int x, y;
  virtual void f();
  virtual void g();
  void h();
  virtual ~C();
};

// ======
C c;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The vtable would have f, g, and ~C pointing out to other functions outside the vtable&lt;/p&gt;

&lt;p&gt;C objects have an extra pointer (the vptr) that points to C’s vtable&lt;/p&gt;

&lt;p&gt;C has x, y, and a vptr -&amp;gt; vtable (“C”, f, g, ~C)&lt;/p&gt;

&lt;p&gt;E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;Book b;
Text t;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;b has title, author, numPages, &lt;strong&gt;vptr&lt;/strong&gt; (points to the vtable of Book, which contains isItHeavy pointer, which in turn points to the actual implementation of Book::isItHeavy)&lt;br /&gt;
t has title, author, numPages, topic, &lt;strong&gt;vptr&lt;/strong&gt; (points to the vtable of Text, which contains isItHeavy pointer, which in turn points to the actual implementation of Text::isItHeavy)&lt;/p&gt;

&lt;p&gt;Calling a virtual method (all happens at runtime):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;follow pointer to the vtable&lt;/li&gt;
  &lt;li&gt;fetch pointer to actual method from table&lt;/li&gt;
  &lt;li&gt;follow the function pointer and call the function&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Therefore, virtual function calls incur a small overhead cost.&lt;/p&gt;

&lt;p&gt;Why isn’t destructor virtual by default? Classes not meant to be subclassed should not have virtual&lt;/p&gt;

&lt;p&gt;C++: If you don’t need it, you don’t pay for it. Unless you actually need the functionality of virtual, it won’t give it to you.&lt;/p&gt;

&lt;p&gt;Also: declaring at least one virtual function adds a vptr to the object. Therefore, classes with no virtual functions produce smaller objects (lower cost) than if some functions were virtual&lt;/p&gt;

&lt;p&gt;Question: Why does dynamic casting (dynamic_cast) only work on classes with at least one virtual function? dynamic_cast needs to know what objects we actually have, and the compiler needs the vtable to figure out the type&lt;/p&gt;

&lt;p&gt;A class that declares or inherits a virtual function is called a polymorphic class.&lt;/p&gt;

&lt;p&gt;Concretely, how is an object laid out? It’s compiler-dependent.&lt;/p&gt;

&lt;p&gt;g++:&lt;/p&gt;

&lt;p&gt;A table of fields under vptr&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class A {
  int a, c;
  virtual int f();
};

class B : public A {
  int b, d;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For A, the layout would be vptr (a, c), and for B, vptr (a, c, b, d). Vptr is on the top of the table. A B object is an A object. So you will want your B object to look like an A object AND a B object simultaneously. So a pointer to B looks like a pointer to A, if you ignore the last two fields. We will always know where vptr is (first).&lt;/p&gt;

&lt;h2 id=&quot;multiple-inheritance&quot;&gt;Multiple Inheritance&lt;/h2&gt;

&lt;p&gt;A class can inherit from more than one class.&lt;/p&gt;

&lt;p&gt;E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class A {
  int a;
};

class B {
  int b;
};

class C : public A, public B {
  void f() {
    cout &amp;lt;&amp;lt; a &amp;lt;&amp;lt; &#39; &#39; &amp;lt;&amp;lt; b;
    // inherit a from A, b from B
  }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;UML:&lt;br /&gt;
A &amp;lt;- (hollow) C (hollow) -&amp;gt; B&lt;/p&gt;

&lt;p&gt;Challenges:&lt;/p&gt;

&lt;p&gt;Suppose B inherits from A. And C inherits from A.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class D : public B, public C {
public:
  int d;
};

// ============== main
D dObj;
cout &amp;lt;&amp;lt; dObj.a &amp;lt;&amp;lt; endl;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Compiler error: which a do you mean? You have one from virtually inheriting from B, or the one from C? “Request for ‘a’ is ambiguous”.&lt;/p&gt;

&lt;p&gt;Need to specify:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;dObj.B::a; // OR
dObj.C::a;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But if B and C inherit from A, should there be one A part of D, or two?
  + Should B::a and C::a be the same or different?
  + Default behaviour: two&lt;/p&gt;

&lt;p&gt;What if we want “The Deadly Diamond”? A on the top, B and C on left and right, and D inherit from both B and C. Make A a virtual base class, employ virtual inheritance.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class B : virtual public A {
  // ...
};

class C : virtual public A {
  // ...
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E.g. I/O stream hierarchy&lt;/p&gt;

&lt;p&gt;ios_base
|
ios
  | istream (virtual inheritance) ———–
    | istringstream     iostream (inherit from istream, ostream) —fstream, stringstream
    | ifstream
  | ostream (virtual inheritance) ———–
    | ostringstream
    | ofstream&lt;/p&gt;

&lt;p&gt;How will this be laid out?&lt;/p&gt;

&lt;p&gt;What does g++ do?&lt;/p&gt;

&lt;p&gt;Multiple inheritance: initialization of the virtual base class is the responsiblity of the bottom of the class hierarchy.&lt;/p&gt;

&lt;p&gt;Diagaram doesn’t look like all of A, B, C, D simultaneously, but slices of it do look like A, B, C, D.&lt;/p&gt;

&lt;p&gt;Therefore pointer assignment among A, B, C, D changes the address stored in the pointer.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;D *d;
A *a = d; // changes the address
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;static_cast, const_cast, dynamic_cast under multiple inheritance will also change the value of the pointer. BUT reinterpret_cast WILL NOT. That’s why reinterpret_cast is dangerous.&lt;/p&gt;

&lt;h2 id=&quot;template-functions&quot;&gt;Template Functions&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;template&amp;lt;typename T&amp;gt; T min(T x, T y) {
  return x &amp;lt; y ? x : y;
}

int f() {
  int x = 1, y = 2;
  int z = min(x, y); // T is int, the compiler figures it out
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: Don’t need to say min&lt;int&gt;, just min is fine. C++ can infer T=int from the types of x and y. This applies to function templates only.&lt;/int&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;july-20-2016---tutorial&quot;&gt;July 20, 2016 - Tutorial&lt;/h2&gt;

&lt;p&gt;Smart pointers are good for exception safety because they manage memory automatically, so we can avoid memory leaks when a function throws.&lt;/p&gt;

&lt;h2 id=&quot;exception-safety-1&quot;&gt;Exception Safety&lt;/h2&gt;

&lt;p&gt;3 Guarantees: Basic, Strong&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Basic Guarantee: “a valid state” -&amp;gt; the object after the exception throws will still be valid, but with some unknown effects&lt;/li&gt;
  &lt;li&gt;Strong Guarantee: The state that used to be it; Undone&lt;/li&gt;
  &lt;li&gt;No-throw Guarantee: Will not throw an exception; difficult to get. Almost never happens unless with primitive types&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;try {
  o.f();
} catch(...) {
  o.g();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Basic - o is a valid object, but it might have changed after f(). The program will not crash, and you can still use o (invariants of the object are preserved and no resources are leaked)&lt;/li&gt;
  &lt;li&gt;Strong - it’s like you never called o.f(); “all-or-nothing”. As if the try catch block and o.f() didn’t happen&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;casting-1&quot;&gt;Casting&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;dynamic_cast: RTTI = Runtime type information. dynamic_cast checks if it makes sense to convert from one type to another. Only casts when the cast makes sense&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;A *a = new B;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;static_cast: taking control from compiler; C-style casting; sensible&lt;/li&gt;
  &lt;li&gt;reinterpret_cast: here’s a piece of memory, reinterpret it to a different type. Destroying C++ built-in checks and type information. Used in system engineering&lt;/li&gt;
  &lt;li&gt;const_cast: const in read-only memory; if someone by mistake, forgot the const keyword; prevent the non-constness from propagating through multiple functions&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;operator&amp;lt;&amp;lt;(ostream &amp;amp;out, Student s) {
  out &amp;lt;&amp;lt; s.grade();
  // not modifying s, so should be const
}

void prettyprint(const Student &amp;amp;s) {
  cout &amp;lt;&amp;lt; &quot;Grade: &quot; &amp;lt;&amp;lt; s.grade();
  // incompatible with &amp;lt;&amp;lt;
  // so you would const_cast s, to cast away the constness
  cout &amp;lt;&amp;lt; &quot;Grade: &quot; &amp;lt;&amp;lt; const_cast&amp;lt;Student &amp;amp;&amp;gt;s;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;stl&quot;&gt;STL&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;for_each(iterator, iterator, function);
// begin, end, apply the function
// acts exactly like map
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;july-21-2016---lecture-24&quot;&gt;July 21, 2016 - Lecture 24&lt;/h2&gt;

&lt;h2 id=&quot;template-fuctions&quot;&gt;Template Fuctions&lt;/h2&gt;

&lt;p&gt;Recall:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;template&amp;lt;typename T&amp;gt; T max(T x, T y) {
  return x &amp;lt; y ? y : x;
}

int f() {
  int x = 1, y = 2;
  int z = max(x, y); // T = int, note that we didn&#39;t need to say min&amp;lt;int&amp;gt;
  // ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;C++ can figure out T = int from the types of x and y, This applies to function templates only.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;char w = max(&#39;a&#39;, &#39;c&#39;); // T = char
auto f = max(1.0, 3.0); // T = float
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For what types T can min be used? (Or, for what types T would be body compile?)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Any type for which operator &amp;lt; is defined&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Recall:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void for_each(AbsratctIterator start, AbsratctIterator finish, int(*f)(int)) {
  while (start != finish) {
    f(*start); // apply function
    ++start; // update
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;How does it work?&lt;/strong&gt; It works as long as AbstractIterator supports !=, *, and ++.&lt;/p&gt;

&lt;p&gt;f can be called as a function. Make these template arguments to make it more generalized.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;New implementation&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;template&amp;lt;typename Iter, typename Func&amp;gt;
void for_each(Iter start, Iter finish, Func f) {
  while (start != finish) {
    f(*start);
    ++start;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now Iter can be any type that supports &lt;strong&gt;!=, *, ++&lt;/strong&gt;. Pointers are a type that supports these operations, yet they are not Iterators. So Iter can also be a pointer.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;void f(int n) {
  cout &amp;lt;&amp;lt; n &amp;lt;&amp;lt; endl;
}

int a[] = {1, 2, 3, 4, 5};
for_each(a, a+5, f); // Now we can do this, this prints the array
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Difference between the two implementations:&lt;/p&gt;

&lt;p&gt;The first one requires start and finish be of AbstractIterator type, while the second one generalizes it and only requires the type to support these operations.&lt;/p&gt;

&lt;h2 id=&quot;c-stl-library-algorithm&quot;&gt;C++ STL Library &lt;algorithm&gt;&lt;/algorithm&gt;&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;A suite of template functions, many of which work over iterators&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Examples: for_each (as given above, with templates)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;find: returns iterator to the first item in range [first, last) matching val, or last if val if not found&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;template&amp;lt;typename Iter, typename T&amp;gt;

Iter find(Iter first, Iter last, const T&amp;amp;val);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;count: like find, but returns number of occurrences of val&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;template&amp;lt;typename Iter, typename T&amp;gt;

Iter count(Iter first, Iter last, const T&amp;amp;val);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;copy: copies one container range [first, last) to another, starting at result&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Note: It does not allocate memory&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;template&amp;lt;typename InIter, typename OutIter&amp;gt;

OutIter copy(InIter first, InIter last, OutIter result);

// ============= client
vector&amp;lt;int&amp;gt; v {1, 2, 3, 4, 5, 6, 7};
vector&amp;lt;int&amp;gt; w(4); // space for 4 ints

copy(v.begin()+1, v.begin()+5, w.begin());
// w = {2, 3, 4, 5}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;transform: generalized copy; does not allocate memory like copy&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;template&amp;lt;typename InIter, typename OutIter, typename Func&amp;gt;

OutIter transform(InIter first, InIter last, OutIter result, Func f) {
  while (first != last) {
    *result = f(*first); // transforming first
    // when f is the identify function, this is just copy
    ++result;
    ++first;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example of transform&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;int add1(int n) {
  return n + 1;
}

vector&amp;lt;int&amp;gt; v {2, 3, 5, 7, 11};
vector&amp;lt;int&amp;gt; w (v.size());

transform(v.begin(), v.end(), w.begin(), add1);
// w = {3, 4, 6, 8, 12}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;How generalized is this code?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;What can we use for Func?&lt;/li&gt;
  &lt;li&gt;What can we use for InIter and OutIter?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;First question&lt;/strong&gt;: What type of thing is Func allowed to be? How is f used?&lt;/p&gt;

&lt;p&gt;f is used like f(*first). &lt;strong&gt;Whatever f is, I have to be able to call it like a function&lt;/strong&gt;. f can be anything that can be called as a function.&lt;/p&gt;

&lt;p&gt;Can write operator() (member function, function call operator) for objects that allows you to give the object the ability to be called as a function.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Plus1 {
public:
  int operator()(int n) {
    return n + 1;
  }
}

// how to use:
Plus1 p; // initialize a Plus1 object
p(4); // p can be called as if it were a function; produces 5
// Same as
p.operator()(4);

// SO we can write transform as:
transform(v.begin(), v.end(), w.begin(), Plus1{});
// needs to create a Plus1 object, thus use {} for constructor call
// Plus1 p will work as well
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Generalize:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class Plus {
  int m;
public:
  Plus(int m) : m{m} {}
  int operator()(int n) {
    return n + m;
  }
};

// client
transform(v.begin(), v.end(), w.begin(), Plus{1});
// same as
transform(v.begin(), v.end(), w.begin(), add1);
// but we can change the value of the number added, good generalization
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Instances of Plus1, Plus are called &lt;strong&gt;function objects&lt;/strong&gt; or &lt;strong&gt;functors&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Advantage of function objects:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Can maintain state, unlike functions&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;class IncreasingPlus {
  int m = 0;
public:
  int operator()(int n) {
    return n + (m++);
  }

  void reset() {
    m = 0;
  }
};

// client
vector&amp;lt;int&amp;gt; v (5, 0); // {0, 0, 0, 0, 0}
vector&amp;lt;int&amp;gt; w (v.size());
transform(v.begin(), v.end(), w.begin(), IncreasingPlus{});
// w = {0, 1, 2, 3, 4}
// if you want to reverse the order to get 4, 3, 2, 1, 0, write
transform(v.begin(), v.end(), w.rbegin(), IncreasingPlus{});
// rbegin returns a reverse iterator, it iterates backwards
// ++ moves it toward the beginning of the container
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Consider: how many ints in a vector v are even?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;vector&amp;lt;int&amp;gt; v {...};
bool even (int n) {
  return n &amp;amp; 2 == 0;
}

int x = count_if(v.begin(), v.end(), even);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Seems a waste to explicitly create the function even. If this were Racket, we would use lambda for anonymous functions. We can do the same here:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;int x = count_if(v.begin(), v.end(), [](int n) {return n % 2 == 0;}); // [] capture list

auto x = [](int n) {
  return n % 2 == 0;
};  // use auto to capture the type, since the type is a secret

// &quot;x&#39;s type declared type, whatever it is&quot;
decltype(x);

// typeof is a totally different thing; run-time only
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Second question&lt;/strong&gt;: Iterator abstraction: apply the notion iteration to other sources/destinations of data, for example, streams&lt;/p&gt;

&lt;p&gt;You will need to include header &lt;iterator&gt;. Example:&lt;/iterator&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;#include &amp;lt;iterator&amp;gt;

vector&amp;lt;int&amp;gt; v {1, 2, 3, 4, 5};
ostream_iterator out { cout, &quot;, &quot; }; // &quot;,&quot; is delimiter string
copy(v.begin(), v.end(), out); // prints 1, 2, 3, 4, 5, (space at the end)
// prints it to cout (the screen)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Another example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;vector&amp;lt;int&amp;gt; v {1, 2, 3, 4, 5};
vector&amp;lt;int&amp;gt; w;
copy(v.begin(), v.end(), w.begin()); // WRONG!
// Wrong because copy doesn&#39;t allocate any space, and w doesn&#39;t have any space allocated to it
// SEGFAULT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Why can’t copy allocate space? copy doesn’t know what w is. Didn’t give copy w itself (instead, an iterator w.begin()). If copy doesn’t know what the data structure w has, it cannot call memory allocation function on it. It literally cannot allocate space. Copy doesn’t even know that w is a vector - it only has an iterator to an item in w.&lt;/p&gt;

&lt;p&gt;So if copy cannot automatically allocate space, how can we get around that?&lt;/p&gt;

&lt;p&gt;What if we had an iterator whose operator= inserts a new item?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-c++&quot;&gt;copy(v.begin(), v.end(), back_inserter(w));
// back_inserter creates iterators
// adds v to the end of w, allocateing space
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Mon, 02 May 2016 18:56:00 -0400</pubDate>
        <link>http://dzed.me/notes/2016/05/02/Cs-246.html</link>
        <guid isPermaLink="true">http://dzed.me/notes/2016/05/02/Cs-246.html</guid>
        
        
        <category>notes</category>
        
      </item>
    
      <item>
        <title>CS 245 - Logic and Computation</title>
        <description>&lt;pre&gt;&lt;code&gt;CS 245 - Logic and Computation
Instructor: Collin Roberts
Section: 003
Location: MC 2034
Time: Tuesdays and Thursdays 1:00pm - 2:20pm
Tutorials: MC 2035 Fridays 8:30am - 9:20am
Term: Spring 2016
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;may-3-2016---lecture-1&quot;&gt;May 3, 2016 - Lecture 1&lt;/h2&gt;

&lt;p&gt;Section 003&lt;br /&gt;
Email: cd2rober@uwaterloo.ca&lt;br /&gt;
Office: DC 2128&lt;/p&gt;

&lt;p&gt;CS 245 -&amp;gt; Formal Logic&lt;/p&gt;

&lt;p&gt;1) Propositional&lt;br /&gt;
2) Predicate (aka First-Order) &amp;lt;= THE REAL GOAL&lt;/p&gt;

&lt;p&gt;Crowdmark for assignments.&lt;br /&gt;
Assignments DUE AT 12:00 ON WEDNESDAYS&lt;br /&gt;
Recommended Text: Logic in Computer Science, 2nd Ed. by Huth and Ryan&lt;/p&gt;

&lt;p&gt;Learn: Course Outline, Notes, Additional Notes - Roberts&lt;br /&gt;
Refer to the Course Schedule&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Grading Scheme&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Assignments (10 in total, best 9 out of 10) - 20%&lt;/li&gt;
  &lt;li&gt;Midterm (4:30pm - 6:20pm, June 9, 2016) - 35 %&lt;/li&gt;
  &lt;li&gt;Final - 45%&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Week 1: Introduction, Basic examples, formal syntax and semantics, and properties via induction.&lt;br /&gt;
Reading: HR 1.1, 1.3, 1.4.2, Slides to p51&lt;/p&gt;

&lt;h2 id=&quot;propositional-logic&quot;&gt;Propositional Logic&lt;/h2&gt;

&lt;p&gt;LOGIC = systematic study of the principles of reasoning and inference&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To model the computer hardware, software, and embedded systems we create/encounter, in order to reason about those objects in a rigorous manner&lt;/li&gt;
  &lt;li&gt;To understand how to develop systems that can themselves apply reason and make inferences (AI)&lt;/li&gt;
  &lt;li&gt;To define a computer required logic (Turing 1936)&lt;/li&gt;
  &lt;li&gt;CS gave the first definition of “rigorous argument” (an argument that may be checked by a machine; machine returns true if proof is correct)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; If the train arrives late and there are no taxis at the station, then John is late for his meeting.&lt;/p&gt;

&lt;p&gt;John is not late for his meeting.&lt;/p&gt;

&lt;p&gt;The train did arrive late.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Therefore&lt;/strong&gt;, there were taxis at the station.&lt;/p&gt;

&lt;p&gt;Q: Is this argument &lt;strong&gt;valid&lt;/strong&gt;? Why/Why not?&lt;/p&gt;

&lt;p&gt;Q: What is the structure of this argument?&lt;br /&gt;
A: If p and not q, then r. Not r. p. Therefore q.&lt;/p&gt;

&lt;p&gt;p = “the train arrives late”&lt;br /&gt;
q = “there are taxis at the station”&lt;br /&gt;
r = “John is late for his meeting”&lt;/p&gt;

&lt;p&gt;What if we reassign meanings to p, q, and r? We will get an equally valid argument.&lt;/p&gt;

&lt;p&gt;The factual content of statements (p, q, r) doesn’t matter. The relationships among the statements govern the argument.&lt;/p&gt;

&lt;p&gt;So what constitutes a “statement”?&lt;br /&gt;
What do logical relationships mean?&lt;/p&gt;

&lt;p&gt;We shall start with &lt;strong&gt;Propositional Logic&lt;/strong&gt;, a basic form of logic.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;proposition&lt;/strong&gt; is a declarative sentence that is either &lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Either the proposition is true, or the proposition is false. It is never both true and false.&lt;/p&gt;

&lt;p&gt;e.g. If Kathleen Wynne is a Liberal, then Stephen Harper is a Tory.&lt;/p&gt;

&lt;p&gt;p-&amp;gt;q: If p then q; p is sufficient for q, q is necessary for p.&lt;/p&gt;

&lt;p&gt;p &amp;lt;-&amp;gt; q: p if and only if q (p iff q); p is equivalent to q; p exactly if q; p is necessary and sufficient for q.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Translating from English to propositional logic examples:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;She is clever and hard-working&lt;br /&gt;
Let p be “she is clever” and q be “she is hard-working”&lt;br /&gt;
Then we get (p ^ q)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If he does not study hard then he will fail&lt;br /&gt;
Let p be “he studies hard” and q be “he will fail”&lt;br /&gt;
Then we get ((NOT p) -&amp;gt; q)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If it rains, he will be at home; otherwsie he will go to the market or to school.&lt;br /&gt;
Let p be “it rains”, q be “he will be at home”, r be “he will go to the market”, s be “he will go to school”&lt;br /&gt;
Then we get ((p -&amp;gt; q) ^ ((NOT p) -&amp;gt; (r v s)))&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Some sentences are not propositions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;interrogative: where shall we go to eat?&lt;/li&gt;
  &lt;li&gt;imperative: please pass the salt&lt;/li&gt;
  &lt;li&gt;ambiguous: time flies like an arrow&lt;/li&gt;
  &lt;li&gt;nonsense: uwgod&lt;/li&gt;
  &lt;li&gt;otherwise problematic: This sentence is false&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-5-2016&quot;&gt;May 5, 2016&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Administrivia&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A01 posted, due May 11&lt;/li&gt;
  &lt;li&gt;A01 study exercises posted on Learn. Not to be handed in, extra practice&lt;/li&gt;
  &lt;li&gt;Course staff office hours posted on Learn&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Goals for Today&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Up to Slide 50, at least up to truth tables&lt;/li&gt;
  &lt;li&gt;Syntax - Propositional&lt;/li&gt;
  &lt;li&gt;Semantics - Propositional&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Atomic and Compound Propositions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In propositional logic, simple &lt;strong&gt;atomic&lt;/strong&gt; propositions are the basic building blocks. We connect atomic propositions into &lt;strong&gt;compound&lt;/strong&gt; propositions, and then analyze sets of interrelated propositions. Typical questions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Does a given sequence of propositions form a valid argument?&lt;/li&gt;
  &lt;li&gt;Can all propositions in a given set be true simultaneously?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;First, we must answer the Q: What is a proposition?&lt;br /&gt;
Propositions are represented by &lt;strong&gt;formulas&lt;/strong&gt;. A formula consists of a sequence of &lt;strong&gt;symbols&lt;/strong&gt;. There are 3 kinds of symbols:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Propositional variables: usually lower case Latin  letters (e.g. p, q, r) perhaps with subscripts&lt;/li&gt;
  &lt;li&gt;Connectives: We shall use negation, ^(and), v(or), -&amp;gt; and &amp;lt;-&amp;gt; (Others are possible)&lt;/li&gt;
  &lt;li&gt;Punctuation: Only two, ( and ) (we could avoid them)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Every formula is a sequence of symbols, but not every sequence of symbols is a formula. We call an arbitrary finite sequence of symbols an &lt;strong&gt;expression&lt;/strong&gt; (or &lt;strong&gt;string&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;An expression is a finite sequence of symbols. The &lt;strong&gt;length&lt;/strong&gt; of an expression is its number of symbols. We often use a letter that is not formally a symbol in order to name an expression. For example, alpha. This is an example of a “meta-symbol”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some terminology for expressions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Two expressions a and b are &lt;strong&gt;equal&lt;/strong&gt; written as a=b, iff they are of the same length, say n, and if n&amp;gt;0, then for all i in [1…n] the i-th symbol of a is the same as the i-th symbol of b.&lt;/p&gt;

&lt;p&gt;We write ab to mean the &lt;strong&gt;concatenation&lt;/strong&gt; of two expressions a and b.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Formal Definition of Concatenation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If a is an expression of length i and b is an expression of length j, then ab is an expression of length i+j. We have the k-th symbol of ab is:
    + if k &amp;lt;= i, the k-th symbol of a
    + if k &amp;gt; i, the (k - i)-th symbol of b&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Definition of “Formula”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let P be a set of propositional variables. We define the set of formulas over P inductively as follows.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;An expression consisting of a single symbol of P is a formula&lt;/li&gt;
  &lt;li&gt;If phi is a formula, then the negation of phi is a formula&lt;/li&gt;
  &lt;li&gt;If phi is a formula and eta is a formula, then each of (phi and eta), (phi or eta), (phi -&amp;gt; eta), and (phi &amp;lt;-&amp;gt; eta) is a formula&lt;/li&gt;
  &lt;li&gt;Nothing else is a formula&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;(Note the use of meta-symbols phi and eta)&lt;/p&gt;

&lt;p&gt;The following are well-formed formulas.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;p,q,r,s (rule 1)&lt;/li&gt;
  &lt;li&gt;(not p) (rule 2, from #1)&lt;/li&gt;
  &lt;li&gt;(r ^ q) (rule 3, from #1)&lt;/li&gt;
  &lt;li&gt;((not p) -&amp;gt; s) (rule 3, from #2 and #1)&lt;/li&gt;
  &lt;li&gt;((r ^ q) v ((not p) -&amp;gt; s)) (rule 3, from #3 and #4)&lt;/li&gt;
  &lt;li&gt;(not (r ^ q)) (rule 2, from #3)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;The 6 Kinds of Formulas&lt;/strong&gt;
From the definition, we see that there are six kinds of formulas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A propositional variable = ATOM&lt;/li&gt;
  &lt;li&gt;A formula (not phi) = NEGATION&lt;/li&gt;
  &lt;li&gt;A formula (phi ^ eta) = CONJUNCTION&lt;/li&gt;
  &lt;li&gt;A formula (phi v eta) = DISJUNCTION&lt;/li&gt;
  &lt;li&gt;A formula (phi -&amp;gt; eta) = IMPLICATION&lt;/li&gt;
  &lt;li&gt;A formula (phi &amp;lt;-&amp;gt; eta) = EQUIVALENCE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Q: Can a formula have two or more kinds? No.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Semantics of Propositional Logic&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;semantics&lt;/strong&gt; of a logic describes how to interpret the well-formed formulas of the logic. The semantics of propositional logic is “compositional”: the meaning of a whole formula derives from the meaning of its parts. In propositional logic, we need to give meaning to atoms, connectives, and formulae. For example, the interpretation of the formula (p ^ q) depends on three things, the meaning of p, the meaning of q, and the meaning of ^.&lt;/p&gt;

&lt;p&gt;Definition: A &lt;strong&gt;truth evaluation&lt;/strong&gt; is a function (P -&amp;gt; {T, F}) with the set of all proposition symbols as domain and {F, T} as range. A truth eval assigns a value to every propositional variable. If t(p) = T, then we say “t makes p true”, if t(p) = F, then we say “t makes p false”. A propositional variable has no intrinsic meaning. It gets a meaning only via an evaluation.&lt;/p&gt;

&lt;p&gt;Formally, a connective represents a function from truth values to truth values. The connective (not) is unary; it maps one value to one value. The other connectives are binary, they map two values to one value.&lt;/p&gt;

&lt;p&gt;-&amp;gt; : “Truth is Preserved”; if there is not truth to preserve, the meaning is T. T-&amp;gt;F is F because truth is not preserved.&lt;br /&gt;
E.g. “If everyone is a child, then the moon is made of blue cheese” comes out true (seems non-sensical, but propositional logic gives &lt;strong&gt;every formula&lt;/strong&gt; a meaning)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summary of the Value of a Formula&lt;/strong&gt;
Fix a truth evaluation t. Every formula phi has a value under t, denoted phi&lt;sup&gt;t&lt;/sup&gt;, determined as follows:
1. p&lt;sup&gt;t&lt;/sup&gt; = t(p)
2. (not phi)&lt;sup&gt;t&lt;/sup&gt; =
    + T if phi&lt;sup&gt;t&lt;/sup&gt; = F
    + F if phi&lt;sup&gt;t&lt;/sup&gt; = T
3. (phi ^ eta)&lt;sup&gt;t&lt;/sup&gt; =
    + T if phi&lt;sup&gt;t&lt;/sup&gt; = eta&lt;sup&gt;t&lt;/sup&gt; = T
    + F otherwise
4. (phi v eta)&lt;sup&gt;t&lt;/sup&gt; =
    + T if phi&lt;sup&gt;t&lt;/sup&gt; = T or if eta&lt;sup&gt;t&lt;/sup&gt; = T
    + F otherwise
5. (phi -&amp;gt; eta)&lt;sup&gt;t&lt;/sup&gt; =
    + T if phi&lt;sup&gt;t&lt;/sup&gt; = F or if eta&lt;sup&gt;t&lt;/sup&gt; = T
    + F otherwise
6. (phi &amp;lt;-&amp;gt; eta)&lt;sup&gt;t&lt;/sup&gt; =
    + T if phi&lt;sup&gt;t&lt;/sup&gt; = eta&lt;sup&gt;t&lt;/sup&gt;
    + F otherwise&lt;/p&gt;

&lt;p&gt;The value of a formula comes from the values of its variables, combined as given by its connectives. The valuation t is necessary. WIthout a valuation, a formula has no value.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Unique Readability of Formulae&lt;/strong&gt;
We have defined the semantics of a formula forom its ysyntax. Is this &lt;strong&gt;well-defined&lt;/strong&gt;? Or can a formula get two different meanings, i.e. ambiguous?&lt;/p&gt;

&lt;p&gt;Theorem. Every formula has a unique derivation as a well-formed formula. That is, each formula has exactly one of the six forms:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;an atom&lt;/li&gt;
  &lt;li&gt;(not phi)&lt;/li&gt;
  &lt;li&gt;(phi ^ eta)&lt;/li&gt;
  &lt;li&gt;(phi v eta)&lt;/li&gt;
  &lt;li&gt;(phi -&amp;gt; eta)&lt;/li&gt;
  &lt;li&gt;(phi &amp;lt;-&amp;gt; eta)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We prove this by mathematical induction.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Review of Induction&lt;/strong&gt;
Suppose P names a property. We write P(2) to mean “2 has property P”, or “P holds for 2”.&lt;/p&gt;

&lt;p&gt;A statement “every natural number has property P” corresponds to a sequence of statements:&lt;br /&gt;
P(0), P(1), P(2), P(3),…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Principles of Mathematical Induction&lt;/strong&gt;
Suppose we establish two things: that
    + 0 has property P, and that
    + whenever any number has property P, then the next number also has property P.
Then we may conclude that every natural number has property P.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Techniques&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To talk about something, give it a name.&lt;br /&gt;
E.g. property P, number k&lt;/li&gt;
  &lt;li&gt;A formula is a textual object. We can subsitute one symbol or expression for another&lt;/li&gt;
  &lt;li&gt;The induction principle gives a template:
    &lt;ul&gt;
      &lt;li&gt;proof has 2 parts: basis and inductive step&lt;/li&gt;
      &lt;li&gt;In the inductive step, hypothesize P(k) and prove P(k+1)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;may-6-2016---tutorial-1&quot;&gt;May 6, 2016 - Tutorial 1&lt;/h2&gt;

&lt;p&gt;A few exercises of truth tables, translations, and structural induction:&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;my-10-2016---lecture-3&quot;&gt;My 10, 2016 - Lecture 3&lt;/h2&gt;

&lt;h2 id=&quot;induction-continued&quot;&gt;Induction Continued&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;structural induction (proving facts about formulae)
    &lt;ul&gt;
      &lt;li&gt;prove unique readbility&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;equivalence (semantic)&lt;/li&gt;
  &lt;li&gt;entailment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note: The negation of an atomic proposition is no longer an atomic proposition.&lt;/p&gt;

&lt;h2 id=&quot;structural-induction&quot;&gt;Structural Induction&lt;/h2&gt;

&lt;p&gt;A formula (anything built according to the inductive definition of a formula (4 rules)) is not a natural number, but it suffices to prove any one of the following:
    + For every natural number n, every formula with n or fewer &lt;strong&gt;symbols&lt;/strong&gt; has property P
    + For every natural number n, every formula with n or fewer &lt;strong&gt;connectives&lt;/strong&gt; has property P&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Theorem (Principle of Structural Induction): Let R be a property. Suppose that&lt;br /&gt;
    1. For each atomic formula p, we have R(p)&lt;br /&gt;
    2. For each formula phi, if R(phi) then R((not phi))&lt;br /&gt;
    3. For each pair of formulae phi and eta, and each connective *, if R(phi) and R(eta) then R((phi * eta))&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Then R(phi) for every formula phi.&lt;/p&gt;

&lt;p&gt;It is a special case of mathematical induction.&lt;/p&gt;

&lt;p&gt;Example:&lt;br /&gt;
&lt;strong&gt;Lemma: Every well-formed formula has an equal number of left and right parentheses&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Proof: Use structural induction. The property to prove is R(phi): phi has an equal number of left and right parentheses for every formula phi&lt;/p&gt;

&lt;p&gt;Base case: phi is an atom. phi has no parentheses - only a propositional variable. Thus R(phi) holds.&lt;/p&gt;

&lt;p&gt;IH: Formulae phi and eta both have property R.&lt;/p&gt;

&lt;p&gt;IS: We need to prove each of the formulae (not phi), (phi ^ eta), (phi v eta), (phi -&amp;gt; eta) and (phi &amp;lt;-&amp;gt; eta). WLOG, consider (phi ^ eta)&lt;/p&gt;

&lt;p&gt;Notation: For any formula zeta, let op(zeta) denote the number of ‘(‘ in zeta, and let cl(zeta) denote the number of ‘)’ in zeta.&lt;/p&gt;

&lt;p&gt;We calculate&lt;br /&gt;
op((phi ^ eta)) = 1 + op(phi) + op(eta)
= 1 + cl(phi) + cl(eta) (R(phi) and R(eta))
= cl((phi ^ eta))&lt;/p&gt;

&lt;p&gt;(Also prove the unary NOT case)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Unique Readability Proof&lt;/strong&gt;&lt;br /&gt;
Theorem: Every formula is exactly one of the six kinds, and in each case it is of that form in &lt;strong&gt;exactly one&lt;/strong&gt; way.&lt;/p&gt;

&lt;p&gt;Proof:&lt;br /&gt;
Add in more stuff to the proof (1. the first symbol of phi is either ‘(‘ or a variable; 2. phi has an equal number of ‘(‘ and ‘)’, and each proper prefix of phi has more ‘(‘ than ‘)’  (parentheses are balanced))&lt;/p&gt;

&lt;p&gt;A proper prefix of phi is a non-empty expression x such that phi is xy for some non-empty expression y.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Property P(n):&lt;/strong&gt; 1, 2, and 3. phi has unique construction as a formula, which is what we are trying to prove here.&lt;/p&gt;

&lt;p&gt;Aside: To Show x is unique:&lt;br /&gt;
1) Let x’ have same properties as x&lt;br /&gt;
2) Prove x’ = x&lt;/p&gt;

&lt;p&gt;Let phi be an arbitrary formula. We prove for any natural number n, every formula phi&lt;/p&gt;

&lt;p&gt;Base cases:&lt;br /&gt;
Case 1: k=0 binary connective symbols. We prove by induction on the number of unary connective symbols (i.e. NOT) in phi
    + Base (0 NOTs): the only possibility is phi = p, for some propositional variable p. Then phi has properties 1, 2, 3 (thus R) (2. No proper prefixes)
    + IH: (&amp;gt; 0 NOTs):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tautology, Contradiction, and Satisfiable&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A formula alpha is a &lt;strong&gt;tautology&lt;/strong&gt; iff for every truth eval t, alpha&lt;sup&gt;t&lt;/sup&gt; = T. Evaluates to true under any circumstances.&lt;/p&gt;

&lt;p&gt;A formula alpha is a &lt;strong&gt;contradiction&lt;/strong&gt; (aka unsatisifiable) iff for every truth eval t, alpha&lt;sup&gt;t&lt;/sup&gt; = F. Evaluates to false under any circumstances.&lt;br /&gt;
E.g. p ^ NOT p&lt;/p&gt;

&lt;p&gt;A formula alpha is a &lt;strong&gt;satisfiable&lt;/strong&gt; iff it is not a contradiction. Evaluates to at least one true under all circumstances.&lt;/p&gt;

&lt;p&gt;How to prove that a formula is a tautology? One method is to fill out a truth table. Can we do better? We can analyze what would happen if we did. We can use a &lt;strong&gt;valuation tree&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-12-2016---lecture-4&quot;&gt;May 12, 2016 - Lecture 4&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Equivalence&lt;/li&gt;
  &lt;li&gt;Entailment&lt;/li&gt;
  &lt;li&gt;Adequate sets of connectives&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Equivalent formulae have the same final column in their truth tables - they have the same value under any valuation.&lt;/p&gt;

&lt;p&gt;Recall a valuation t is a function t: P-&amp;gt;{T, F}, i.e. a assignment of F or T to very propositional variable&lt;/p&gt;

&lt;p&gt;Commutativity, Associativity, Distributivity, Idempotence, Double Negation, DML,&lt;/p&gt;
</description>
        <pubDate>Mon, 02 May 2016 18:56:00 -0400</pubDate>
        <link>http://dzed.me/notes/2016/05/02/Cs-245.html</link>
        <guid isPermaLink="true">http://dzed.me/notes/2016/05/02/Cs-245.html</guid>
        
        
        <category>notes</category>
        
      </item>
    
      <item>
        <title>Course Planning</title>
        <description>&lt;p&gt;3 Winter terms, 1 Spring term, 1 Fall term&lt;/p&gt;

&lt;h2 id=&quot;b---winter-2017&quot;&gt;2B - Winter 2017&lt;/h2&gt;
&lt;p&gt;CS 240 - Data Structures and Data Management&lt;br /&gt;
CS 241 - Foundations of Sequential Programs&lt;br /&gt;
CS 251 - Computer Organization and Design&lt;br /&gt;
MATH 239 - Introduction to Combinatorics&lt;br /&gt;
CO 250 - Introduction to Optimization&lt;/p&gt;

&lt;h2 id=&quot;a---fall-2017&quot;&gt;3A - Fall 2017&lt;/h2&gt;
&lt;p&gt;CS 341 - Algorithms&lt;br /&gt;
CS 350 - Operating Systems&lt;br /&gt;
STAT 341 - Computational Statistics and Data Analysis&lt;br /&gt;
SCI 206 - The Physics of How Things Work &lt;br /&gt;
ENGL 306A - Introduction to Linguistics&lt;/p&gt;

&lt;h2 id=&quot;b---spring-2018&quot;&gt;3B - Spring 2018&lt;/h2&gt;
&lt;p&gt;CS 486 - Introduction to Artificial Intelligence&lt;br /&gt;
STAT 440 - Computational Inference&lt;br /&gt;
CS 370 - Numerical Computation&lt;/p&gt;

&lt;h2 id=&quot;a---winter-2019&quot;&gt;4A - Winter 2019&lt;/h2&gt;
&lt;p&gt;CS 456 - Computer Networks&lt;br /&gt;
CS 343 - Concurrent and Parallel Programming&lt;br /&gt;
CS 485 - Machine Learning: Statistical and Computational Foundations&lt;/p&gt;

&lt;h2 id=&quot;b---winter-2020&quot;&gt;4B - Winter 2020&lt;/h2&gt;
&lt;p&gt;CS 452 - Real-time Programming&lt;/p&gt;
</description>
        <pubDate>Mon, 02 May 2016 00:00:00 -0400</pubDate>
        <link>http://dzed.me/2016/05/02/course-planning.html</link>
        <guid isPermaLink="true">http://dzed.me/2016/05/02/course-planning.html</guid>
        
        
      </item>
    
  </channel>
</rss>
